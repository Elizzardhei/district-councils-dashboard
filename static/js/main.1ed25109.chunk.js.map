{"version":3,"sources":["../node_modules/encoding/lib sync","components/atom/UnstyledLink.js","utils/responsive.js","components/atom/MobileAppBar.js","components/atom/DesktopAppBar.js","components/NavBar.js","utils/features.js","components/AddressSearcher.js","components/search/DistrictSelector.js","pages/search/index.js","pages/profile/index.js","components/OLMap.js","components/district/DistrictCard.js","components/district/MainAreas.js","components/BorderLinearProgress.js","components/district/CandidateList.js","helpers/candidate.js","components/district/VoterTurnoutChart.js","components/TreeMap.js","components/WaffleChart.js","components/district/Metrics.js","pages/district/index.js","pages/battleground/index.js","ui/theme/index.js","pages/notfound/index.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","UnstyledLink","styled","Link","_templateObject","bps","createBreakpoints","createMuiTheme","StyledAppBar","AppBar","MobileAppBar_templateObject","up","StyledToolbar","Toolbar","_templateObject2","AppBarTitle","_templateObject3","Transition","React","forwardRef","props","ref","react_default","a","createElement","Slide","Object","assign","direction","displayName","StyledListItem","ListItem","_templateObject4","ListItemLink","button","component","NavList","List","_templateObject5","NavText","Typography","_templateObject6","MobileAppBar","_React$useState","useState","_React$useState2","slicedToArray","open","setOpen","navs","handleClose","Fragment","position","color","Container","disableGutters","RouterLink","to","IconButton","edge","aria-label","onClick","Menu_default","Dialog","fullScreen","onClose","TransitionComponent","style","flexGrow","Close_default","map","nav","i","_React$createElement","key","defineProperty","url","ListItemText","primary","variant","title","DesktopAppBar_templateObject","down","DesktopAppBar_templateObject2","NavLink","DesktopAppBar_templateObject3","DesktopAppBar","DesktopAppBar_StyledAppBar","maxWidth","DesktopAppBar_AppBarTitle","NavBar","atom_MobileAppBar","atom_DesktopAppBar","Component","getAllFeaturesFromPoint","point","featuresArray","arguments","length","undefined","dc2003","dc2007","dc2011","dc2015","dc2019","pt","turf","lng","lat","feature","polygonProps","n","features","poly","geometry","coordinates","objectSpread","properties","year","name","split","renderInputComponent","inputProps","classes","_inputProps$inputRef","inputRef","other","objectWithoutProperties","TextField","fullWidth","InputProps","node","input","disableUnderline","endAdornment","InputAdornment","className","searchButton","Search_default","renderSuggestion","suggestion","_ref","query","isHighlighted","matches","match","label","parts","parse","MenuItem","selected","part","index","highlight","String","fontWeight","text","getSuggestionValue","IntegrationAutosuggest","state","value","suggestions","handleSuggestionsFetchRequested","_ref2","_this","getSuggestions","then","result","setState","handleSuggestionsClearRequested","handleChange","event","_ref3","newValue","handleSuggestionSelected","_ref4","suggestionValue","suggestionIndex","sectionIndex","method","handleAddressSelected","coordinate","inputValue","trim","toLowerCase","AddressParser","records","filter","_","record","fullAddress","LANG_ZH","_this2","this","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","root","dist_default","placeholder","onChange","popperNode","InputLabelProps","shrink","theme","suggestionsList","suggestInput","renderSuggestionsContainer","options","Paper","square","containerProps","width","children","withStyles","height","container","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","display","margin","padding","listStyleType","borderRadius","boxShadow","backgroundColor","textDecoration","div","DistrictSelector_templateObject","SideBar","Box","DistrictSelector_templateObject2","MainContent","DistrictSelector_templateObject3","SideBarItem","Button","DistrictSelector_templateObject4","DistrictContainer","DistrictSelector_templateObject5","DistrictSelector","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderDCCA","district","dcca","concat","selectedDistrict","DistrictSelector_Container","area","dccode","dname_chi","StyledDivier","Divider","search_templateObject","search_templateObject2","RowContainer","search_templateObject3","ContentRowContainer","search_templateObject4","TabButton","search_templateObject5","active","ContentContainer","search_templateObject6","LandingIcon","_templateObject7","SearchPage","handlePeopleSelected","history","push","lastest","pop","CACODE","autoCompleteList","selectedTab","evt","target","tab","AddressSearcher","search_DistrictSelector","isSearchPeople","console","log","search_Container","onTabSelected","bind","renderSearchPeople","renderSearchDistrict","withTheme","GET_PEOPLE_PROFILE","gql","profile_templateObject","commonFontStyle","css","profile_templateObject2","CandidateName","profile_templateObject3","DistrictName","profile_templateObject4","FlexRowContainer","profile_templateObject5","CandidateHeaderContainer","profile_templateObject6","CandidateAvatar","Avatar","profile_templateObject7","BasicInfoHeader","_templateObject8","ElectionHistoryContainer","_templateObject9","ElectionHistoryHeader","_templateObject10","YearDiv","_templateObject11","ElectionHistoryPaper","_templateObject12","ElectionHistoryContentGrid","Grid","_templateObject13","ElectionHistoryContentSpan","_templateObject14","ElectionHistoryContentHeaderSpan","_templateObject15","ElectionDetailButton","_templateObject16","BasicInfoGridContainer","_templateObject17","BasicInfoGridHeader","_templateObject18","BasicInfoGridContent","_templateObject19","ProfilePage","handleElectionDetailButton","election","yob","item","xs","md","constituency","name_zh","cacode","camp","vote_percentage","is_won","_this3","params","homeUrl","react_apollo_esm","variables","loading","error","data","person","dc_people","sm","src","imgProps","onError","name_en","gender","estimated_yob","moment","elections","occupation","sort","b","renderElectionInfoCard","MapContainer","OLMap_templateObject","regionStyle","Style","fill","Fill","stroke","Stroke","Text","font","highlightStyle","OLMap","handleMapClick","_this$props","changeDistrict","selectedFeature","getFeatures","highlightFeature","get","getView","fit","getGeometry","getExtent","duration","featuresLayer","_this$props2","dc","find","d","isDCDataExist","featureSource","VectorSource","GeoJSON","readFeatures","VectorLayer","source","getText","setText","getProperties","layers","TileLayer","XYZ","Map","refs","mapContainer","view","View","projection","center","zoom","featureOverlay","extent","size","getSize","select","Select","addInteraction","on","highlightedFeature","getSource","removeFeature","addFeature","DistrictCard_templateObject","InnerContainer","DistrictCard_templateObject2","YearText","DistrictCard_templateObject3","RegionText","DistrictCard_templateObject4","CodeText","DistrictCard_templateObject5","DistrictCard_templateObject6","SeperatedRow","DistrictCard_templateObject7","DistrictCard","onPrevElection","ArrowBack_default","Date","getFullYear","onNextElection","ArrowForward_default","councillor","candidates","politicalAffiliation","electedCandidate","candidate","political_affiliations","political_affiliation","getCouncillor","DistrictCard_Container","border","renderPrevElectionButton","gutterBottom","renderNextElectionButton","DistrictCard_StyledDivier","MainAreas_templateObject","MainAreas","areas","MainAreas_Container","flexWrap","alignContent","mr","useStyles","makeStyles","BorderLinearProgress","lighten","bgColor","bar","LinearProgress","CustomizedProgressBars","fontBoldStyle","CandidateList_templateObject","fontNormalStyle","CandidateList_templateObject2","OvalButton","CandidateList_templateObject3","CandidateList_templateObject4","RowsContainer","CandidateList_templateObject5","CandidateList_templateObject6","FlexColumn","CandidateList_templateObject7","AvatarColumn","CandidateList_templateObject8","NameColumn","CandidateList_templateObject9","PoliticalColumn","CandidateList_templateObject10","CandidateList_templateObject11","CandidateListTitle","CandidateList_templateObject12","CandidateList_templateObject13","BlueVoteContainer","CandidateList_templateObject14","RedVoteContainer","CandidateList_templateObject15","ContentHeader","CandidateList_templateObject16","Content","CandidateList_templateObject17","CandidateList","CandidateList_Container","candidate_number","CandidateList_StyledDivier","CandidateList_FlexRowContainer","handleCandidateSelected","p","CandidateList_CandidateName","err","getCamp","pa","getPoliticalAffiliation","votes","parseFloat","zingchart","MODULESDIR","chartJSON","chartData","male","female","values","titles","val","isNaN","parseInt","join","type","stacked","stack-type","x","y","align","subtitle","bold","font-size","font-color","background-color","plot","bar-width","hover-state","visible","animation","delay","sequence","valueBox","rules","rule","decimals","scale-x","tick","guide","scale-y","short","line-color","line-style","series","tooltip","VoterTurnoutChart","render","nextProps","nextState","JSON","stringify","exec","WaffleChart","total","squareValue","theData","d3","population","forEach","units","Math","round","percentage","floor","Array","groupIndex","append","attr","squareSize","selectAll","enter","row","col","legend","drawChart","QUERY_FETCH_VOTES","Metrics_templateObject","Metrics_templateObject2","_data$dc_constituenci","dc_constituencies","voteStats","voteStat","total_votes","total_voters","total_voted_voters","population_excluded_foreign_worker","population_excluded_foreign_worker_lte_age_15","_ref$person","getDataFromWaffleChart","vote_stat","stats","station_stats","barVote","reduce","acc","cur","age","Metrics_Container","district_VoterTurnoutChart","components_WaffleChart","GET_DISTRICTS","district_templateObject","FullWidthBox","district_templateObject2","LowerBackgroundContainer","district_templateObject3","district_templateObject4","DistrictCardContainer","district_templateObject5","DistrictPage","candidateId","handleChangeDistrict","_this$props$match$par","_this$props$match$par2","_this$props$match$par3","electionYear","district_FlexRowContainer","components_OLMap","district_DistrictCard","district_MainAreas","main_areas","Metrics","district_CandidateList","battleground_templateObject","battleground_templateObject2","battleground_templateObject3","battleground_templateObject4","battleground_templateObject5","BattleGroundPage","_this$props$match$par4","battleground_FlexRowContainer","battleground_DistrictCardContainer","battleground_FullWidthBox","battleground_LowerBackgroundContainer","typography","useNextVariants","fontSize","fontFamily","h1","h2","h3","h4","h5","h6","body1","palette","light","main","dark","secondary","background","default","NotFoundPage","MuiThemeProvider_default","href","content","client","ApolloClient","uri","App","CssBaseline","components_NavBar","react_router","exact","path","NotfoundPage","toolbar","mixins","ReactDOM","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1ed25109.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 367;","import styled from 'styled-components'\nimport Link from '@material-ui/core/Link'\n\nconst UnstyledLink = styled(Link)`\n  text-decoration: unset;\n  color: unset;\n  font-style: unset;\n  cursor: pointer;\n`\n\nexport default UnstyledLink\n","import createBreakpoints from '@material-ui/core/styles/createBreakpoints'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n\nexport const bps = createBreakpoints({})\n\nexport const headingFontFamily = 'Source Serif Pro, sans-serif'\nexport const bodyFontFamily = 'PT Serif, sans-serif'\n\nexport const fontFamily = ['PingFangTC-Semibold', 'PingFangTC-Medium']\n\nexport const typography = {}\n\nexport const theme = createMuiTheme()\n","import React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport styled from 'styled-components'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport CloseIcon from '@material-ui/icons/Close'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport UnstyledLink from './UnstyledLink'\nimport { bps } from '../../utils/responsive'\n\nconst StyledAppBar = styled(AppBar)`\n  && {\n    width: 100%;\n    background-color: white;\n    box-shadow: none;\n    ${bps.up('md')} {\n      display: none;\n    }\n  }\n`\n\nconst StyledToolbar = styled(Toolbar)`\n  && {\n    display: flex;\n  }\n`\n\nconst AppBarTitle = styled(UnstyledLink)`\n  && {\n    font-weight: 700;\n    flex-grow: 1;\n    text-decoration: none;\n  }\n`\n\nconst Transition = React.forwardRef((props, ref) => (\n  <Slide direction=\"left\" ref={ref} {...props} />\n))\nTransition.displayName = 'Transition'\n\nconst StyledListItem = styled(ListItem)`\n  && {\n    padding: 1rem 1rem;\n  }\n`\n\nfunction ListItemLink(props) {\n  return <StyledListItem button component={UnstyledLink} {...props} />\n}\n\nconst NavList = styled(List)`\n  && {\n    padding: 0 1rem;\n  }\n`\n\nconst NavText = styled(Typography)`\n  && {\n    display: inline;\n    font-weight: 700;\n    margin: 0 1.5rem -5px;\n    border-bottom: 5px solid #ffee4f;\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`\n\nfunction MobileAppBar(props) {\n  const [open, setOpen] = React.useState(false)\n  const { navs } = props\n\n  function handleClickOpen() {\n    setOpen(true)\n  }\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <StyledAppBar position=\"sticky\" color=\"default\">\n        <Container>\n          <StyledToolbar disableGutters>\n            <AppBarTitle component={RouterLink} to=\"/\">\n              Vote for Hong Kong\n            </AppBarTitle>\n            <IconButton\n              edge=\"end\"\n              component=\"span\"\n              color=\"default\"\n              aria-label=\"Menu\"\n              onClick={handleClickOpen}\n            >\n              <MenuIcon />\n            </IconButton>\n          </StyledToolbar>\n        </Container>\n      </StyledAppBar>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <Toolbar>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n        <NavList>\n          {navs.map((nav, i) => (\n            <ListItemLink\n              key={i}\n              component={RouterLink}\n              to=\"/\"\n              to={nav.url}\n              onClick={handleClose}\n            >\n              <ListItemText\n                primary={<NavText variant=\"h2\">{nav.title}</NavText>}\n              />\n            </ListItemLink>\n          ))}\n        </NavList>\n      </Dialog>\n    </>\n  )\n}\n\nexport default MobileAppBar\n","import React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport styled from 'styled-components'\nimport Container from '@material-ui/core/Container'\nimport { bps } from '../../utils/responsive'\nimport UnstyledLink from './UnstyledLink'\n\nconst StyledAppBar = styled(AppBar)`\n  && {\n    width: 100%;\n    background-color: white;\n    box-shadow: none;\n    ${bps.down('sm')} {\n      display: none;\n    }\n  }\n`\n\nconst AppBarTitle = styled(UnstyledLink)`\n  && {\n    font-weight: 700;\n    text-decoration: none;\n    margin-right: 5rem;\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`\n\nconst NavLink = styled(UnstyledLink)`\n  && {\n    margin: 0 1.5rem -5px;\n    border-bottom: 5px solid transparent;\n\n    &:hover {\n      border-bottom: 5px solid #ffee4f;\n      text-decoration: none;\n    }\n  }\n`\n\nfunction DesktopAppBar(props) {\n  const { navs } = props\n  return (\n    <>\n      <StyledAppBar position=\"sticky\" color=\"default\">\n        <Container maxWidth=\"lg\">\n          <Toolbar disableGutters>\n            <AppBarTitle component={RouterLink} to=\"/\">\n              Vote for Hong Kong\n            </AppBarTitle>\n            {navs.map((nav, i) => (\n              <NavLink key={i} component={RouterLink} to={nav.url}>\n                {nav.title}\n              </NavLink>\n            ))}\n          </Toolbar>\n        </Container>\n      </StyledAppBar>\n    </>\n  )\n}\n\nexport default DesktopAppBar\n","import React, { Component } from 'react'\nimport MobileAppBar from './atom/MobileAppBar'\nimport DesktopAppBar from './atom/DesktopAppBar'\n\nconst navs = [\n  { url: '/', title: 'Search' },\n  { url: '/', title: 'District' },\n  { url: '/', title: 'People' },\n]\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <>\n        <MobileAppBar navs={navs} />\n        <DesktopAppBar navs={navs} />\n      </>\n    )\n  }\n}\n\nexport default NavBar\n","import * as turf from '@turf/turf'\n\nimport dc2003 from '../data/DCCA_2003'\nimport dc2007 from '../data/DCCA_2007'\nimport dc2011 from '../data/DCCA_2011'\nimport dc2015 from '../data/DCCA_2015'\nimport dc2019 from '../data/DCCA_2019'\n\nexport const getAllFeaturesFromPoint = (\n  point,\n  featuresArray = [dc2003, dc2007, dc2011, dc2015, dc2019]\n) => {\n  const pt = turf.point([point.lng, point.lat])\n  const result = featuresArray.map(feature => {\n    let polygonProps = {}\n    for (let i = 0, n = feature.features.length; i < n; i++) {\n      const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\n      if (turf.booleanPointInPolygon(pt, poly)) {\n        polygonProps = { ...feature.features[i].properties }\n        break\n      }\n    }\n    return {\n      year: feature.name.split('_')[1],\n      ...polygonProps,\n    }\n  })\n  return result\n}\n","import React from 'react'\nimport PropTypes, { instanceOf } from 'prop-types'\nimport Autosuggest from 'react-autosuggest'\nimport match from 'autosuggest-highlight/match'\nimport parse from 'autosuggest-highlight/parse'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { withStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport * as AddressParser from 'hk-address-parser-lib'\nimport { getAllFeaturesFromPoint } from '../utils/features'\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps\n\n  return (\n    <>\n      <TextField\n        fullWidth\n        InputProps={{\n          inputRef: node => {\n            ref(node)\n            inputRef(node)\n          },\n          classes: {\n            input: classes.input,\n          },\n          disableUnderline: true,\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton className={classes.searchButton} aria-label=\"Search\">\n                <SearchIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n        disableUnderline={true}\n        {...other}\n      />\n    </>\n  )\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query)\n  const parts = parse(suggestion.label, matches)\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      {parts.map((part, index) =>\n        part.highlight ? (\n          <span key={String(index)} style={{ fontWeight: 500 }}>\n            {part.text}\n          </span>\n        ) : (\n          <strong key={String(index)} style={{ fontWeight: 300 }}>\n            {part.text}\n          </strong>\n        )\n      )}\n    </MenuItem>\n  )\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label\n}\n\nconst styles = theme => ({\n  root: {\n    height: 100,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    // left: 0,\n    // right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  suggestInput: {\n    height: '60px',\n    borderRadius: '4px',\n    boxShadow: '0 2px 16px 0 rgba(0, 0, 0, 0.1)',\n    backgroundColor: '#ffffff',\n    padding: '10px 20px',\n  },\n  input: {\n    textDecoration: 'none',\n  },\n  searchButton: {\n    color: '#ffd731',\n  },\n})\n\nclass IntegrationAutosuggest extends React.Component {\n  state = {\n    value: '',\n    suggestions: [],\n  }\n\n  async getSuggestions(value) {\n    const inputValue = value.trim().toLowerCase()\n    const inputLength = inputValue.length\n\n    if (inputLength > 0) {\n      const records = await AddressParser.parse(inputValue)\n      const result = records\n        .filter((_, index) => index < 10)\n        .map(record => ({\n          coordinate: record.coordinate(),\n          label: record.fullAddress(AddressParser.Address.LANG_ZH),\n        }))\n\n      return result\n    }\n\n    return []\n  }\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    this.getSuggestions(value).then(result => {\n      this.setState({\n        suggestions: result,\n      })\n    })\n  }\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    })\n  }\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    })\n  }\n\n  handleSuggestionSelected = (\n    event,\n    { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }\n  ) => {\n    this.props.handleAddressSelected(\n      getAllFeaturesFromPoint(suggestion.coordinate)\n    )\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      onSuggestionSelected: this.handleSuggestionSelected,\n      getSuggestionValue,\n      renderSuggestion,\n    }\n\n    return (\n      <div className={classes.root}>\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            placeholder: '尋找選區...',\n            value: this.state.value,\n            onChange: this.handleChange('value'),\n            inputRef: node => {\n              this.popperNode = node\n            },\n            InputLabelProps: {\n              shrink: true,\n            },\n          }}\n          theme={{\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n            input: classes.suggestInput,\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper\n              square\n              {...options.containerProps}\n              style={{\n                width: '100%',\n              }}\n            >\n              {options.children}\n            </Paper>\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(IntegrationAutosuggest)\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport area from '../../data/area'\nimport district from '../../data/district'\nimport Button from '@material-ui/core/Button'\nimport { NavLink } from 'react-router-dom'\n\nconst Container = styled.div`\n   {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n  }\n`\n\nconst SideBar = styled(Box)`\n  && {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    min-width: 200px;\n    max-width: 200px;\n  }\n`\n\nconst MainContent = styled(Box)`\n  && {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: baseline;\n    padding-left: 32px;\n    padding-right: 32px;\n    flex-grow: 1;\n  }\n`\n\nconst SideBarItem = styled(Button)`\n  && {\n    width: 100%;\n  }\n`\n\nconst DistrictContainer = styled(Button)`\n  && {\n    width: 120px;\n    justify-content: left;\n  }\n`\n\nclass DistrictSelector extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedDistrict: null,\n    }\n  }\n  renderDCCA = code => {\n    if (!code) return null\n    return (\n      <div>\n        {Object.keys(district['2019'][code]).map(dcca => {\n          return (\n            <DistrictContainer\n              component={NavLink}\n              to={`/district/2019/${dcca}`}\n              key={district['2019'][code][dcca].code}\n              color=\"secondary\"\n            >\n              <Typography variant=\"h6\">\n                {district['2019'][code][dcca].name}\n              </Typography>\n            </DistrictContainer>\n          )\n        })}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"lg\">\n        <SideBar>\n          {area.map(a => (\n            <SideBarItem\n              key={a.dccode}\n              color=\"primary\"\n              onClick={() => this.setState({ selectedDistrict: a.dccode })}\n            >\n              {a.dname_chi}\n            </SideBarItem>\n          ))}\n        </SideBar>\n        <MainContent>\n          <Typography variant=\"subtitle1\">\n            {this.renderDCCA(this.state.selectedDistrict)}\n          </Typography>\n        </MainContent>\n      </Container>\n    )\n  }\n}\n\nexport default DistrictSelector\n","import React, { Component } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport AddressSearcher from '../../components/AddressSearcher'\nimport Typography from '@material-ui/core/Typography'\n\nimport styled from 'styled-components'\nimport { bps } from 'utils/responsive'\nimport DistrictSelector from 'components/search/DistrictSelector'\n\nimport * as AddressParser from 'hk-address-parser-lib'\n\nconst styles = theme => ({})\n\nconst StyledDivier = styled(Divider)`\n  && {\n    background-color: #ececec;\n    width: 100%;\n  }\n`\n\nconst Container = styled.div`\n  ${bps.up('md')} {\n    width: 100%;\n  }\n\n  ${bps.up('lg')} {\n    width: 1440px;\n  }\n  padding-top: 50px;\n  margin: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: baseline;\n  padding-left: 32px;\n  padding-right: 32px;\n  flex-grow: 1;\n`\n\nconst RowContainer = styled(Box)`\n  && {\n    display: flex;\n    justify-content: center;\n    flex-grow: 1;\n  }\n`\n\nconst ContentRowContainer = styled(RowContainer)`\n  && {\n    flex-flow: row;\n    ${bps.down('md')} {\n      flex-flow: column;\n    }\n  }\n`\n\nconst TabButton = styled(Button)`\n  && {\n    width: 200px;\n    margin-left: 30px;\n    margin-right: 30px;\n    padding-bottom: 30px;\n    text-align: center;\n    color: ${props => (props.active ? '#ffd731' : '#c2c2c2')};\n\n    border-bottom: ${props => (props.active ? '1px solid #ffd731' : 'none')};\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`\n\nconst ContentContainer = styled(Box)`\n  && {\n    margin: 50px;\n    width: 50%;\n    ${bps.down('md')} {\n      width: 100%;\n    }\n    justify-content: center;\n  }\n`\nconst LandingIcon = styled.div`\n  margin-top: 70px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 461px;\n  height: 295px;\n\n  ${bps.down('md')} {\n    width: 200px;\n    height: 128px;\n  }\n  background: url('/static/images/landingIcon.svg') no-repeat;\n  background-size: cover;\n`\n\nclass SearchPage extends Component {\n  selectedTab\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      autoCompleteList: [],\n      selectedTab: 'district',\n    }\n  }\n\n  async componentDidMount() {}\n\n  async onAddressFieldChanged(evt) {\n    const { value } = evt.target\n    const records = await AddressParser.parse(value)\n    this.setState({\n      autoCompleteList: records,\n    })\n  }\n\n  handlePeopleSelected = result => {\n    this.props.history.push(`profile/${result.id}`)\n  }\n\n  handleAddressSelected = result => {\n    if (!result) return\n\n    const lastest = result.pop()\n\n    /* TODO: \n      Use context (?) to store the Global district result array\n      When user select click previous button in district page, \n      the CACODE should follow follow the above result\n    */\n\n    this.props.history.push(`district/${lastest.year}/${lastest.CACODE}`)\n  }\n\n  renderSearchPeople() {\n    return <></>\n  }\n  onTabSelected(tab) {\n    return () => {\n      this.setState({\n        selectedTab: tab,\n      })\n    }\n  }\n\n  renderSearchDistrict() {\n    return (\n      <ContentRowContainer>\n        <ContentContainer>\n          <AddressSearcher handleAddressSelected={this.handleAddressSelected} />\n          <LandingIcon />\n        </ContentContainer>\n        <ContentContainer>\n          <DistrictSelector />\n        </ContentContainer>\n      </ContentRowContainer>\n    )\n  }\n\n  render() {\n    const { selectedTab } = this.state\n    const isSearchPeople = selectedTab === 'people'\n    console.log(selectedTab)\n    return (\n      <Container>\n        <RowContainer>\n          <TabButton\n            active={!isSearchPeople}\n            onClick={this.onTabSelected('district').bind(this)}\n          >\n            <Typography variant=\"h2\">找選區</Typography>\n          </TabButton>\n          <TabButton\n            active={isSearchPeople}\n            onClick={this.onTabSelected('people').bind(this)}\n          >\n            <Typography variant=\"h2\">找議員</Typography>\n          </TabButton>\n        </RowContainer>\n        <StyledDivier />\n        {isSearchPeople\n          ? this.renderSearchPeople()\n          : this.renderSearchDistrict()}\n      </Container>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(SearchPage)\n","import React, { Component } from 'react'\nimport Box from '@material-ui/core/Box'\nimport styled, { css } from 'styled-components'\nimport Avatar from '@material-ui/core/Avatar'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport { bps } from 'utils/responsive'\n\n// TODO: add age, camp & political_affiliation\nconst GET_PEOPLE_PROFILE = gql`\n  query($id: uuid!) {\n    dc_people(\n      where: { id: { _eq: $id } }\n      order_by: { elections_aggregate: { max: { year: asc } } }\n    ) {\n      id\n      name_en\n      name_zh\n      estimated_yob\n      gender\n      elections {\n        occupation\n        cacode\n        year\n        votes\n        vote_percentage\n        is_won\n        constituency {\n          name_zh\n          expected_population\n          deviation_percentage\n        }\n      }\n    }\n  }\n`\n\nconst commonFontStyle = css`\n  font-family: 'PingFangTC-Light';\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n`\n\nconst CandidateName = styled.div`\n   {\n    ${commonFontStyle}\n    margin: 20px;\n    font-size: 24px;\n    font-weight: 600;\n    color: #ffffff;\n    ${bps.up('sm')} {\n      margin: 0px;\n      margin-top: 50px;\n      font-size: 30px;\n    }\n\n    ${bps.up('md')} {\n      margin-top: 50px;\n      font-size: 48px;\n    }\n  }\n`\n\nconst DistrictName = styled.div`\n   {\n    ${commonFontStyle}\n    font-size: 14px;\n    font-weight: 600;\n    color: #ffffff;\n    ${bps.up('sm')} {\n      font-size: 20px;\n    }\n\n    ${bps.up('md')} {\n      font-size: 36px;\n    }\n  }\n`\n\nconst FlexRowContainer = styled(Box)`\n  && {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    margin: auto;\n\n    ${bps.up('md')} {\n      width: 100%;\n    }\n\n    ${bps.up('lg')} {\n      width: 1440px;\n    }\n  }\n`\n\nconst CandidateHeaderContainer = styled(FlexRowContainer)`\n  && {\n    opacity: 0.95;\n    background-color: #f6416e;\n  }\n`\n\nconst CandidateAvatar = styled(Avatar)`\n  && {\n    width: 153px;\n    height: 180px;\n    border-radius: 0;\n\n    ${bps.up('sm')} {\n      margin-top: 40px;\n      margin-left: 60px;\n    }\n\n    ${bps.up('md')} {\n      margin-left: 120px;\n    }\n  }\n`\n\nconst BasicInfoHeader = styled.div`\n  && {\n    ${commonFontStyle}\n    font-size: 32px;\n    font-weight: 600;\n    width: 100%;\n\n    ${bps.up('md')} {\n      margin-left: 65px;\n    }\n  }\n`\nconst ElectionHistoryContainer = styled(FlexRowContainer)`\n  && {\n    padding: 20px;\n    background-color: #fafafa;\n    ${bps.up('sm')} {\n      padding-left: 40px;\n    }\n\n    ${bps.up('md')} {\n      padding-left: 120px;\n      height: 100%;\n    }\n  }\n`\nconst ElectionHistoryHeader = styled.div`\n  && {\n    ${commonFontStyle}\n    font-size: 32px;\n    font-weight: 600;\n    color: #333333;\n    margin-top: 4px;\n  }\n`\n\nconst YearDiv = styled.div`\n  && {\n    font-size: 24px;\n    font-weight: 600;\n    color: #9b9b9b;\n    margin-bottom: 20px;\n  }\n`\n\nconst ElectionHistoryPaper = styled(Paper)`\n  && {\n    padding: 20px;\n  }\n`\n\nconst ElectionHistoryContentGrid = styled(Grid)`\n  && {\n    padding: 15px;\n  }\n`\n\nconst ElectionHistoryContentSpan = styled(Grid)`\n  && {\n    ${commonFontStyle}\n    font-size: 18px;\n    color: #4a4a4a;\n  }\n`\n\nconst ElectionHistoryContentHeaderSpan = styled(ElectionHistoryContentSpan)`\n  && {\n    font-weight: 500;\n  }\n`\nconst ElectionDetailButton = styled.div`\n  && {\n    ${commonFontStyle}\n    padding: 15px;\n    font-weight: 600;\n    color: #ffb700;\n    width: 100%;\n    text-align: center;\n    border-radius: 4px;\n    border: 2px solid #ffb700;\n    cursor: pointer;\n  }\n`\n\nconst BasicInfoGridContainer = styled(FlexRowContainer)`\n  && {\n    margin-top: 40px;\n    margin-left: 20px;\n    margin-bottom: 40px;\n\n    ${bps.up('sm')} {\n      padding-left: 40px;\n      margin-left: auto;\n      margin-right: auto;\n    }\n\n    ${bps.up('md')} {\n      padding-left: 55px;\n      height: 100%;\n    }\n  }\n`\n\nconst BasicInfoGridHeader = styled(Grid)`\n  && {\n    ${commonFontStyle}\n    font-weight: 600;\n    color: #4a4a4a;\n    font-size: 18px;\n  }\n`\n\nconst BasicInfoGridContent = styled(Grid)`\n  && {\n    ${commonFontStyle}\n    color: #4a4a4a;\n    font-size: 18px;\n  }\n`\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  async componentDidMount() {}\n\n  handleElectionDetailButton = (year, code) => {\n    this.props.history.push(`/district/${year}/${code}`)\n  }\n\n  renderElectionInfoCard(election, yob) {\n    console.log(election)\n    return (\n      <Grid item xs={12} md={4}>\n        <YearDiv>{`${election.year}年`}</YearDiv>\n        <ElectionHistoryPaper>\n          <ElectionHistoryContentGrid container spacing={1}>\n            <ElectionHistoryContentHeaderSpan item xs={12} md={4}>\n              地區\n            </ElectionHistoryContentHeaderSpan>\n            <ElectionHistoryContentSpan item xs={12} md={8}>\n              {' '}\n              {election.constituency && election.constituency.name\n                ? election.constituency.name\n                : '-'}{' '}\n            </ElectionHistoryContentSpan>\n          </ElectionHistoryContentGrid>\n          <hr />\n          <ElectionHistoryContentGrid container spacing={1}>\n            <ElectionHistoryContentHeaderSpan item xs={12} md={4}>\n              選區\n            </ElectionHistoryContentHeaderSpan>\n            <ElectionHistoryContentSpan item xs={12} md={8}>\n              {`${election.constituency.name_zh} （${election.cacode}）`}\n            </ElectionHistoryContentSpan>\n          </ElectionHistoryContentGrid>\n          <hr />\n          <ElectionHistoryContentGrid container spacing={1}>\n            <ElectionHistoryContentHeaderSpan item xs={12} md={4}>\n              陣營\n            </ElectionHistoryContentHeaderSpan>\n            <ElectionHistoryContentSpan item xs={12} md={8}>\n              {election.camp ? election.camp : '-'}\n            </ElectionHistoryContentSpan>\n          </ElectionHistoryContentGrid>\n          <hr />\n          <ElectionHistoryContentGrid container spacing={1}>\n            <ElectionHistoryContentHeaderSpan item xs={12} md={4}>\n              得票率\n            </ElectionHistoryContentHeaderSpan>\n            <ElectionHistoryContentSpan item xs={12} md={8}>\n              {`${election.vote_percentage}% （${\n                election.is_won ? '當選' : '落敗'\n              }）`}\n            </ElectionHistoryContentSpan>\n          </ElectionHistoryContentGrid>\n          <ElectionHistoryContentGrid container spacing={1}>\n            <ElectionDetailButton\n              onClick={() => {\n                this.handleElectionDetailButton(election.year, election.cacode)\n              }}\n            >\n              查看選舉資料\n            </ElectionDetailButton>\n          </ElectionHistoryContentGrid>\n        </ElectionHistoryPaper>\n      </Grid>\n    )\n  }\n\n  render() {\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props\n\n    // todo: use ENV_VAR\n    const homeUrl = 'https://cswbrian.github.io/district-councils-dashboard/'\n\n    return (\n      <Query query={GET_PEOPLE_PROFILE} variables={{ id }}>\n        {({ loading, error, data }) => {\n          if (loading) return null\n          if (error) return `Error! ${error}`\n          const person = data.dc_people[0]\n\n          return (\n            <>\n              <CandidateHeaderContainer>\n                <Box\n                  width={{ sm: '250px', md: '300px' }}\n                  height={{ sm: '200px' }}\n                >\n                  <CandidateAvatar\n                    src={`${homeUrl}/static/images/avatar/${person.id}.jpg`}\n                    imgProps={{\n                      onError: e => {\n                        e.target.src = `${homeUrl}/static/images/avatar/default.png`\n                      },\n                    }}\n                  ></CandidateAvatar>\n                </Box>\n                <Box>\n                  <CandidateName>\n                    {person.name_zh ? person.name_zh : ''}{' '}\n                    {person.name_zh ? person.name_en : ''}\n                    <DistrictName>{/* TODO */}-</DistrictName>\n                  </CandidateName>\n                </Box>\n              </CandidateHeaderContainer>\n\n              <BasicInfoGridContainer>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={3}>\n                    <BasicInfoHeader>基本資料</BasicInfoHeader>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={4}>\n                    <Grid container spacing={3}>\n                      <BasicInfoGridHeader item xs={5}>\n                        性別\n                      </BasicInfoGridHeader>\n                      <BasicInfoGridContent item xs={7}>\n                        {person.gender\n                          ? person.gender == 'male'\n                            ? '男'\n                            : '女'\n                          : '-'}\n                      </BasicInfoGridContent>\n\n                      <BasicInfoGridHeader item xs={5}>\n                        年齡\n                      </BasicInfoGridHeader>\n                      <BasicInfoGridContent item xs={7}>\n                        {person.estimated_yob\n                          ? `${moment().year() - person.estimated_yob}歲`\n                          : '-'}\n                      </BasicInfoGridContent>\n\n                      <BasicInfoGridHeader item xs={5}>\n                        出生年份\n                      </BasicInfoGridHeader>\n                      <BasicInfoGridContent item xs={7}>\n                        {person.estimated_yob ? person.estimated_yob : '-'}\n                      </BasicInfoGridContent>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={4}>\n                    <Grid container spacing={3}>\n                      <BasicInfoGridHeader item xs={5}>\n                        職業\n                      </BasicInfoGridHeader>\n                      <BasicInfoGridContent item xs={7}>\n                        {person.elections[person.elections.length - 1]\n                          .occupation\n                          ? person.elections[person.elections.length - 1]\n                              .occupation\n                          : '-'}\n                      </BasicInfoGridContent>\n\n                      <BasicInfoGridHeader item xs={5}>\n                        陣營\n                      </BasicInfoGridHeader>\n                      <BasicInfoGridContent item xs={7}>\n                        {/* TODO */}-\n                      </BasicInfoGridContent>\n\n                      <BasicInfoGridHeader item xs={5}>\n                        所屬政治聯繫\n                      </BasicInfoGridHeader>\n                      <BasicInfoGridContent item xs={7}>\n                        {/* TODO */}-\n                      </BasicInfoGridContent>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </BasicInfoGridContainer>\n\n              <ElectionHistoryContainer>\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <ElectionHistoryHeader>區議會選舉</ElectionHistoryHeader>\n                  </Grid>\n\n                  {person.elections\n                    .sort((a, b) => b.year - a.year)\n                    .map(election =>\n                      this.renderElectionInfoCard(\n                        election,\n                        person.estimated_yob\n                      )\n                    )}\n                </Grid>\n              </ElectionHistoryContainer>\n            </>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default ProfilePage\n","import React, { Component } from 'react'\nimport Map from 'ol/Map'\nimport View from 'ol/View'\nimport TileLayer from 'ol/layer/Tile'\nimport VectorLayer from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport XYZ from 'ol/source/XYZ'\nimport GeoJSON from 'ol/format/GeoJSON'\nimport { Style, Stroke, Fill, Text } from 'ol/style'\nimport Select from 'ol/interaction/Select'\nimport styled from 'styled-components'\n\nimport dc2003 from '../data/DCCA_2003'\nimport dc2007 from '../data/DCCA_2007'\nimport dc2011 from '../data/DCCA_2011'\nimport dc2015 from '../data/DCCA_2015'\nimport dc2019 from '../data/DCCA_2019'\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\nconst regionStyle = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.2)',\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1,\n  }),\n  text: new Text({\n    font: '16px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 2,\n    }),\n  }),\n})\n\nconst highlightStyle = new Style({\n  stroke: new Stroke({\n    color: '#f00',\n    width: 1,\n  }),\n  fill: new Fill({\n    color: 'rgba(255,0,0,0.1)',\n  }),\n  text: new Text({\n    font: '16px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#f00',\n      width: 2,\n    }),\n  }),\n})\n\nclass OLMap extends Component {\n  featureOverlay\n  highlightedFeature\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    const { year, code } = this.props\n    const dc = [dc2003, dc2007, dc2011, dc2015, dc2019].find(\n      d => d.name === `DCCA_${year}`\n    )\n    let isDCDataExist = dc ? true : false\n    let featuresLayer\n\n    if (isDCDataExist) {\n      this.featureSource = new VectorSource({\n        features: new GeoJSON().readFeatures(dc),\n      })\n\n      featuresLayer = new VectorLayer({\n        source: this.featureSource,\n        style: feature => {\n          regionStyle.getText().setText(feature.getProperties().CACODE)\n          return regionStyle\n        },\n      })\n    }\n\n    // create map object with feature layer\n    const layers = [\n      //default OSM layer\n      new TileLayer({\n        source: new XYZ({\n          url:\n            'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n        }),\n      }),\n    ]\n\n    if (isDCDataExist) {\n      layers.push(featuresLayer)\n    }\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers,\n      view: new View({\n        projection: 'EPSG:4326',\n        center: [114.2029, 22.3844],\n        zoom: 13,\n      }),\n    })\n\n    this.featureOverlay = new VectorLayer({\n      source: new VectorSource(),\n      map: map,\n      style: function(feature) {\n        highlightStyle.getText().setText(feature.getProperties().CACODE)\n        return highlightStyle\n      },\n    })\n\n    if (isDCDataExist) {\n      // Fit to feature\n      const features = this.featureSource.getFeatures()\n      for (let i = 0; i < features.length; i++) {\n        if (features[i].getProperties().CACODE === code) {\n          const extent = features[i].getGeometry().getExtent()\n          map.getView().fit(extent, {\n            size: map.getSize(),\n            padding: [10, 10, 10, 10],\n          })\n\n          this.highlightFeature(features[i])\n          break\n        }\n      }\n    }\n\n    this.setState({\n      map,\n      view: map.getView(),\n      featuresLayer: isDCDataExist ? featuresLayer : null,\n    })\n\n    const select = new Select()\n\n    if (select !== null) {\n      map.addInteraction(select)\n      select.on('select', this.handleMapClick)\n    }\n  }\n\n  highlightFeature(feature) {\n    if (this.highlightedFeature) {\n      this.featureOverlay.getSource().removeFeature(this.highlightedFeature)\n    }\n\n    this.featureOverlay.getSource().addFeature(feature)\n    this.highlightedFeature = feature\n  }\n\n  handleMapClick = e => {\n    const { year, changeDistrict } = this.props\n    const selectedFeature = e.target.getFeatures().item(0)\n\n    if (selectedFeature) {\n      this.highlightFeature(selectedFeature)\n      changeDistrict(year, selectedFeature.get('CACODE'))\n      this.state.map.getView().fit(selectedFeature.getGeometry().getExtent(), {\n        duration: 200,\n      })\n    }\n  }\n\n  render() {\n    return <MapContainer ref=\"mapContainer\"> </MapContainer>\n  }\n}\n\nexport default OLMap\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport Divider from '@material-ui/core/Divider'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\nimport { bps } from 'utils/responsive'\n\nconst Container = styled(Paper)`\n  && {\n    width: 400px;\n    height: 400px;\n    background-color: #f6f6f6;\n    padding: 0;\n\n    ${bps.down('md')} {\n      width: 100%;\n    }\n  }\n`\n\nconst InnerContainer = styled(Box)`\n  && {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: baseline;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`\n\nconst YearText = styled(Typography)`\n  && {\n    font-family: Avenir;\n    font-size: 30px;\n    font-weight: 900;\n    color: #333333;\n  }\n`\n\nconst RegionText = styled(Typography)`\n  && {\n    width: 100%;\n    font-family: PingFangTC-Medium;\n    font-size: 20px;\n    font-weight: 500;\n    color: #ffb700;\n  }\n`\n\nconst CodeText = styled(Typography)`\n  && {\n    margin-left: 10px;\n    font-family: PingFangTC-Light;\n    font-size: 40px;\n    font-weight: 300;\n    color: #9b9b9b;\n  }\n`\n\nconst StyledDivier = styled(Divider)`\n  && {\n    margin-top: 40px;\n    background-color: #cecece;\n    width: 100%;\n  }\n`\n\nconst SeperatedRow = styled(Box)`\n  && {\n    margin-top: 20px;\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n`\n\nfunction getCouncillor(candidates) {\n  const councillor = {\n    name: '',\n    politicalAffiliation: '',\n  }\n\n  const electedCandidate = candidates.find(candidate => candidate.is_won)\n  if (electedCandidate) {\n    councillor.name =\n      electedCandidate.person.name_zh || electedCandidate.person.name_en\n    if (electedCandidate.person.political_affiliations.length) {\n      const political_affiliation =\n        electedCandidate.person.political_affiliations[0].political_affiliation\n      councillor.political_affiliation = political_affiliation.name_zh\n    }\n  }\n\n  return councillor\n}\n\nclass DistrictCard extends Component {\n  static propTypes = {\n    year: PropTypes.number.isRequired,\n    code: PropTypes.string.isRequired,\n    name_zh: PropTypes.string.isRequired,\n    name_en: PropTypes.string.isRequired,\n    onPrevElection: PropTypes.func.isRequired,\n    onNextElection: PropTypes.func.isRequired,\n    candidates: PropTypes.array.isRequired,\n  }\n\n  renderPrevElectionButton(year) {\n    return year > 1999 ? (\n      <IconButton aria-label=\"arrow_back\" onClick={this.props.onPrevElection}>\n        <ArrowBackIcon />\n      </IconButton>\n    ) : (\n      // if there is no next button, show a 48x48 empty box to align the 2 elements on the right\n      <div style={{ width: '48px', height: '48px' }}></div>\n    )\n  }\n\n  renderNextElectionButton(year) {\n    const nextElectionYear = year + 4\n    const currentYear = new Date().getFullYear()\n    return nextElectionYear <= currentYear ? (\n      <IconButton\n        aria-label=\"arrow_forward\"\n        onClick={this.props.onNextElection}\n      >\n        <ArrowForwardIcon />\n      </IconButton>\n    ) : (\n      // if there is no next button, show a 48x48 empty box to align the 2 elements on the left\n      <div style={{ width: '48px', height: '48px' }}></div>\n    )\n  }\n\n  render() {\n    const { name_zh, year, code, candidates } = this.props\n    const councillor = getCouncillor(candidates)\n    return (\n      <Container>\n        <InnerContainer border={0} color=\"primary.minor\">\n          <SeperatedRow>\n            {this.renderPrevElectionButton(year)}\n            <YearText variant=\"button\" gutterBottom>\n              {year}\n            </YearText>\n            {this.renderNextElectionButton(year)}\n          </SeperatedRow>\n          <RegionText>--區</RegionText>\n          <Typography variant=\"h3\">{name_zh}</Typography>\n          <CodeText>{code}</CodeText>\n          <StyledDivier />\n          <SeperatedRow>\n            <Typography variant=\"h6\">區議員</Typography>\n            <Typography>{councillor.name}</Typography>\n          </SeperatedRow>\n          <SeperatedRow>\n            <Typography variant=\"h6\">政治聯繫</Typography>\n            <Typography>{councillor.political_affiliation}</Typography>\n          </SeperatedRow>\n          <SeperatedRow>\n            <Typography variant=\"h6\">投票站</Typography>\n            <Typography variant=\"subtitle2\">-</Typography>\n          </SeperatedRow>\n        </InnerContainer>\n      </Container>\n    )\n  }\n}\n\nexport default DistrictCard\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\n\nconst Container = styled.div`\n   {\n    width: 100%;\n    height: 220px;\n    padding: 0;\n  }\n`\n\nclass MainAreas extends Component {\n  static propTypes = {\n    areas: PropTypes.array.isRequired,\n  }\n\n  render() {\n    const { areas } = this.props\n    return (\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" gutterBottom>\n          主要屋邨 / 地區\n        </Typography>\n        <Box display=\"flex\" flexWrap=\"wrap\" alignContent=\"flex-start\">\n          {areas.map((area, index) => (\n            <Box mr={1} key={index}>\n              {`${Object.keys(area)[0]}. ${area[Object.keys(area)[0]]}`}\n            </Box>\n          ))}\n        </Box>\n      </Container>\n    )\n  }\n}\n\nexport default MainAreas\n","import React from 'react'\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}))\n\nconst BorderLinearProgress = withStyles({\n  root: {\n    height: 20,\n    width: 100,\n    backgroundColor: props => lighten(props.bgColor, 0.5),\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: props => props.bgColor,\n  },\n})(LinearProgress)\n\nexport default function CustomizedProgressBars(props) {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <BorderLinearProgress\n        className={classes.margin}\n        variant=\"determinate\"\n        color=\"secondary\"\n        value={props.value}\n        bgColor={props.color}\n      />\n    </React.Fragment>\n  )\n}\n","import React, { Component } from 'react'\nimport Divider from '@material-ui/core/Divider'\nimport styled, { css } from 'styled-components'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\nimport CustomizedProgressBars from '../../components/BorderLinearProgress'\nimport Avatar from '@material-ui/core/Avatar'\nimport { bps } from 'utils/responsive'\nimport { getCamp, getPoliticalAffiliation } from 'helpers/candidate'\n\nconst fontBoldStyle = css`\n  font-family: 'PingFangTC-Medium';\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n`\n\nconst fontNormalStyle = css`\n  font-family: 'PingFangTC';\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n`\n\nconst OvalButton = styled.div`\n  width: 95px;\n  height: 95px;\n  background: url('/static/images/electedIcon.png');\n`\n\nconst Container = styled.div`\n   {\n    padding: 0px 15px 100px 25px;\n  }\n`\n\nconst RowsContainer = styled.div`\n   {\n    margin-top: 30px;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.2);\n    background-color: #ffffff;\n    ${bps.down('sm')} {\n      margin-left: 10px;\n      margin-right: 10px;\n    }\n  }\n`\n\nconst FlexRowContainer = styled(Box)`\n  && {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    width: 1440px;\n    margin: auto;\n    cursor: pointer;\n    ${bps.down('sm')} {\n      width: 1440px;\n      margin: auto;\n    }\n  }\n`\n\nconst FlexColumn = styled(Box)`\n  && {\n    height: 149px;\n    align-items: center;\n    display: flex;\n    padding-left: 40px;\n    ${bps.down('sm')} {\n      height: 80px;\n    }\n  }\n`\n\nconst AvatarColumn = styled(FlexColumn)`\n  && {\n    width: 100px;\n    ${bps.down('sm')} {\n      width: 100%;\n      height: 149px;\n    }\n  }\n`\n\nconst NameColumn = styled(FlexColumn)`\n  && {\n    width: 200px;\n    ${bps.down('sm')} {\n      width: 100%;\n    }\n  }\n`\n\nconst PoliticalColumn = styled(FlexColumn)`\n  && {\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    width: 180px;\n    ${bps.down('sm')} {\n      width: 100%;\n    }\n  }\n`\n\nconst StyledDivier = styled(Divider)`\n  && {\n    margin-left: 30px;\n    margin-right: 30px;\n    ${bps.down('sm')} {\n      margin-top: 30px;\n    }\n  }\n`\nconst CandidateListTitle = styled.div`\n   {\n    ${fontBoldStyle}\n    font-size: 32px;\n    font-weight: 600;\n    color: #333333;\n  }\n`\n\nconst CandidateName = styled.div`\n   {\n    ${fontBoldStyle}\n    font-size: 24px;\n    font-weight: 500;\n    color: #333333;\n  }\n`\n\nconst BlueVoteContainer = styled.div`\n   {\n    ${fontBoldStyle}\n    font-size: 18px;\n    font-weight: 500;\n    color: #306ece;\n  }\n`\n\nconst RedVoteContainer = styled.div`\n   {\n    ${fontBoldStyle}\n    font-size: 18px;\n    font-weight: 500;\n    color: #f6416e;\n  }\n`\n\nconst ContentHeader = styled.div`\n   {\n    ${fontBoldStyle}\n    font-size: 18px;\n    font-weight: 600;\n    color: #4a4a4a;\n  }\n`\n\nconst Content = styled.div`\n   {\n    ${fontNormalStyle}\n    font-size: 18px;\n    color: #4a4a4a;\n  }\n`\n\nclass CandidateList extends Component {\n  static propTypes = {\n    candidates: PropTypes.array.isRequired,\n    year: PropTypes.number.isRequired,\n    code: PropTypes.string.isRequired,\n  }\n\n  // todo: use ENV_VAR\n  homeUrl = 'https://cswbrian.github.io/district-councils-dashboard/'\n\n  render() {\n    const { candidates, year, code } = this.props\n\n    return (\n      <Container maxWidth=\"lg\">\n        <CandidateListTitle>議員候選人</CandidateListTitle>\n        <RowsContainer>\n          {candidates\n            .sort((a, b) => a.candidate_number - b.candidate_number)\n            .map((candidate, index) => (\n              <>\n                {index > 0 ? <StyledDivier /> : null}\n                <FlexRowContainer\n                  style={{ width: '100%' }}\n                  key={candidate.candidate_number}\n                  onClick={() => {\n                    this.props.handleCandidateSelected(candidate.person.id)\n                  }}\n                >\n                  <AvatarColumn>\n                    <Avatar\n                      src={`${this.homeUrl}/static/images/avatar/${candidate.person.id}.jpg`}\n                      imgProps={{\n                        onError: e => {\n                          e.target.src =\n                            this.homeUrl + '/static/images/avatar/default.png'\n                        },\n                      }}\n                      style={{\n                        width: '66px',\n                        height: '88px',\n                        borderRadius: 0,\n                      }}\n                    ></Avatar>\n                  </AvatarColumn>\n                  <NameColumn p={1}>\n                    <CandidateName>\n                      {candidate.candidate_number !== 0 &&\n                        `${candidate.candidate_number}. `}\n                      {candidate.person.name_zh || candidate.person.name_en}\n                    </CandidateName>\n                  </NameColumn>\n                  <PoliticalColumn>\n                    <ContentHeader>陣營</ContentHeader>\n                    {'\\n'}\n                    <Content>{getCamp(candidate)}</Content>\n                  </PoliticalColumn>\n                  <PoliticalColumn>\n                    <ContentHeader>政治聯繫</ContentHeader>\n                    {'\\n'}\n                    <Content>{getPoliticalAffiliation(candidate)}</Content>\n                  </PoliticalColumn>\n                  {candidate.candidate_number !== 0 && (\n                    <>\n                      <PoliticalColumn>\n                        {candidate.is_won && (\n                          <BlueVoteContainer>\n                            {`${candidate.votes}票 (${candidate.vote_percentage}%)`}\n                          </BlueVoteContainer>\n                        )}\n                        {!candidate.is_won && (\n                          <RedVoteContainer>\n                            {`${candidate.votes}票 (${candidate.vote_percentage}%)`}\n                          </RedVoteContainer>\n                        )}\n                      </PoliticalColumn>\n                      <FlexColumn>\n                        <ContentHeader style={{ color: '#9b9b9b' }}>\n                          得票率\n                        </ContentHeader>\n                        <Content>\n                          <CustomizedProgressBars\n                            value={parseFloat(candidate.vote_percentage)}\n                            color={candidate.is_won ? '#306ece' : '#f6416e'}\n                          />\n                        </Content>\n                      </FlexColumn>\n                    </>\n                  )}\n                  <FlexColumn>\n                    {candidate.is_won && <OvalButton />}\n                    {!candidate.is_won && (\n                      <div\n                        style={{\n                          width: '95px',\n                          height: '95px',\n                        }}\n                      ></div>\n                    )}\n                  </FlexColumn>\n                </FlexRowContainer>\n              </>\n            ))}\n        </RowsContainer>\n      </Container>\n    )\n  }\n}\n\nexport default CandidateList\n","export const getPoliticalAffiliation = candidate => {\n  let pa = '-'\n  try {\n    // assume from the graphql we already sort out the only active political_affiliations here\n    pa =\n      candidate.person.political_affiliations[0].political_affiliation.name_zh\n  } catch (err) {}\n  return pa\n}\n\nexport const getCamp = candidate => {\n  let camp = '-'\n  try {\n    // assume from the graphql we already sort out the only active political_affiliations here\n    camp =\n      candidate.person.political_affiliations[0].political_affiliation.camp\n        .name_zh\n  } catch (err) {}\n  return camp\n}\n","import React, { Component } from 'react'\nimport zingchart from 'zingchart'\n\n// MUST define modulesdir for VoterTurnoutChart\n// https://www.zingchart.com/docs/api/modules/standard/#modules__modules_list\nzingchart.MODULESDIR = 'https://cdn.zingchart.com/modules/'\n\nconst chartJSON = chartData => {\n  const data = { male: [], female: [] }\n\n  Object.values(chartData.data).map(value => {\n    data['male'].push(value['male'])\n    data['female'].push(value['female'])\n  })\n\n  // TODO: replace this hacky code\n  const titles = Object.keys(chartData.data).map(\n    key =>\n      key\n        .split('_')\n        .filter(val => !isNaN(parseInt(val)))\n        .join('-') + '歲'\n  )\n  titles[titles.length - 1] += '及以上'\n  // Demo\n  // https://codepen.io/pen/?editors=1010\n\n  return {\n    type: 'bar',\n    stacked: true,\n    'stack-type': 'normal',\n    title: {\n      text: '投票人士年齡分布',\n      x: '40px',\n      y: '5px',\n      align: 'left',\n    },\n    subtitle: {\n      text: '佔全部',\n      x: '175px',\n      y: '5px',\n      align: 'left',\n      bold: false,\n      'font-size': '10px',\n      'font-color': '#7E7E7E',\n      'background-color': 'none',\n    },\n    plot: {\n      'bar-width': '25px',\n      'hover-state': {\n        visible: false,\n      },\n      animation: {\n        delay: 300,\n        sequence: 1,\n      },\n      valueBox: {\n        text: '%total',\n        rules: [\n          {\n            rule: '%stack-top == 0',\n            visible: 0,\n          },\n        ],\n        decimals: 0,\n      },\n    },\n    'scale-x': {\n      values: titles,\n      tick: {\n        visible: false,\n      },\n      guide: {\n        visible: false,\n      },\n      item: {\n        'font-color': '#8B8B8B',\n      },\n    },\n    'scale-y': {\n      short: true,\n      'line-color': '#7E7E7E',\n      tick: {\n        visible: false,\n      },\n      guide: {\n        'line-style': 'solid',\n      },\n      item: {\n        'font-color': '#8B8B8B',\n      },\n    },\n    series: [\n      {\n        values: data.male,\n        'background-color': '#003f5c',\n      },\n      {\n        values: data.female,\n        'background-color': '#ff6361',\n      },\n    ],\n    tooltip: {\n      visible: false,\n    },\n  }\n}\n\nclass VoterTurnoutChart extends Component {\n  componentDidMount() {\n    zingchart.render({\n      id: this.props.id,\n      // data: this.props.data,\n      data: chartJSON(this.props.data),\n    })\n  }\n\n  //Used to check the values being passed in to avoid unnecessary changes.\n  shouldComponentUpdate(nextProps, nextState) {\n    //Lazy object comparison\n    return !(JSON.stringify(nextProps.data) === JSON.stringify(this.props.data))\n  }\n\n  componentWillUpdate(nextProps) {\n    zingchart.exec(this.props.id, 'setdata', {\n      data: chartJSON(nextProps.data), //nextProps.data,\n    })\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.id}\n        style={{\n          width: this.props.width || '100%',\n          height: this.props.height || '450px',\n        }}\n      ></div>\n    )\n  }\n}\n\nexport default VoterTurnoutChart\n","import React, { Component } from 'react'\nimport zingchart from 'zingchart'\n\n// MUST define modulesdir for treemaps\n// https://www.zingchart.com/docs/api/modules/standard/#modules__modules_list\nzingchart.MODULESDIR = 'https://cdn.zingchart.com/modules/'\n\nclass TreeMap extends Component {\n  componentDidMount() {\n    zingchart.render({\n      id: this.props.id,\n      data: this.props.data,\n    })\n  }\n\n  //Used to check the values being passed in to avoid unnecessary changes.\n  shouldComponentUpdate(nextProps, nextState) {\n    //Lazy object comparison\n    return !(JSON.stringify(nextProps.data) === JSON.stringify(this.props.data))\n  }\n\n  componentWillUpdate(nextProps) {\n    zingchart.exec(this.props.id, 'setdata', {\n      data: nextProps.data,\n    })\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.id}\n        style={{\n          width: this.props.width || '100%',\n          height: this.props.height || '450px',\n        }}\n      ></div>\n    )\n  }\n}\n\nexport default TreeMap\n","import React, { Component } from 'react'\nimport * as d3 from 'd3'\n\n/**\n * Idea from https://gist.github.com/XavierGimenez/8070956\n */\n\nclass WaffleChart extends Component {\n  drawChart(data) {\n    var total = 0\n    var width,\n      height,\n      widthSquares = 20,\n      heightSquares = 20,\n      squareSize = 20,\n      squareValue = 0,\n      gap = 1,\n      theData = []\n    var color = d3.scaleOrdinal(d3.schemeCategory10)\n    //total\n\n    total = d3.sum(data, function(d) {\n      return d.population\n    })\n    //value of a square\n    squareValue = total / (widthSquares * heightSquares)\n    console.log(squareValue)\n    //remap data\n    data.forEach(function(d, i) {\n      d.population = +d.population\n      d.units = Math.round(d.population / squareValue)\n      d.percentage = Math.floor((d.population * 100) / total)\n      theData = theData.concat(\n        Array(d.units + 1)\n          .join(1)\n          .split('')\n          .map(function() {\n            return {\n              squareValue: squareValue,\n              units: d.units,\n              population: d.population,\n              percentage: d.percentage,\n              groupIndex: i,\n            }\n          })\n      )\n    })\n    width = squareSize * widthSquares + widthSquares * gap + 25\n    height = squareSize * heightSquares + heightSquares * gap + 25\n    var waffle = d3\n      .select('#waffle')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .selectAll('div')\n      .data(theData)\n      .enter()\n      .append('rect')\n      .attr('width', squareSize)\n      .attr('height', squareSize)\n      .attr('fill', function(d) {\n        return color(d.groupIndex)\n      })\n      .attr('y', function(d, i) {\n        // const row = i % heightSquares;\n        // return (heightSquares * squareSize) - ((row * squareSize) + (row * gap))\n        const row = Math.floor(i / widthSquares)\n        return row * squareSize + row * gap\n      })\n      .attr('x', function(d, i) {\n        //group n squares for column\n        // const col = Math.floor(i / heightSquares);\n        // return (col * squareSize) + (col * gap);\n        const col = i % widthSquares\n        return col * squareSize + col * gap\n      })\n      .append('title')\n      .text(function(d, i) {\n        return (\n          data[d.groupIndex].name +\n          ' | ' +\n          d.population +\n          ' , ' +\n          d.percentage +\n          '%'\n        )\n      })\n    //add legend with categorical data\n    var legend = d3\n      .select('#legend')\n      .append('svg')\n      .attr('width', 300)\n      .attr('height', 200)\n      .append('g')\n      .selectAll('div')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('transform', function(d, i) {\n        return 'translate(0,' + i * 20 + ')'\n      })\n    legend\n      .append('rect')\n      .attr('width', 18)\n      .attr('height', 18)\n      .style('fill', function(d, i) {\n        return color(i)\n      })\n    legend\n      .append('text')\n      .attr('x', 25)\n      .attr('y', 13)\n      .text(function(d) {\n        return d.name\n      })\n    //add value of a unit square\n    var legend2 = d3\n      .select('#legend')\n      .select('svg')\n      .append('g')\n      .attr('transform', 'translate(200,0)')\n    legend2\n      .append('text')\n      .attr('y', '14')\n      .attr('font-size', '18px')\n      .text('Total: ' + total)\n      .attr('fill', '#444444')\n  }\n\n  componentDidMount() {\n    this.drawChart(this.props.data)\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"waffle\"></div>\n\n        <div id=\"legend\"></div>\n      </>\n    )\n  }\n}\n\nexport default WaffleChart\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport * as _ from 'lodash'\nimport VoterTurnoutChart from './VoterTurnoutChart'\nimport TreeMap from '../TreeMap'\nimport WaffleChart from '../WaffleChart'\n\nconst QUERY_FETCH_VOTES = gql`\n  query($year: Int!, $code: String!) {\n    dc_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\n      candidates_aggregate {\n        aggregate {\n          sum {\n            votes\n          }\n        }\n      }\n      candidates {\n        votes\n        person {\n          name_zh\n          name_en\n        }\n      }\n      vote_stat {\n        total_votes\n        total_voters\n        total_voted_voters\n        population_excluded_foreign_worker\n        population_excluded_foreign_worker_lte_age_15\n        population_excluded_foreign_worker_lte_age_20\n      }\n      station_stats {\n        station_code\n        name_en\n        name_zh\n        votes {\n          votes\n          age\n          gender\n        }\n      }\n    }\n  }\n`\nconst Container = styled.div`\n   {\n    padding: 0px 15px 100px 25px;\n  }\n`\n\nconst getDataFromWaffleChart = (voteStat, candidates) => {\n  const {\n    total_votes,\n    total_voters,\n    total_voted_voters,\n    population_excluded_foreign_worker,\n    population_excluded_foreign_worker_lte_age_15,\n    // population_excluded_foreign_worker_lte_age_20\n  } = voteStat\n\n  // check first the data\n  // TODO: the data should be good enough to remove this checking\n  if (\n    population_excluded_foreign_worker_lte_age_15 < total_voters ||\n    total_voters === 0 ||\n    total_voted_voters === 0\n  ) {\n    return []\n  }\n\n  const voteStats = [\n    {\n      name: '不能投票',\n      // population: population_excluded_foreign_worker - population_excluded_foreign_worker_lte_age_15,\n      population: population_excluded_foreign_worker - total_voters,\n    },\n    {\n      name: '沒有投票',\n      population:\n        population_excluded_foreign_worker_lte_age_15 - total_voted_voters,\n      // total_votes - total_voted_voters = registered but didn't vote?\n    },\n    {\n      name: '投票失效',\n      population: total_voted_voters - total_votes,\n      // total_votes - total_voted_voters = registered but didn't vote?\n    },\n  ]\n\n  candidates.forEach(({ votes, person: { name_zh, name_en } }) => {\n    voteStats.push({\n      name: `投給${name_zh || name_en}`,\n      population: votes,\n      // total_votes - total_voted_voters = registered but didn't vote?\n    })\n  })\n\n  return voteStats\n}\n\nclass MainAreas extends Component {\n  static propTypes = {\n    year: PropTypes.number.isRequired,\n    code: PropTypes.string.isRequired,\n    district: PropTypes.object.isRequired,\n  }\n\n  render() {\n    const { year, code } = this.props\n    return (\n      <Query\n        query={QUERY_FETCH_VOTES}\n        variables={{ year: parseInt(year, 10), code }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return null\n          if (error) return `Error! ${error}`\n          const { candidates, vote_stat } = data.dc_constituencies[0]\n          const voteStats = getDataFromWaffleChart(vote_stat, candidates)\n\n          const stats = data.dc_constituencies[0].station_stats\n          const barVote = { data: {} }\n          barVote.total = stats.reduce((acc, cur) => {\n            const sub_total = cur.votes.reduce((acc, cur) => {\n              if (typeof barVote.data[cur.age] === 'undefined') {\n                barVote.data[cur.age] = {}\n              }\n              if (typeof barVote.data[cur.age][cur.gender] === 'undefined') {\n                barVote.data[cur.age][cur.gender] = 0\n              }\n              barVote.data[cur.age][cur.gender] += cur.votes\n              return acc + cur.votes\n            }, 0)\n            return acc + sub_total\n          }, 0)\n\n          return (\n            <Container>\n              <Typography variant=\"h4\">人口資料</Typography>\n              <VoterTurnoutChart\n                id={`${year}_${code}_voter_turnout`}\n                data={barVote}\n              />\n              <WaffleChart\n                id={`${year}_${code}_voter_treemap`}\n                data={voteStats}\n              />\n            </Container>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default MainAreas\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport OLMap from '../../components/OLMap'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport DistrictCard from 'components/district/DistrictCard'\nimport MainAreas from 'components/district/MainAreas'\nimport CandidateList from 'components/district/CandidateList'\nimport Metrics from 'components/district/Metrics'\nimport styled from 'styled-components'\nimport { bps } from 'utils/responsive'\n\nconst GET_DISTRICTS = gql`\n  query($year: Int!, $code: String!, $electionYear: date) {\n    dc_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\n      name_zh\n      name_en\n      code\n      deviation_percentage\n      expected_population\n      main_areas\n      candidates {\n        candidate_number\n        person {\n          id\n          name_zh\n          name_en\n          political_affiliations(\n            where: {\n              year_from: { _lte: $electionYear }\n              year_to: { _gte: $electionYear }\n            }\n          ) {\n            year_to\n            year_from\n            political_affiliation {\n              name_zh\n              id\n              camp {\n                name_zh\n              }\n            }\n          }\n        }\n        vote_percentage\n        votes\n        is_won\n      }\n    }\n  }\n`\n\nconst FullWidthBox = styled(Box)`\n  && {\n    padding-top: 4rem;\n    width: 100%;\n  }\n`\n\nconst LowerBackgroundContainer = styled(Box)`\n  && {\n    width: 100vw;\n    position: relative;\n    margin-left: -50vw;\n    left: 50%;\n    background-color: #fafafa;\n  }\n`\n\nconst FlexRowContainer = styled(Box)`\n  && {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    ${bps.up('md')} {\n      width: 100%;\n    }\n\n    ${bps.up('lg')} {\n      width: 1440px;\n    }\n    margin: auto;\n  }\n`\n\nconst DistrictCardContainer = styled(Box)`\n  && {\n    padding-left: 30px;\n    margin: 0px;\n    width: 400px;\n    height: 400px;\n\n    ${bps.down('md')} {\n      margin: 10px;\n      width: 100%;\n      padding: 0px;\n    }\n  }\n`\n\nclass DistrictPage extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    //  if (this.props.route.path === nextProps.route.path) return false;\n    return true\n  }\n\n  handleCandidateSelected = candidateId => {\n    this.props.history.push(`/profile/${candidateId}`)\n  }\n\n  handleChangeDistrict = (year, code) => {\n    if (!year || !code) return\n    this.props.history.push(`/district/${year}/${code}`)\n  }\n\n  onPrevElection() {\n    const {\n      match: {\n        params: { year, code },\n      },\n    } = this.props\n    this.props.history.push(`/district/${parseInt(year, 10) - 4}/${code}`)\n  }\n\n  onNextElection() {\n    const {\n      match: {\n        params: { year, code },\n      },\n    } = this.props\n    this.props.history.push(`/district/${parseInt(year, 10) + 4}/${code}`)\n  }\n\n  render() {\n    const {\n      match: {\n        params: { year, code },\n      },\n    } = this.props\n\n    // TODO: this should be the election date\n    const electionYear = `${year}-01-01`\n\n    return (\n      <>\n        <FlexRowContainer>\n          <Box\n            width={{ sm: '100%', md: '960px' }}\n            height={{ sm: '300px', md: '400px' }}\n          >\n            <OLMap\n              year={year}\n              code={code}\n              changeDistrict={this.handleChangeDistrict}\n            />\n          </Box>\n          <Query query={GET_DISTRICTS} variables={{ year, code, electionYear }}>\n            {({ loading, error, data }) => {\n              if (loading) return null\n              if (error) return `Error! ${error}`\n              const district = data.dc_constituencies[0]\n              return (\n                <>\n                  <DistrictCardContainer>\n                    <DistrictCard\n                      {...district}\n                      year={parseInt(year, 10)}\n                      code={code}\n                      onNextElection={this.onNextElection.bind(this)}\n                      onPrevElection={this.onPrevElection.bind(this)}\n                    />\n                  </DistrictCardContainer>\n                  <FullWidthBox>\n                    <MainAreas areas={district.main_areas || []} />\n                  </FullWidthBox>\n                  <LowerBackgroundContainer>\n                    <FlexRowContainer>\n                      <FullWidthBox>\n                        <Metrics\n                          year={year}\n                          code={code}\n                          district={district}\n                        ></Metrics>\n                      </FullWidthBox>\n                      <FullWidthBox>\n                        <CandidateList\n                          candidates={district.candidates}\n                          year={parseInt(year, 10)}\n                          code={code}\n                          handleCandidateSelected={this.handleCandidateSelected}\n                        />\n                      </FullWidthBox>\n                    </FlexRowContainer>\n                  </LowerBackgroundContainer>\n                </>\n              )\n            }}\n          </Query>\n        </FlexRowContainer>\n      </>\n    )\n  }\n}\n\nexport default DistrictPage\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport OLMap from '../../components/OLMap'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport DistrictCard from 'components/district/DistrictCard'\nimport MainAreas from 'components/district/MainAreas'\nimport CandidateList from 'components/district/CandidateList'\nimport Metrics from 'components/district/Metrics'\nimport styled from 'styled-components'\nimport { bps } from 'utils/responsive'\n\nconst GET_DISTRICTS = gql`\n  query($year: Int!, $code: String!, $electionYear: date) {\n    dc_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\n      name_zh\n      name_en\n      code\n      deviation_percentage\n      expected_population\n      main_areas\n      candidates {\n        candidate_number\n        person {\n          id\n          name_zh\n          name_en\n          political_affiliations(\n            where: {\n              year_from: { _lte: $electionYear }\n              year_to: { _gte: $electionYear }\n            }\n          ) {\n            year_to\n            year_from\n            political_affiliation {\n              name_zh\n              id\n              camp {\n                name_zh\n              }\n            }\n          }\n        }\n        vote_percentage\n        votes\n        is_won\n      }\n    }\n  }\n`\n\nconst FullWidthBox = styled(Box)`\n  && {\n    padding-top: 4rem;\n    width: 100%;\n  }\n`\n\nconst LowerBackgroundContainer = styled(Box)`\n  && {\n    width: 100vw;\n    position: relative;\n    margin-left: -50vw;\n    left: 50%;\n    background-color: #fafafa;\n  }\n`\n\nconst FlexRowContainer = styled(Box)`\n  && {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    ${bps.up('md')} {\n      width: 100%;\n    }\n\n    ${bps.up('lg')} {\n      width: 1440px;\n    }\n    margin: auto;\n  }\n`\n\nconst DistrictCardContainer = styled(Box)`\n  && {\n    padding-left: 30px;\n    margin: 0px;\n    width: 400px;\n    height: 400px;\n\n    ${bps.down('md')} {\n      margin: 10px;\n      width: 100%;\n      padding: 0px;\n    }\n  }\n`\n\nclass BattleGroundPage extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    //  if (this.props.route.path === nextProps.route.path) return false;\n    return true\n  }\n\n  handleCandidateSelected = candidateId => {\n    this.props.history.push(`/profile/${candidateId}`)\n  }\n\n  handleChangeDistrict = (year, code) => {\n    if (!year || !code) return\n    this.props.history.push(`/district/${year}/${code}`)\n  }\n\n  onPrevElection() {\n    const {\n      match: {\n        params: { year, code },\n      },\n    } = this.props\n    this.props.history.push(`/district/${parseInt(year, 10) - 4}/${code}`)\n  }\n\n  onNextElection() {\n    const {\n      match: {\n        params: { year, code },\n      },\n    } = this.props\n    this.props.history.push(`/district/${parseInt(year, 10) + 4}/${code}`)\n  }\n\n  render() {\n    const {\n      match: {\n        params: { year = 2019, code },\n      },\n    } = this.props\n\n    // TODO: this should be the election date\n    const electionYear = `${year}-01-01`\n\n    return (\n      <>\n        <FlexRowContainer>\n          <Box\n            width={{ sm: '100%', md: '960px' }}\n            height={{ sm: '300px', md: '400px' }}\n          >\n            This is the Page tailormade for 2019 District Councils Election\n            <OLMap\n              year={year}\n              code={code}\n              changeDistrict={this.handleChangeDistrict}\n            />\n          </Box>\n          <Query query={GET_DISTRICTS} variables={{ year, code, electionYear }}>\n            {({ loading, error, data }) => {\n              if (loading) return null\n              if (error) return `Error! ${error}`\n              const district = data.dc_constituencies[0]\n              return (\n                <>\n                  <DistrictCardContainer>\n                    <DistrictCard\n                      {...district}\n                      year={parseInt(year, 10)}\n                      code={code}\n                      onNextElection={this.onNextElection.bind(this)}\n                      onPrevElection={this.onPrevElection.bind(this)}\n                    />\n                  </DistrictCardContainer>\n                  <FullWidthBox>\n                    <MainAreas areas={district.main_areas || []} />\n                  </FullWidthBox>\n                  <LowerBackgroundContainer>\n                    <FlexRowContainer>\n                      <FullWidthBox>\n                        <Metrics\n                          year={year}\n                          code={code}\n                          district={district}\n                        ></Metrics>\n                      </FullWidthBox>\n                      <FullWidthBox>\n                        <CandidateList\n                          candidates={district.candidates}\n                          year={parseInt(year, 10)}\n                          code={code}\n                          handleCandidateSelected={this.handleCandidateSelected}\n                        />\n                      </FullWidthBox>\n                    </FlexRowContainer>\n                  </LowerBackgroundContainer>\n                </>\n              )\n            }}\n          </Query>\n        </FlexRowContainer>\n      </>\n    )\n  }\n}\n\nexport default BattleGroundPage\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const headingFontFamily = 'PingFangTC-Medium, sans-serif'\nexport const bodyFontFamily = 'PT Serif, sans-serif'\n\nexport const fontFamily = [\n  'PingFangTC',\n  'Noto Sans TC',\n  'sans-serif',\n  '-apple-system',\n  '\"Helvetica Neue\"',\n  'Arial',\n]\n\nexport const typography = {\n  useNextVariants: true,\n  fontSize: 16,\n  fontFamily: fontFamily.join(','),\n  h1: {\n    fontFamily: headingFontFamily,\n  },\n  h2: {\n    fontFamily: headingFontFamily,\n    fontSize: 50,\n    fontWeight: 500,\n  },\n  h3: {\n    fontFamily: headingFontFamily,\n    fontSize: 40,\n    fontWeight: 500,\n  },\n  h4: {\n    fontFamily: headingFontFamily,\n    fontSize: 30,\n    fontWeight: 500,\n  },\n  h5: {\n    fontFamily: headingFontFamily,\n    fontSize: 24,\n    fontWeight: 500,\n  },\n  h6: {\n    fontFamily: headingFontFamily,\n    fontSize: 18,\n    fontWeight: 500,\n  },\n  body1: {\n    fontFamily: bodyFontFamily,\n  },\n}\n\nexport default createMuiTheme({\n  typography,\n  palette: {\n    primary: {\n      light: '#ffffff',\n      main: '#000000',\n      dark: '#cccccc',\n    },\n    secondary: {\n      light: '#2c2c2c',\n      main: '#000000',\n      dark: '#000000',\n    },\n    background: {\n      default: '#ffffff',\n    },\n    button: {\n      primary: '#ffd731',\n      secondary: '#ffd731',\n    },\n  },\n})\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport createMuiTheme from '../../ui/theme'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\n\nconst theme = createMuiTheme\n\nconst styles = theme => ({\n  content: {},\n})\n\nclass NotFoundPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        TODO - <a href=\"https://notfound.collaction.hk/\">404</a>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NotFoundPage)\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport NavBar from './components/NavBar'\nimport SearchPage from './pages/search'\nimport ProfilePage from './pages/profile'\nimport DistrictPage from './pages/district'\nimport BattleGroundPage from './pages/battleground'\nimport NotfoundPage from './pages/notfound'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport theme from 'ui/theme'\nimport './App.css'\n\nconst client = new ApolloClient({\n  uri: 'https://gql.opencultures.life/graphql',\n})\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  // Load app bar information from the theme\n  // https://stackoverflow.com/questions/48508449/content-beneath-fixed-appbar\n  toolbar: theme.mixins.toolbar,\n})\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <NavBar />\n          <main>\n            <Switch>\n              <Route exact path=\"/\" component={SearchPage} />\n              <Route path=\"/profile/:id\" component={ProfilePage} />\n              <Route path=\"/district/2019/:code\" component={BattleGroundPage} />\n              <Route path=\"/district/:year/:code\" component={DistrictPage} />\n              <Route component={NotfoundPage} />\n            </Switch>\n          </main>\n        </MuiThemeProvider>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}