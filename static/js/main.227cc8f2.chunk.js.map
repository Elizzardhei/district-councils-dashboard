{"version":3,"sources":["../node_modules/encoding/lib sync","ui/theme/index.js","layout/NavBar.js","components/PeopleSearcher.js","components/AddressSearcher.js","pages/search/index.js","pages/profile/index.js","components/BorderLinearProgress.js","components/OLMap.js","pages/district/index.js","pages/notfound/index.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","theme","createMuiTheme","typography","useNextVariants","fontFamily","palette","primary","light","main","dark","secondary","background","default","text","console","log","NavBar","classes","this","props","react_default","a","createElement","Container","maxWidth","AppBar","position","className","headerParent","Toolbar","disableGutters","header","Typography","variant","color","title","Button","component","NavLink","to","Component","withStyles","boxShadow","backgroundColor","flexGrow","withTheme","GET_PEOPLE","gql","_templateObject","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","Object","objectWithoutProperties","TextField","assign","fullWidth","InputProps","node","input","renderSuggestion","suggestion","_ref","query","isHighlighted","MenuItem","selected","name_zh","name_en","getSuggestionValue","PeopleSearcher","state","single","popper","suggestions","handleSuggestionsClearRequested","_this","setState","handleChange","name","event","_ref2","newValue","defineProperty","handleSuggestionSelected","_ref3","suggestionValue","suggestionIndex","sectionIndex","method","handlePeopleSelected","onSuggestionsFetchRequested","_callee","_ref4","value","_ref6","data","regenerator_default","wrap","_context","prev","next","reason","client","variables","nameRegex","concat","sent","dc_people","stop","deburr","trim","toLowerCase","length","filter","includes","_this2","autosuggestProps","onSuggestionsClearRequested","onSuggestionSelected","class","dist_default","label","placeholder","onChange","popperNode","InputLabelProps","shrink","suggestionsList","renderSuggestionsContainer","options","Popper","anchorEl","open","Boolean","children","Paper","square","containerProps","style","width","clientWidth","React","withApollo","root","height","container","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","display","margin","padding","listStyleType","matches","match","parts","parse","map","part","index","highlight","key","String","fontWeight","IntegrationAutosuggest","handleSuggestionsFetchRequested","inputValue","inputLength","count","keep","slice","address","coordinate","onAutoSuggestClicked","nativeEvent","MouseEvent","foundAddress","addresses","fullAddress","AddressParser","LANG_ZH","error","handleAddressSelected","currentSearchingResult","records","_","record","autoSuggestDiv","onAddressFieldChanged","bind","left","right","divider","SearchPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","history","push","renderDCCA","district","dcca","selectedDistrict","autoCompleteList","evt","target","Grid","item","xs","paper","Input","defaultValue","aria-label","area","dccode","onClick","dname_chi","GET_PEOPLE_PROFILE","profile_templateObject","ProfilePage","params","react_apollo_esm","loading","person","Card","CardHeader","subheader","moment","year","estimated_yob","CardContent","Table","TableHead","TableRow","TableCell","TableBody","elections","row","cacode","align","constituency","political_affiliation","votes","vote_percentage","useStyles","makeStyles","BorderLinearProgress","lighten","bar","borderRadius","LinearProgress","CustomizedProgressBars","Fragment","OLMap","handleMapClick","_this$props","changeDistrict","selectedFeature","getFeatures","getArray","getProperties","CACODE","featuresLayer","_this$props2","dc","dc2003","dc2007","dc2011","dc2015","dc2019","find","d","isDCDataExist","undefined","featureSource","VectorSource","features","GeoJSON","readFeatures","VectorLayer","source","feature","Style","fill","Fill","stroke","Stroke","layers","TileLayer","XYZ","url","Map","refs","mapContainer","view","View","projection","center","zoom","i","extent","getGeometry","getExtent","getView","fit","size","getSize","select","Select","addInteraction","on","nextProps","nextState","styled","border","DistrictCard","GET_DISTRICTS","district_templateObject","DistrictPage","homeUrl","handleChangeDistrict","replace","_this$props$match$par","parseInt","_this$props$match$par2","_this$props$match$par3","nextElectionYear","currentYear","Date","getFullYear","dc_constituencies","md","components_OLMap","Box","p","flexDirection","alignItems","justifyContent","IconButton","onPrevElection","ArrowBack_default","gutterBottom","onNextElection","ArrowForward_default","Divider","List","ListItemText","ListItemSecondaryAction","main_areas","flexWrap","alignContent","mr","expected_population","candidates","sort","b","candidate_number","candidate","Avatar","src","imgProps","onError","parseFloat","is_won","CheckCircle_default","NotFoundPage","MuiThemeProvider_default","href","content","ApolloClient","uri","App","CssBaseline","layout_NavBar","react_router","exact","path","NotfoundPage","toolbar","mixins","ReactDOM","render","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.227cc8f2.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 343;","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    fontFamily: \"'Noto Sans TC', sans-serif\"\n  },\n  palette: {\n    primary: {\n      light: '#ffffff',\n      main: '#000000',\n      dark: '#cccccc'\n    },\n    secondary: {\n      light: '#2c2c2c',\n      main: '#000000',\n      dark: '#000000'\n    },\n    background: {\n      default: '#ffffff'\n    },\n  },\n  text: {\n    primary: '#000000'\n  }\n});\n\nconsole.log(theme)\nexport default theme","import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { NavLink } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container'\nimport { relative } from 'path';\n\nconst styles = theme => ({\n  headerParent: {\n    boxShadow: 'none'\n  },\n  header: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.main\n  },\n  title: {\n    flexGrow: 1\n  }\n})\n\nclass NavBar extends Component {\n    render() {\n        const { classes } = this.props\n        return (\n          <Container maxWidth=\"lg\">\n            <AppBar position=\"relative\" className={classes.headerParent}>\n            <Toolbar disableGutters className={classes.header}>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n              Vote for Hong Kong\n              </Typography>\n              <Button component={NavLink} to=\"/\">Search</Button>\n            </Toolbar>\n          </AppBar>\n          </Container>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NavBar)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport deburr from 'lodash/deburr'\nimport Autosuggest from 'react-autosuggest'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Popper from '@material-ui/core/Popper'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withApollo } from 'react-apollo'\nimport gql from \"graphql-tag\";\n\nconst GET_PEOPLE = gql`\n  query ($nameRegex: String) {\n    dc_people( where: {\n      _or: [\n        { name_zh: { _like: $nameRegex }},\n        { name_en: { _like: $nameRegex }},\n      ]\n    }, limit: 50) {\n      id\n      name_zh\n      name_en\n    }\n  }\n`\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => { }, ref, ...other } = inputProps\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node)\n          inputRef(node)\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  )\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {isHighlighted ?\n          (<span>\n            {suggestion.name_zh ? suggestion.name_zh : suggestion.name_en}\n          </span>) :\n          (<strong>\n            {suggestion.name_zh ? suggestion.name_zh : suggestion.name_en}\n          </strong>)\n        }\n      </div>\n    </MenuItem>\n  )\n}\n\n\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name_zh ? suggestion.name_zh : suggestion.name_en;\n}\n\nconst styles = theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    // left: 0,\n    // right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  }\n})\n\nclass PeopleSearcher extends React.Component {\n  state = {\n    single: '',\n    popper: '',\n    suggestions: []\n  }\n\n  getSuggestions(value) {\n    const inputValue = deburr(value.trim()).toLowerCase()\n    const inputLength = inputValue.length\n\n    return inputLength === 0 ? [] : this.state.suggestions.filter(suggestion => suggestion.name && suggestion.name.includes(value))\n  }\n\n  async componentDidMount() {\n    const { data } = await this.props.client.query({\n      query: GET_PEOPLE,\n      variables: {\n        nameRegex: '%'\n      }\n    })\n    this.setState({ suggestions: data.dc_people })\n  }\n\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    })\n  }\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    })\n  }\n\n  handleSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n    this.props.handlePeopleSelected(suggestion)\n  }\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = async ({ value, reason }) => {\n    if (true) {\n      const { data } = await this.props.client.query({\n        query: GET_PEOPLE,\n        variables: {\n          nameRegex: `%${value}%`\n        }\n      })\n      this.setState({ suggestions: data.dc_people })\n    }\n  };\n\n  render() {\n    const { classes } = this.props\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      onSuggestionSelected: this.handleSuggestionSelected,\n      getSuggestionValue,\n      renderSuggestion,\n    }\n\n    return (\n      <div className={this.props.class}>\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            label: '揾人',\n            placeholder: 'Please type a candidate name',\n            value: this.state.popper,\n            onChange: this.handleChange('popper'),\n            inputRef: node => {\n              this.popperNode = node\n            },\n            InputLabelProps: {\n              shrink: true,\n            },\n          }}\n          theme={{\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n              <Paper\n                square\n                {...options.containerProps}\n                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\n              >\n                {options.children}\n              </Paper>\n            </Popper>\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nPeopleSearcher.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withApollo(withStyles(styles)(PeopleSearcher));","import React from 'react';\nimport PropTypes, { instanceOf } from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\nimport * as AddressParser from 'hk-address-parser-lib';\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) =>\n          part.highlight ? (\n            <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\n              {part.text}\n            </strong>\n          ),\n        )}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'block',\n    // height: 250,\n    flexGrow: 1,\n    position: 'absolute',\n    width: '100%',\n    backgroundColor: '#fff',\n    padding: '10px'\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block'\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none'\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  state = {\n    value: '',\n    suggestions: [],\n  };\n\n  getSuggestions(value) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n      ? []\n      : this.state.suggestions.filter(suggestion => {\n          const keep =\n            count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n          if (keep) {\n            count += 1;\n          }\n\n          return keep;\n        });\n  }\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    // console.log('fetched');\n    // this.setState({\n    //   suggestions: this.getSuggestions(value),\n    // });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  handleAddressSelected(address) {\n    const coordinate = address.coordinate();\n    this.props.onAutoSuggestClicked(coordinate)\n  }\n\n  async onAddressFieldChanged(event, { newValue }) {\n    const isMouseClick = event.nativeEvent instanceof MouseEvent;\n    if (isMouseClick) {\n      // This is fired when clicked on the pull down menu\n      this.setState({\n        value: newValue\n      })\n\n      let foundAddress = null;\n      try {\n        foundAddress = this.state.addresses.filter( address => address.fullAddress(AddressParser.Address.LANG_ZH) === newValue)[0];\n      } catch (error) {\n      }\n\n      if (foundAddress) {\n        this.handleAddressSelected(foundAddress);\n      }\n    } else {\n      // this is fired when typing in the search field\n      this.setState({\n        currentSearchingResult: newValue,\n        value: newValue\n      })\n      const records = await AddressParser.parse(newValue);\n\n      // Ignore the search if it is not the latest result\n      if (this.state.currentSearchingResult === newValue) {\n        this.setState({\n          suggestions: records.filter((_, index) => index < 10).map(record => ({ label: record.fullAddress(AddressParser.Address.LANG_ZH) })),\n          addresses: records,\n        })\n      }\n\n    }\n\n  }\n  render() {\n    const { classes } = this.props;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      getSuggestionValue,\n      renderSuggestion,\n    };\n\n    return (\n\n      <div className={classes.root}>\n        <div className={classes.autoSuggestDiv}>\n          <Autosuggest\n            {...autosuggestProps}\n            inputProps={{\n              classes,\n              label: 'Label',\n              placeholder: 'With Popper',\n              value: this.state.value,\n              onChange: this.onAddressFieldChanged.bind(this),\n              inputRef: node => {\n                this.popperNode = node;\n              },\n              InputLabelProps: {\n                shrink: true,\n              },\n            }}\n            theme={{\n              suggestionsList: classes.suggestionsList,\n              suggestion: classes.suggestion,\n            }}\n            renderSuggestionsContainer={options => (\n              <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n                <Paper\n                  square\n                  {...options.containerProps}\n                  style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\n                >\n                  {options.children}\n                </Paper>\n              </Popper>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);","import React, { Component } from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Input from '@material-ui/core/Input'\nimport PeopleSearcher from '../../components/PeopleSearcher'\nimport AddressSearcher from '../../components/AddressSearcher'\nimport area from '../../data/area'\nimport district from '../../data/district'\nimport Button from '@material-ui/core/Button'\n\nimport * as AddressParser from 'hk-address-parser-lib'\n\nconst styles = theme => ({\n})\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDistrict: null,\n      autoCompleteList: []\n    }\n  }\n\n  async componentDidMount() {\n\n  }\n\n  async onAddressFieldChanged(evt) {\n    const { value } = evt.target;\n    const records = await AddressParser.parse(value);\n    this.setState({\n      autoCompleteList: records,\n    })\n  }\n\n  handlePeopleSelected = result => {\n    this.props.history.push(`profile/${result.id}`)\n  }\n\n  renderDCCA = code => {\n    if (!code) return null\n    return <div>\n      {Object.keys(district['2019'][code]).map(dcca => {\n        return (\n          <Button component={NavLink} to={`/district/2019/${dcca}`} key={district['2019'][code][dcca].code} color=\"secondary\">{district['2019'][code][dcca].name}</Button>\n        )\n      })}\n    </div>\n  }\n\n  render() {\n    const { classes } = this.props\n    const { autoCompleteList } = this.state\n\n    return (\n      <Grid container spacing={24}>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            {/* TODO: Change the following input to AddressSearcher component, similar to PeopleSearcher */}\n            <Input\n              defaultValue=\"Search Address\"\n              inputProps={{\n                'aria-label': 'Description',\n              }}\n              onChange={this.onAddressFieldChanged.bind(this)}\n            />\n            {autoCompleteList.map((address, index) => (<div key={index}><p>{address.fullAddress()}</p></div>))}\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            {/* TODO: Build a people.json for the autosuggest and profile */}\n            {/* <PeopleSearcher\n              handlePeopleSelected={this.handlePeopleSelected}\n            /> */}\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            {\n              area.map(a => <Button key={a.dccode} color=\"primary\" onClick={() => this.setState({ selectedDistrict: a.dccode })}>{a.dname_chi}</Button>)\n            }\n            {this.renderDCCA(this.state.selectedDistrict)}\n          </Paper>\n        </Grid>\n      </Grid>\n        \n\n      \n      \n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(SearchPage)\n","import React, { Component } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\n\nconst GET_PEOPLE_PROFILE = gql`\nquery ($id: uuid!) {\n  dc_people( \n    where: { \n      id: { _eq: $id}\n    }\n    order_by: {elections_aggregate: {\n      max: { year: asc }\n    }}\n  ) {\n    name_en\n    name_zh\n    estimated_yob\n    gender\n    elections {\n      cacode\n      year\n      votes\n      vote_percentage\n      constituency {\n        name_zh\n        expected_population\n        deviation_percentage\n      }\n      political_affiliation {\n        name_zh\n      }\n    }\n  }\n}\n`;\n\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  async componentDidMount() {\n  }\n\n  render() {\n    const { match: { params: { id } } } = this.props\n    return (\n      <Query query={GET_PEOPLE_PROFILE} variables={{ id }}>\n        {({ loading, error, data }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n          const person = data.dc_people[0];\n          return (\n            <Paper>\n              <Card>\n                <CardHeader\n                  // avatar={\n                  //   // TODO: Add candi_number to candidate.json\n                  //   <Avatar\n                  //     src={`/static/images/avatar/2015/${showCase[showCase.length - 1].cacode}_0${showCase[showCase.length - 1].candi_number}.jpg`}\n                  //   >\n                  //   </Avatar>\n                  // }\n                  title={person.name_zh ? person.name_zh : person.name_en}\n                  subheader={`${moment().year() - person.estimated_yob}歲`}\n                />\n                <CardContent>\n                </CardContent>\n              </Card>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Year</TableCell>\n                    <TableCell>Code</TableCell>\n                    <TableCell>Distict</TableCell>\n                    <TableCell>Political Affiliation</TableCell>\n                    <TableCell>Votes</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {person.elections.map(row => (\n                    <TableRow key={row.year + row.cacode}>\n                      <TableCell align=\"right\">{row.year}</TableCell>\n                      <TableCell align=\"right\">{row.cacode}</TableCell>\n                      {row.constituency ?\n                        <TableCell align=\"right\">{row.constituency.name}</TableCell> :\n                        <TableCell align=\"right\">?</TableCell>\n                      }\n                      {row.political_affiliation ?\n                        <TableCell align=\"right\">{row.political_affiliation.name_zh}</TableCell> :\n                        <TableCell align=\"right\">N/A</TableCell>\n                      }\n\n                      <TableCell align=\"right\">{`${row.votes ? row.votes : '-'} (${row.vote_percentage ? row.vote_percentage : '-'}%)`}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Paper>\n          );\n        }}\n      </Query>\n      // TODO: UI design\n\n    )\n  }\n}\n\nexport default ProfilePage\n","\nimport React from 'react'\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        height: 10,\n        backgroundColor: lighten('#ff6c5c', 0.5),\n    },\n    bar: {\n        borderRadius: 20,\n        backgroundColor: '#ff6c5c',\n    },\n})(LinearProgress)\n\nexport default function CustomizedProgressBars(props) {\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <BorderLinearProgress\n                className={classes.margin}\n                variant=\"determinate\"\n                color=\"secondary\"\n                value={props.value}\n            />\n        </React.Fragment>\n    );\n}","import React, { Component } from 'react'\nimport Map from 'ol/Map'\nimport View from 'ol/View'\nimport TileLayer from 'ol/layer/Tile'\nimport VectorLayer from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport XYZ from 'ol/source/XYZ'\nimport GeoJSON from 'ol/format/GeoJSON'\nimport { Style, Stroke, Fill } from 'ol/style'\nimport Select from 'ol/interaction/Select'\n\n\nimport dc2003 from '../data/DCCA_2003'\nimport dc2007 from '../data/DCCA_2007'\nimport dc2011 from '../data/DCCA_2011'\nimport dc2015 from '../data/DCCA_2015'\nimport dc2019 from '../data/DCCA_2019'\n\n\nclass OLMap extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    componentDidMount() {\n        const { year, code } = this.props\n        const dc = [dc2003, dc2007, dc2011, dc2015, dc2019].find(d => d.name === `DCCA_${year}`);\n        var isDCDataExist = true;\n        var featuresLayer;\n\n        if(dc === undefined) {\n            isDCDataExist = false;\n        }\n\n        if(isDCDataExist) {\n            this.featureSource = new VectorSource({\n                features: (new GeoJSON()).readFeatures(dc)\n            })\n            \n            const styleFunction = feature => {\n                if (feature.getProperties().CACODE === code) {\n                    return new Style({\n                        fill: new Fill({\n                            color: 'rgba(74, 144, 226, 0.5)'\n                        }),\n                        stroke: new Stroke({\n                            color: '#3e59ef',\n                            width: 2\n                        })\n                    })\n                }\n                return new Style({\n                    fill: new Fill({\n                        color: 'rgba(74, 144, 226, 0.05)'\n                    }),\n                    stroke: new Stroke({\n                        color: '#3e59ef',\n                        width: 2\n                    })\n                })\n            }\n    \n            featuresLayer = new VectorLayer({\n                source: this.featureSource,\n                style: styleFunction\n            })\n        }\n\n        // create map object with feature layer\n        var layers = [\n            //default OSM layer\n            new TileLayer({\n                source: new XYZ({\n                    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}'\n                })\n            })\n        ];\n        \n        if(isDCDataExist) {\n            layers.push(featuresLayer)\n        }\n\n        const map = new Map({\n            target: this.refs.mapContainer,\n            layers,\n            view: new View({\n                projection: 'EPSG:4326',\n                center: [114.2029, 22.3844],\n                zoom: 13,\n            })\n        })\n\n        if(isDCDataExist) {\n            // Fit to feature \n            const features = this.featureSource.getFeatures()\n            for (let i = 0; i < features.length; i++) {\n                if (features[i].getProperties().CACODE === code) {\n                    const extent = features[i].getGeometry().getExtent()\n                    map.getView().fit(extent, {\n                        size: map.getSize(),\n                        padding: [10, 10, 10, 10]\n                    })\n                    break\n                }\n            }\n        }\n        \n        this.setState({\n            map,\n            view: map.getView(),\n            featuresLayer: isDCDataExist ? featuresLayer : null\n        })\n\n        const select = new Select()\n\n        if (select !== null) {\n            map.addInteraction(select);\n            select.on('select', this.handleMapClick)\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.year !== this.props.year\n    }\n\n\n    handleMapClick = e => {\n        const { year, changeDistrict } = this.props\n        const selectedFeature = e.target.getFeatures().getArray()\n        // const selectedFeatureExtent = selectedFeature[0].getGeometry().getExtent()\n        // this.state.map.getView().fit(selectedFeatureExtent)\n\n        if (selectedFeature[0]) {\n            changeDistrict(year, selectedFeature[0].getProperties().CACODE)\n        }\n    }\n\n    render() {\n        return (\n            <div ref=\"mapContainer\"> </div>\n        )\n    }\n\n}\n\nexport default OLMap","import React, { Component } from 'react'\nimport { styled } from '@material-ui/styles';\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Typography from '@material-ui/core/Typography'\nimport CustomizedProgressBars from '../../components/BorderLinearProgress'\nimport Avatar from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport OLMap from '../../components/OLMap'\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nconst Map = styled(Paper)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 300,\n  padding: '0 30px',\n})\n\nconst DistrictCard = styled(Paper)({\n  background: '#f6f6f6',\n  color: '#00000',\n  height: 300\n})\n\nconst GET_DISTRICTS = gql`\nquery ($year: Int!, $code:String!) {\n  dc_constituencies(where: {year: {_eq: $year}, code: {_eq: $code}}) {\n    name_zh\n    name_en\n    code\n    deviation_percentage\n    expected_population\n    main_areas\n    candidates {\n      candidate_number\n      person {\n        name_zh\n        name_en\n      }\n      vote_percentage\n      votes\n      is_won\n    }\n  }\n}\n`;\n\nclass DistrictPage extends Component {\n\n  homeUrl = 'https://cswbrian.github.io/district-councils-dashboard/'\n\n  handleChangeDistrict = (year, code) => {\n    if (!year || !code) return\n    this.props.history.replace(`/district/${year}/${code}`)\n  }\n\n  onPrevElection() {\n    const { match: { params: { year, code } } } = this.props\n    this.props.history.replace(`/district/${parseInt(year, 10) - 4}/${code}`)\n  }\n\n  onNextElection() {\n    const { match: { params: { year, code } } } = this.props\n    this.props.history.replace(`/district/${parseInt(year, 10) + 4}/${code}`)\n  }\n\n  render() {\n    const { match: { params: { year, code } } } = this.props   \n    const nextElectionYear = parseInt(year, 10) + 4;\n    const currentYear = new Date().getFullYear();\n\n    return (\n      <Query query={GET_DISTRICTS} variables={{ year, code }}>\n        {({ loading, error, data }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n          const district = data.dc_constituencies[0];\n\n          return (\n            <React.Fragment>\n              <Container maxWidth='lg'>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={8}>\n                    <OLMap\n                      year={year}\n                      code={code}\n                      changeDistrict={this.handleChangeDistrict}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <DistrictCard>\n                      <Box\n                        p={1}\n                        border={0}\n                        color='primary.minor'>\n                        <Box\n                          display=\"flex\"\n                          flexDirection=\"row\"\n                          alignItems='center'\n                          justifyContent='space-between'>\n                          <IconButton aria-label='arrow_back' onClick={this.onPrevElection.bind(this)}>\n                            <ArrowBackIcon />\n                          </IconButton>\n                          <Typography variant='button' gutterBottom>\n                            {year}\n                          </Typography>\n                          {\n                            nextElectionYear < currentYear &&\n                            <IconButton aria-label='arrow_forward' onClick={this.onNextElection.bind(this)}>\n                              <ArrowForwardIcon />\n                            </IconButton>\n                          }\n                          {\n                             nextElectionYear >= currentYear &&\n                            //  if there is no next button, show a 48x48 empty box to align the above 2 elements\n                             <div style={{ width: '48px', height: '48px' }}></div>\n                          }\n                        </Box>\n                        <Typography variant='h4' color='inherit' style={{ display: 'inline-block' }}>\n                          {district.name_zh}\n                        </Typography>\n                        <Typography variant='h4' color='inherit' style={{ display: 'inline-block' }}>\n                          {code}\n                        </Typography>\n                        <Divider />\n                        <List>\n                          <ListItemText primary={'區議員'} />\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\n                        </List>\n                        <List>\n                          <ListItemText primary={'政黨'} />\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\n                        </List>\n                      </Box>\n                    </DistrictCard>\n                  </Grid>\n                </Grid>\n                {district.main_areas.length > 0 && <Grid item xs={12}>\n                  <Typography variant='h6' gutterBottom>主要屋邨 / 地區</Typography>\n                  <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    alignContent=\"flex-start\"\n                  >\n                    {\n                      district.main_areas.map((area, index) =>\n                        <Box mr={1} key={index}>\n                          {`${Object.keys(area)[0]}. ${area[Object.keys(area)[0]]}`}\n                        </Box>)\n                    }\n                  </Box>\n                </Grid>}\n              </Container>\n              <Grid item xs={12}>\n                <Container maxWidth='lg'>\n                  <Typography variant='h5' gutterBottom>估計人口</Typography>\n                  {district.expected_population}\n\n                  <Typography variant='h5' gutterBottom>議員候選人</Typography>\n                  <Grid item xs={12}>\n                    {\n                      district.candidates.sort((a, b) => a.candidate_number - b.candidate_number).map(candidate =>\n                        <div\n                          style={{ width: '100%' }}\n                          key={candidate.candidate_number}>\n                          <Box\n                            display=\"flex\"\n                            flexDirection=\"row\"\n                            justifyContent='space-between'>\n                            <Box p={1}>\n                              <Avatar\n                                src={`${this.homeUrl}/static/images/avatar/${year}/${code}_${year === 2011 ? '0' : ''}${candidate.candidate_number}.jpg`}\n                                imgProps={{ onError: (e) => { e.target.src = this.homeUrl + '/static/images/avatar/default.png'; } }} >\n                              </Avatar>\n                            </Box>\n                            <Box p={1}>\n                              <Typography gutterBottom variant='h6'>\n                                {`${candidate.candidate_number == null ? \"\" : candidate.candidate_number + \".\" } ${candidate.person.name_zh || candidate.person.name_en}`}\n                              </Typography>\n                            </Box>\n                            <Box p={1}>\n                              <Typography color='textSecondary' variant='body2'>\n                                陣營\n                      </Typography>\n                              <Typography gutterBottom variant='body1'>\n                                {candidate.political_affiliation ? candidate.political_affiliation.name_zh : ''}\n                              </Typography>\n                            </Box>\n                            <Box p={1}>\n                              <Typography gutterBottom variant='body1'>\n                                {`${candidate.votes} (${candidate.vote_percentage}%)`}\n                              </Typography>\n                            </Box>\n                            <Box p={1}>\n                              <Typography color='textSecondary' variant='body2'>\n                                得票率\n                      </Typography>\n                              <CustomizedProgressBars\n                                value={parseFloat(candidate.vote_percentage)} />\n                            </Box>\n                            <Box p={1}>\n                              { candidate.is_won && <CheckCircleIcon /> }\n                              { !candidate.is_won && <div style={{ width: '24px', height: '24px' }}></div> }\n                            </Box>\n                          </Box>\n                        </div>)\n                    }\n                  </Grid>\n                </Container>\n              </Grid>\n            </React.Fragment>)\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default DistrictPage\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport createMuiTheme from '../../ui/theme'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\n\nconst theme = createMuiTheme\n\nconst styles = theme => ({\n  content: {\n  },\n})\n\nclass NotFoundPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n     \n    }\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n      TODO - <a href='https://notfound.collaction.hk/'>404</a>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NotFoundPage)\n","import React, { Component } from 'react'\nimport { Route, Switch } from \"react-router-dom\"\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport createMuiTheme from './ui/theme'\nimport NavBar from './layout/NavBar'\nimport SearchPage from './pages/search'\nimport ProfilePage from './pages/profile'\nimport DistrictPage from './pages/district'\nimport NotfoundPage from './pages/notfound'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\n\nimport './App.css'\n\nconst client = new ApolloClient({\n  uri: \"https://gql.opencultures.life/graphql\"\n});\n\nconst theme = createMuiTheme\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  // Load app bar information from the theme\n  // https://stackoverflow.com/questions/48508449/content-beneath-fixed-appbar\n  toolbar: theme.mixins.toolbar\n})\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <ApolloProvider client={client}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n            <NavBar />\n            <main>\n              {/* <div className={classes.toolbar} /> */}\n              {/* Content will be shifted downwards by the div above. If the div is removed, the content will disappear under the app bar. */}\n              <Switch>\n                <Route exact path=\"/\" component={SearchPage} />\n                <Route path=\"/profile/:id\" component={ProfilePage} />\n                <Route path=\"/district/:year/:code\" component={DistrictPage} />\n                <Route component={NotfoundPage} />\n              </Switch>\n            </main>\n        </MuiThemeProvider>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}