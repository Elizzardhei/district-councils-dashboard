{"version":3,"sources":["../node_modules/encoding/lib sync","ui/theme/index.js","layout/NavBar.js","utils/httpClient.js","components/PeopleSearcher.js","components/AddressSearcher.js","pages/search/index.js","utils/features.js","components/MapboxMap.js","components/InfoCard.js","pages/map/index.js","pages/profile/index.js","pages/district/index.js","pages/notfound/index.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","createMuiTheme","palette","primary","main","secondary","themeName","typography","useNextVariants","fontFamily","NavBar","classes","this","props","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","className","grow","Button_default","component","NavLink","to","Component","withStyles","theme","flexGrow","withTheme","fetchData","query","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","json","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","Object","objectWithoutProperties","TextField_default","assign","fullWidth","InputProps","node","input","renderSuggestion","suggestion","_ref","isHighlighted","matches","match","name","parts","parse","MenuItem_default","selected","map","part","index","highlight","key","String","style","fontWeight","text","getSuggestionValue","PeopleSearcher","state","single","popper","suggestions","rawSuggestions","handleSuggestionsFetchRequested","_ref2","value","_this","setState","getSuggestions","handleSuggestionsClearRequested","handleChange","event","_ref3","newValue","defineProperty","handleSuggestionSelected","_ref4","suggestionValue","suggestionIndex","sectionIndex","handlePeopleSelected","deburr","trim","toLowerCase","length","filter","includes","fetched_data","data","dc_people","i","name_chi","_this2","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","class","dist_default","label","placeholder","onChange","popperNode","InputLabelProps","shrink","suggestionsList","renderSuggestionsContainer","options","Popper_default","anchorEl","open","Boolean","children","Paper_default","square","containerProps","width","clientWidth","React","root","height","container","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","display","margin","padding","listStyleType","IntegrationAutosuggest","inputValue","inputLength","count","keep","slice","address","coordinate","onAutoSuggestClicked","nativeEvent","MouseEvent","foundAddress","addresses","fullAddress","AddressParser","LANG_ZH","error","handleAddressSelected","currentSearchingResult","records","_","record","autoSuggestDiv","onAddressFieldChanged","bind","backgroundColor","left","right","divider","SearchPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","history","push","concat","renderDCCA","district","dcca","selectedDistrict","autoCompleteList","evt","target","Grid_default","item","xs","paper","Input_default","defaultValue","aria-label","components_PeopleSearcher","area","dccode","onClick","dname_chi","getAllFeaturesFromPoint","point","featuresArray","pt","turf","lng","lat","feature","polygonProps","n","features","poly","geometry","coordinates","objectSpread","properties","year","split","getBoundingBox","coords","latitude","longitude","bounds","j","xMin","xMax","yMin","yMax","MapboxMap","getMapboxFeature","current","mapLayers","find","layer","checked","queryRenderedFeatures","layers","zoomToBound","mapboxgl","LngLatBounds","LngLat","fitBounds","maxZoom","hoveredStateId","clickedStateId","_this$props","token","center","zoom","minZoom","styleID","onMapClicked","selectedDCCA","onMapPanned","onMapFeatureClicked","mapConfig","accessToken","Map","on","getStyle","forEach","addSource","type","generateId","addLayer","source","layout","visibility","paint","line-color","line-width","fill-color","fill-opacity","_this2$map$getCenter","getCenter","toFixed","getZoom","prevProps","_this3","getLayer","setLayoutProperty","lastClick","setFeatureState","newFeature","project","newFeatureId","setTimeout","top","bottom","candiNumMapping","1","2","3","4","5","6","7","8","9","10","card","pos","marginBottom","electors","cacode","yearIndex","findIndex","o","parseInt","election","Fragment","Card_default","CardContent_default","cname","ename","List_default","candidates","candi","ListItem_default","alignItems","number","ListItemAvatar_default","Avatar_default","src","imgProps","onError","ListItemText_default","cName","eName","vote","win","ListItemSecondaryAction_default","Star_default","LONG","LAT","ZOOM","STYLE_ID","MapPage","lngLat","dccaList","parseFloat","onYearBtnClicked","idx","toConsumableArray","dc2003","dc2007","dc2011","dc2015","dc2019","_this$state","_this$state$map","currentFeature","currentYear","MuiThemeProvider_default","CssBaseline_default","content","toolbar","components_MapboxMap","InfoCard","CACODE","AddressSearcher","searchBox","yearButton","d","button","mixins","ProfilePage","params","showCase","candidate","CardHeader_default","avatar","candi_number","title","subheader","age","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","row","scope","district_name_chi","CANAME_chi","camp","political_affiliation","votes","percentage","DistrictPage","console","log","districtCode","substring","gutterBottom","mainArea","expectedPopulation","NotFoundPage","href","App","layout_NavBar","react_router","exact","path","NotfoundPage","ReactDOM","render","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.63272006.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 370;","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst palette = {\n  primary: { main: '#FF8F00' },\n  secondary: { main: '#00E676' }\n};\nconst themeName = 'Pizazz Spring Green Falcon';\n\nconst typography =  {\n  useNextVariants: true,\n  fontFamily: \"'Noto Sans TC', sans-serif\"\n}\n\nexport default createMuiTheme({ palette, themeName, typography });\n","import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  }\n})\n\nclass NavBar extends Component {\n    render() {\n        const { classes } = this.props\n        return (\n            <AppBar position=\"fixed\">\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              District Council Dashboard\n              </Typography>\n              <Button component={NavLink} to=\"/\">Search</Button>\n              <Button component={NavLink} to=\"/map\">Map</Button>\n            </Toolbar>\n          </AppBar>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NavBar)","export const fetchData = query => {\n    return fetch('https://gql.opencultures.life/graphql', {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify({ query }), // data can be `string` or {object}!\n        headers:{\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(res => res.json())\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport deburr from 'lodash/deburr'\nimport Autosuggest from 'react-autosuggest'\nimport match from 'autosuggest-highlight/match'\nimport parse from 'autosuggest-highlight/parse'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Popper from '@material-ui/core/Popper'\nimport { withStyles } from '@material-ui/core/styles'\nimport { fetchData } from '../utils/httpClient'\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node)\n          inputRef(node)\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  )\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.name, query)\n  const parts = parse(suggestion.name, matches)\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) =>\n          part.highlight ? (\n            <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\n              {part.text}\n            </strong>\n          ),\n        )}\n      </div>\n    </MenuItem>\n  )\n}\n\n\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name\n}\n\nconst styles = theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    // left: 0,\n    // right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  }\n})\n\nclass PeopleSearcher extends React.Component {\n  state = {\n    single: '',\n    popper: '',\n    suggestions: [],\n    rawSuggestions: []\n  }\n\n   getSuggestions(value) {\n    const inputValue = deburr(value.trim()).toLowerCase()\n    const inputLength = inputValue.length\n  \n    return inputLength === 0 ? [] : this.state.rawSuggestions.filter(suggestion => suggestion.name.includes(value))\n  }\n\n  async componentDidMount() {\n    const query = `\n    {\n      dc_people(distinct_on: name_chi) {\n        name_chi\n      }\n    }\n    `\n    const fetched_data = await fetchData(query)\n    this.setState({rawSuggestions: fetched_data.data.dc_people.map(i => {\n      return {\n        name: i.name_chi\n      }\n    })})\n  }\n\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value),\n    })\n  }\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    })\n  }\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    })\n  }\n\n  handleSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n    this.props.handlePeopleSelected(suggestion)\n  }\n\n  render() {\n    const { classes } = this.props\n    \n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      onSuggestionSelected: this.handleSuggestionSelected,\n      getSuggestionValue,\n      renderSuggestion,\n    }\n\n    return (\n      <div className={this.props.class}>\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            label: '揾人',\n            placeholder: 'Please type a candidate name',\n            value: this.state.popper,\n            onChange: this.handleChange('popper'),\n            inputRef: node => {\n              this.popperNode = node\n            },\n            InputLabelProps: {\n              shrink: true,\n            },\n          }}\n          theme={{\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n              <Paper\n                square\n                {...options.containerProps}\n                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\n              >\n                {options.children}\n              </Paper>\n            </Popper>\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nPeopleSearcher.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PeopleSearcher)","import React from 'react';\nimport PropTypes, { instanceOf } from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\nimport * as AddressParser from 'hk-address-parser-lib';\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) =>\n          part.highlight ? (\n            <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\n              {part.text}\n            </strong>\n          ),\n        )}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'block',\n    // height: 250,\n    flexGrow: 1,\n    position: 'absolute',\n    width: '100%',\n    backgroundColor: '#fff',\n    padding: '10px'\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block'\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none'\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  state = {\n    value: '',\n    suggestions: [],\n  };\n\n  getSuggestions(value) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n      ? []\n      : this.state.suggestions.filter(suggestion => {\n          const keep =\n            count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n          if (keep) {\n            count += 1;\n          }\n\n          return keep;\n        });\n  }\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    // console.log('fetched');\n    // this.setState({\n    //   suggestions: this.getSuggestions(value),\n    // });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  handleAddressSelected(address) {\n    const coordinate = address.coordinate();\n    this.props.onAutoSuggestClicked(coordinate)\n  }\n\n  async onAddressFieldChanged(event, { newValue }) {\n    const isMouseClick = event.nativeEvent instanceof MouseEvent;\n    if (isMouseClick) {\n      // This is fired when clicked on the pull down menu\n      this.setState({\n        value: newValue\n      })\n\n      let foundAddress = null;\n      try {\n        foundAddress = this.state.addresses.filter( address => address.fullAddress(AddressParser.Address.LANG_ZH) === newValue)[0];\n      } catch (error) {\n      }\n\n      if (foundAddress) {\n        this.handleAddressSelected(foundAddress);\n      }\n    } else {\n      // this is fired when typing in the search field\n      this.setState({\n        currentSearchingResult: newValue,\n        value: newValue\n      })\n      const records = await AddressParser.parse(newValue);\n\n      // Ignore the search if it is not the latest result\n      if (this.state.currentSearchingResult === newValue) {\n        this.setState({\n          suggestions: records.filter((_, index) => index < 10).map(record => ({ label: record.fullAddress(AddressParser.Address.LANG_ZH) })),\n          addresses: records,\n        })\n      }\n\n    }\n\n  }\n  render() {\n    const { classes } = this.props;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      getSuggestionValue,\n      renderSuggestion,\n    };\n\n    return (\n\n      <div className={classes.root}>\n        <div className={classes.autoSuggestDiv}>\n          <Autosuggest\n            {...autosuggestProps}\n            inputProps={{\n              classes,\n              label: 'Label',\n              placeholder: 'With Popper',\n              value: this.state.value,\n              onChange: this.onAddressFieldChanged.bind(this),\n              inputRef: node => {\n                this.popperNode = node;\n              },\n              InputLabelProps: {\n                shrink: true,\n              },\n            }}\n            theme={{\n              suggestionsList: classes.suggestionsList,\n              suggestion: classes.suggestion,\n            }}\n            renderSuggestionsContainer={options => (\n              <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n                <Paper\n                  square\n                  {...options.containerProps}\n                  style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\n                >\n                  {options.children}\n                </Paper>\n              </Popper>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);","import React, { Component } from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Input from '@material-ui/core/Input'\nimport PeopleSearcher from '../../components/PeopleSearcher'\nimport AddressSearcher from '../../components/AddressSearcher'\nimport area from '../../data/area'\nimport district from '../../data/district'\nimport Button from '@material-ui/core/Button'\n\nimport * as AddressParser from 'hk-address-parser-lib'\n\nconst styles = theme => ({\n})\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDistrict: null,\n      autoCompleteList: []\n    }\n  }\n\n  async componentDidMount() {\n\n  }\n\n  async onAddressFieldChanged(evt) {\n    const { value } = evt.target;\n    const records = await AddressParser.parse(value);\n    this.setState({\n      autoCompleteList: records,\n    })\n  }\n\n  handlePeopleSelected = result => {\n    this.props.history.push(`profile/${result.name}`)\n  }\n\n  renderDCCA = code => {\n    if (!code) return null\n    return <div>\n      {Object.keys(district['2019'][code]).map(dcca => {\n        return (\n          <Button component={NavLink} to={`/district/2019/${dcca}`} key={district['2019'][code][dcca].code} color=\"secondary\">{district['2019'][code][dcca].name}</Button>\n        )\n      })}\n    </div>\n  }\n\n  render() {\n    const { classes } = this.props\n    const { autoCompleteList } = this.state\n\n    return (\n      <Grid container spacing={24}>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            {/* TODO: Change the following input to AddressSearcher component, similar to PeopleSearcher */}\n            <Input\n              defaultValue=\"Search Address\"\n              inputProps={{\n                'aria-label': 'Description',\n              }}\n              onChange={this.onAddressFieldChanged.bind(this)}\n            />\n            {autoCompleteList.map((address, index) => (<div key={index}><p>{address.fullAddress()}</p></div>))}\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            {/* TODO: Build a people.json for the autosuggest and profile */}\n            <PeopleSearcher\n              handlePeopleSelected={this.handlePeopleSelected}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            {\n              area.map(a => <Button key={a.dccode} color=\"primary\" onClick={() => this.setState({ selectedDistrict: a.dccode })}>{a.dname_chi}</Button>)\n            }\n            {this.renderDCCA(this.state.selectedDistrict)}\n          </Paper>\n        </Grid>\n      </Grid>\n        \n\n      \n      \n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(SearchPage)\n","import * as turf from '@turf/turf'\n\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\n    const pt = turf.point([point.lng, point.lat])\n    const result = featuresArray.map(feature => {\n        let polygonProps = {}\n        for (let i= 0, n = feature.features.length; i < n; i++) {\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\n            if (turf.booleanPointInPolygon(pt, poly)) {\n                polygonProps = {...feature.features[i].properties}\n                break\n            }\n        }\n        return {\n            year: feature.name.split('_')[1],\n            ...polygonProps\n        }\n    })\n    return result\n}\n\n\nexport const getBoundingBox = data => {\n    var bounds = {}, coords, point, latitude, longitude;\n  \n    // We want to use the “features” key of the FeatureCollection (see above)\n    // data = data.features;\n  \n    // Loop through each “feature”\n    // for (var i = 0; i < data.length; i++) {\n  \n      // Pull out the coordinates of this feature\n      coords = data.geometry.coordinates[0];\n  \n      // For each individual coordinate in this feature's coordinates…\n      for (var j = 0; j < coords.length; j++) {\n  \n        longitude = coords[j][0];\n        latitude = coords[j][1];\n  \n        // Update the bounds recursively by comparing the current\n        // xMin/xMax and yMin/yMax with the coordinate\n        // we're currently checking\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\n      }\n  \n    // }\n  \n    // Returns an object that contains the bounds of this GeoJSON\n    // data. The keys of this object describe a box formed by the\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\n    return bounds;\n  }","import React, { Component } from 'react'\nimport mapboxgl from 'mapbox-gl'\nimport { getBoundingBox } from '../utils/features'\n\nclass MapboxMap extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hoveredStateId: null,\n            clickedStateId: null\n        }\n      }\n\n    componentDidMount() {\n        // set map properties\n        const { token, center, zoom, minZoom, styleID, mapLayers, selectedDCCA, onMapClicked, onMapFeatureClicked, onMapPanned, color } = this.props\n\n        const mapConfig = {\n            container: 'map',\n            style: `mapbox://styles/${styleID}`,\n            center: center,\n            zoom: zoom,\n            minZoom: minZoom\n        }\n\n        mapboxgl.accessToken = token\n        this.map = new mapboxgl.Map(mapConfig)\n\n        this.map.on('load', () => {\n            // Get the map style and set it in the state tree\n            const style = this.map.getStyle()\n            //   this.props.setStyle(style)\n\n            mapLayers.forEach((layer, index) => {\n                this.map.addSource(layer.name, {\n                    type: 'geojson',\n                    data: layer,\n                    generateId: true\n                    // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\n                })\n\n                this.map.addLayer({\n                    id: `${layer.name}-lines`,\n                    type: 'line',\n                    source: layer.name,\n                    layout: {\n                        'visibility': layer.checked ? 'visible': 'none'\n                    },\n                    paint: {\n                        'line-color': color[index],\n                        'line-width': 2\n                    }\n                })\n\n                this.map.addLayer({\n                    id: `${layer.name}-hovers`,\n                    type: 'fill',\n                    source: layer.name,\n                    layout: {\n                        'visibility': layer.checked ? 'visible': 'none'\n                    },\n                    paint: {\n                        \"fill-color\": \"#000\",\n                        \"fill-opacity\": [\"case\",\n                            [\"boolean\", [\"feature-state\", \"hover\"], false],\n                            0.1,\n                            0\n                        ]\n                    }\n                })\n\n                this.map.addLayer({\n                    id: `${layer.name}-highlight`,\n                    type: 'fill',\n                    source: layer.name,\n                    layout: {\n                        'visibility': layer.checked ? 'visible': 'none'\n                    },\n                    paint: {\n                        \"fill-color\": color[index],\n                        \"fill-opacity\": [\"case\",\n                            [\"boolean\", [\"feature-state\", \"highlight\"], false],\n                            0.3,\n                            0\n                        ]\n                    }\n                })\n\n                // When the user moves their mouse over the state-fill layer, we'll update the\n                // feature state for the feature under the mouse.\n                // this.map.on(\"mousemove\", `${layer.name}-hovers`, function (e) {\n                    // if (e.features.length > 0) {\n                        // if (this.state.hoveredStateId !== null) {\n                        //     this.setFeatureState({ source: layer.name, id: this.state.hoveredStateId }, { hover: false })\n                        // }\n                        // let currentFeatureId = e.features[0].id\n                        // this.setFeatureState({ source: layer.name, id: currentFeatureId }, { hover: true })\n                        // this.setState({hoveredStateId: currentFeatureId})\n                    // }\n                // })\n\n                // When the mouse leaves the state-fill layer, update the feature state of the\n                // previously hovered feature.\n                // this.map.on(\"mouseleave\", `${layer.name}-hovers`, function () {\n                //     if (hoveredStateId) {\n                //         this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\n                //     }\n                //     hoveredStateId = null\n                // })\n\n                // this.map.on(\"click\", `${layer.name}-highlight`, function (e) {\n                // \n                    // if (clickedStateId) {\n                    //     this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: false })\n                    //     clickedStateId = null\n                    // }\n                    // clickedStateId = e.features[0].id\n                    // this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: true })\n                    // let bounds = getBoundingBox(e.features[0])\n                    // bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\n                    // this.fitBounds(bounds, {\n                    //     padding: 50,\n                    //     maxZoom: 13.5\n                    // })\n                // })\n\n            })\n\n            this.map.on('click', e => {\n                this.getMapboxFeature(e.point)\n                onMapClicked(e)\n            })\n\n            this.map.on('move', () => {\n                const { lng, lat } = this.map.getCenter()\n                onMapPanned(lng.toFixed(4), lat.toFixed(4), this.map.getZoom().toFixed(2))\n            })\n\n\n            \n        })\n\n    }\n\n    getMapboxFeature = (coordinate) => {\n        const current = this.props.mapLayers.find(layer => layer.checked)\n        const features = this.map.queryRenderedFeatures(\n            coordinate, { layers: [`${current.name}-highlight`] }\n          );\n          return features\n    }\n\n    zoomToBound = (feature) => {\n        let bounds = getBoundingBox(feature)\n        bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\n\n        this.map.fitBounds(bounds, {\n            padding: 50,\n            maxZoom: 13.5\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.mapLayers !== prevProps.mapLayers) {\n\n            const status = this.props.mapLayers.map(layer => {\n                return {\n                    name: layer.name,\n                    visibility: layer.checked ? 'visible' : 'none'\n                }\n            })\n\n            status.forEach(layer => {\n                if (this.map.getLayer(`${layer.name}-lines`)) {\n                    this.map.setLayoutProperty(`${layer.name}-lines`, 'visibility', layer.visibility)\n                    this.map.setLayoutProperty(`${layer.name}-hovers`, 'visibility', layer.visibility)\n                    this.map.setLayoutProperty(`${layer.name}-highlight`, 'visibility', layer.visibility)\n                }\n            })\n        }\n\n        if (this.props.lastClick !== prevProps.lastClick) {\n                if (this.state.clickedStateId) {\n                    this.map.setFeatureState({ source: 'DCCA_2015', id: this.state.clickedStateId }, { highlight: false })\n                }\n\n                if (this.props.lastClick) {\n                    const newFeature = this.getMapboxFeature(this.map.project(this.props.lastClick))[0]\n                    const newFeatureId = newFeature.id\n                    this.zoomToBound(newFeature)\n                    \n                    setTimeout(() => {\n                        this.map.setFeatureState({ source: 'DCCA_2015', id: newFeatureId }, { highlight: true }) \n                    }, 1000)\n                    \n\n                    this.setState({\n                        clickedStateId: newFeatureId\n                    })\n                }\n                \n                \n        }\n    }\n\n    render() {\n        return (\n            <div id='map'\n                style={{\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    width: '100%',\n                    height: '100%',\n                }}\n            ></div>\n        )\n    }\n}\n\nexport default MapboxMap","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport PersonIcon from '@material-ui/icons/Person'\nimport StarIcon from '@material-ui/icons/Star'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = {\n    card: {    \n        width: '400px',\n        position: 'absolute',\n        top: '20%',\n        left: '100px'\n    },\n    pos: {\n        marginBottom: 12,\n    },\n}\n\n\nconst candiNumMapping = {\n        1: '①',\n        2: '②',\n        3: '③',\n        4: '④',\n        5: '⑤',\n        6: '⑥',\n        7: '⑦',\n        8: '⑧',\n        9: '⑨',\n        10: '⑩'\n}\n\nconst SimpleCard = props => {\n    const { classes, electors, year, cacode } = props\n\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\n\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\n    \n    return (\n        <React.Fragment>\n            {result && <Card className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" >\n                        {year}\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        {result.cacode} {result.cname}\n                    </Typography>\n                    <Typography variant=\"subtitle2\">\n                        {result.ename}\n                    </Typography>\n                    <List>\n                    {\n                        result.candidates.map(candi => <ListItem alignItems=\"flex-start\" key={`${candi.number}`}>\n                            <ListItemAvatar>\n                                <Avatar \n                                src={`/static/images/avatar/${year}/${result.cacode}_${year === 2011 ? '0' : ''}${candi.number}.jpg`}\n                                imgProps={{ onError: (e) => { e.target.src = '/static/images/avatar/default.png'; } }} >\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${candi.number > 0 ? candiNumMapping[candi.number] : ''} ${candi.cName} ${candi.eName}`}\n                                secondary={candi.vote > 0 ? `${candi.vote}票` : '自動當選'}\n                            />\n                            {candi.win &&\n                            <ListItemSecondaryAction>\n                                <StarIcon color=\"secondary\" />\n                            </ListItemSecondaryAction>}\n                        </ListItem>)\n\n                    }\n                </List>\n                </CardContent>\n            </Card>}\n        </React.Fragment>\n    )\n}\n\nSimpleCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(SimpleCard)","import React, { Component } from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport { withStyles } from '@material-ui/core/styles'\nimport NavBar from '../../layout/NavBar'\nimport MapboxMap from '../../components/MapboxMap'\nimport InfoCard from '../../components/InfoCard'\nimport createMuiTheme from '../../ui/theme'\nimport { getAllFeaturesFromPoint } from '../../utils/features'\nimport Button from '@material-ui/core/Button'\nimport AddressSearcher from '../../components/AddressSearcher'\n\nimport dc2003 from '../../data/DCCA_2003'\nimport dc2007 from '../../data/DCCA_2007'\nimport dc2011 from '../../data/DCCA_2011'\nimport dc2015 from '../../data/DCCA_2015'\nimport dc2019 from '../../data/DCCA_2019'\nimport electors from '../../data/electors'\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\n\nconst theme = createMuiTheme\n\nconst styles = theme => ({\n  content: {\n    flexGrow: 1\n  },\n  toolbar: theme.mixins.toolbar,\n  yearButton: {\n    position: 'absolute',\n    width: 100,\n    top: '20%'\n  },\n  searchBox: {\n    position: 'absolute',\n    zIndex: 100,\n    top: '50%'\n  }\n})\n\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA'\nconst LONG = 114.2029\nconst LAT = 22.3844\nconst ZOOM = 11\nconst STYLE_ID = 'mapbox/streets-v9'\nconst MIN_ZOOM = 10\n\nconst color = [\n  '#6e40e6',\n  '#f49600',\n  '#ff5d55',\n  '#005ecd',\n  '#ad0000'\n]\n\nclass MapPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dccaList: [dc2003, dc2007, dc2011, dc2015, dc2019],\n      open: false,\n      map: {\n        center: [LONG, LAT],\n        zoom: ZOOM,\n        styleID: STYLE_ID,\n        lastClick: null\n      },\n      selectedDCCA: null\n    }\n  }\n\n  componentDidMount() {\n    this.onYearBtnClicked('DCCA_2011')\n    this.onYearBtnClicked('DCCA_2015')\n  }\n\n  onMapPanned = (lng, lat, zoom) => {\n    this.setState({\n      map: {\n        center: [lng, lat],\n        zoom,\n      }\n    })\n  }\n\n  onMapClicked = (e) => {\n    this.setState({\n      map: {\n        lastClick : [e.lngLat.lng, e.lngLat.lat]\n      },\n      selectedDCCA: getAllFeaturesFromPoint(e.lngLat, this.state.dccaList)\n    })\n  }\n\n  onMapFeatureClicked = (e) => {\n    this.setState({\n      clickedStateId: e.features[0].id\n    })\n  }\n\n  onAutoSuggestClicked = (e) => {\n    this.setState({\n      map: {\n        lastClick : [e.lng, e.lat]\n      },\n      selectedDCCA: getAllFeaturesFromPoint({lat: parseFloat(e.lat), lng: parseFloat(e.lng)}, this.state.dccaList)\n    })\n  }\n\n  onYearBtnClicked = (name) => {\n    const idx = this.state.dccaList.findIndex(dcca => dcca.name === name)\n    let dccaList = [...this.state.dccaList]\n    dccaList.forEach(dcca => {dcca.checked = false})\n    dccaList[idx].checked = true\n    this.setState({ dccaList })\n  }\n\n  render() {\n    const { map: {center, zoom, lastClick}, selectedDCCA, dccaList } = this.state\n    const { classes, map } = this.props\n\n    const currentFeature = dccaList.length > 0 ? dccaList.find(dcca => dcca.checked) : null\n    const currentYear = currentFeature ? currentFeature.name.split('_')[1] : null\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {dccaList &&\n            <MapboxMap\n              mapLayers={dccaList}\n              token={TOKEN}\n              center={center}\n              zoom={zoom}\n              styleID={STYLE_ID}\n              minZoom={MIN_ZOOM}\n              color={color}\n              onMapClicked={this.onMapClicked}\n              onMapFeatureClicked={this.onMapFeatureClicked}\n              onMapPanned={this.onMapPanned}\n              clickedStateId={this.state.clickedStateId}\n              selectedDCCA={selectedDCCA}\n              lastClick={lastClick}\n            />}\n            <InfoCard \n            electors={electors}\n            year={currentYear}\n            cacode={currentYear && selectedDCCA && selectedDCCA.find(feature => feature.year === currentYear).CACODE}\n            />\n            \n            <AddressSearcher \n            className={classes.searchBox} \n            onAutoSuggestClicked={this.onAutoSuggestClicked}\n            />\n            <div className={classes.yearButton}>\n              <List>\n                {dccaList.map((dcca, index) => <ListItem key={`${dcca.name}`}>\n                  <Button\n                    onClick={() => this.onYearBtnClicked(dcca.name)}\n                    key={dcca.name} variant=\"contained\"\n                    style={{\n                      backgroundColor: dccaList.findIndex(d => d.name === dcca.name && d.checked === true) > -1 ? color[index] : '#e0e0e0'\n                    }}\n                    className={classes.button}>\n                    {dcca.name.split('_')[1]}\n                  </Button>\n                </ListItem>)}\n              </List>\n            </div>\n        </main>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(MapPage)","import React, { Component } from 'react'\nimport { withTheme } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Avatar from '@material-ui/core/Avatar'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport candidates from '../../data/candidates'\nimport { fetchData } from '../../utils/httpClient'\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n     \n    }\n  }\n\n  async componentDidMount() {\n    const query = `\n    {\n      dc_people(distinct_on: name_chi) {\n        name_chi\n      }\n    }\n    `\n    const fetched_data = await fetchData(query)\n    this.setState({rawSuggestions: fetched_data.data.dc_people.map(i => {\n      return {\n        name: i.name_chi\n      }\n    })})\n  }\n\n  render() {\n    const { match: { params } } = this.props\n    const showCase = candidates.filter(candidate => candidate.name_chi === params.name )\n    return (\n      // TODO: UI design\n      <Paper>\n        <Card>\n          <CardHeader\n            avatar={\n              // TODO: Add candi_number to candidate.json\n              <Avatar \n              src={`/static/images/avatar/2015/${showCase[showCase.length-1].cacode}_0${showCase[showCase.length-1].candi_number}.jpg`}\n              >\n              </Avatar>\n            }\n            title={showCase[0].name_chi}\n            subheader={`${showCase[showCase.length-1].age}歲 (${showCase[showCase.length-1].year})`}\n          />\n          <CardContent>\n          </CardContent>\n    </Card>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Year</TableCell>\n            <TableCell>Age</TableCell>\n            <TableCell>Distict</TableCell>\n            <TableCell>DCCA</TableCell>\n            <TableCell>Camp</TableCell>\n            <TableCell>political_affiliation</TableCell>\n            <TableCell align=\"right\">votes</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {showCase.map(row => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.year}\n              </TableCell>\n              <TableCell align=\"right\">{row.age}</TableCell>\n              <TableCell align=\"right\">{row.district_name_chi}</TableCell>\n              <TableCell align=\"right\">{row.CANAME_chi}</TableCell>\n              <TableCell align=\"right\">{row.camp}</TableCell>\n              <TableCell align=\"right\">{row.political_affiliation}</TableCell>\n              <TableCell align=\"right\">{`${row.votes} (${row.percentage}%)`}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n    )\n  }\n}\n\nexport default ProfilePage\n","import React, { Component } from 'react'\nimport { withTheme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport district from '../../data/district'\nimport { fetchData } from '../../utils/httpClient'\n\nclass DistrictPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  async componentDidMount() {\n    const { match: { params } } = this.props\n    const { year, code } = params\n    const query = `\n    {\n      dc_area(where: {\n        cacode: {\n          _eq: \"${code}\"\n        },\n        year: {\n          _eq: \"${year}\"\n        }\n      }) {\n        id\n        cname\n        people (where: {\n          year: {\n            _eq: \"${year}\"\n          }\n        }) {\n          id\n          name_chi\n          year\n        }\n      }\n    }\n    `\n    const fetched_data = await fetchData(query);\n    console.log(fetched_data)\n  }\n\n  render() {\n    const { match: { params } } = this.props\n    const { year, code } = params\n    const districtCode = code.substring(0, 1)\n    const dcca = code !== districtCode ? code : null\n    const data = district[year][districtCode][dcca];\n\n\n\n    \n\n    \n   \n    return (\n      // TODO: UI design\n      <Grid container spacing={24}>\n        <Grid item xs={9}>\n          This is the map\n        </Grid>\n        <Grid item xs={3}>\n        <Card>\n              <CardHeader\n                title={`${data.code} ${data.name}`}\n                subheader={year}\n              />\n              <CardContent>\n              </CardContent>\n            </Card>\n        </Grid>\n        <Grid item xs={12}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n                  主要屋邨 / 地區：\n                </Typography>\n                <List>\n                  {\n                    data.mainArea.map((area, index) => <ListItem alignItems=\"flex-start\" key={index}>\n                      <ListItemText\n                        primary={`${Object.keys(area)[0]}. ${area[Object.keys(area)[0]]}`}\n                      />\n                    </ListItem>)\n\n                  }\n                </List>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  估計人口： {data.expectedPopulation}\n                </Typography>\n\n                \n                \n          </Paper>\n        </Grid>\n        {/* <Grid item xs={6}>\n          <Paper>\n            <List>\n              {\n                data.boundaries.map((boundary, index) => <ListItem alignItems=\"flex-start\" key={index}>\n                  <ListItemText\n                    primary={`${Object.keys(boundary)[0]} ${boundary[Object.keys(boundary)[0]]}`}\n                  />\n                </ListItem>)\n\n              }\n            </List>\n          </Paper>\n        </Grid> */}\n      </Grid>\n    )\n  }\n}\n\nexport default DistrictPage\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport createMuiTheme from '../../ui/theme'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\n\nconst theme = createMuiTheme\n\nconst styles = theme => ({\n  content: {\n  },\n})\n\nclass NotFoundPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n     \n    }\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n      TODO - <a href='https://notfound.collaction.hk/'>404</a>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NotFoundPage)\n","import React, { Component } from 'react'\nimport { Route, Switch } from \"react-router-dom\"\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport createMuiTheme from './ui/theme'\nimport NavBar from './layout/NavBar'\nimport SearchPage from './pages/search'\nimport MapPage from './pages/map'\nimport ProfilePage from './pages/profile'\nimport DistrictPage from './pages/district'\nimport NotfoundPage from './pages/notfound'\nimport './App.css'\n\n\nconst theme = createMuiTheme\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  // Load app bar information from the theme\n  // https://stackoverflow.com/questions/48508449/content-beneath-fixed-appbar\n  toolbar: theme.mixins.toolbar\n})\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <NavBar />\n        <main>\n          <div className={classes.toolbar} />\n          {/* Content will be shifted downwards by the div above. If the div is removed, the content will disappear under the app bar. */}\n        <Switch>\n          <Route exact path=\"/\" component={SearchPage} />\n          <Route exact path=\"/map\" component={MapPage} />\n          <Route path=\"/profile/:name\" component={ProfilePage} />\n          <Route path=\"/district/:year/:code\" component={DistrictPage} />\n          <Route component={NotfoundPage} />\n        </Switch>\n        </main>\n        </MuiThemeProvider >\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}