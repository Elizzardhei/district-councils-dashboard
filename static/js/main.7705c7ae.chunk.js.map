{"version":3,"sources":["layout/NavBar.js","utils/features.js","components/MapboxMap.js","components/InfoCard.js","ui/theme/index.js","App.js","index.js"],"names":["NavBar","classes","this","props","react_default","a","createElement","AppBar_default","position","className","appBar","Toolbar_default","Typography_default","variant","color","noWrap","Component","withStyles","theme","zIndex","drawer","withTheme","getAllFeaturesFromPoint","point","featuresArray","pt","turf","lng","lat","map","feature","polygonProps","i","n","features","length","poly","geometry","coordinates","Object","objectSpread","properties","year","name","split","MapboxMap","_this","_this$props","token","center","zoom","minZoom","styleID","mapLayers","onMapClicked","onMapPanned","mapConfig","container","style","concat","mapboxgl","accessToken","Map","on","getStyle","hoveredStateId","clickedStateId","forEach","layer","index","addSource","type","data","generateId","addLayer","id","source","layout","visibility","checked","paint","line-color","line-width","fill-color","fill-opacity","e","setFeatureState","hover","highlight","bounds","coords","latitude","longitude","j","xMin","xMax","yMin","yMax","getBoundingBox","LngLatBounds","LngLat","fitBounds","padding","maxZoom","_this$map$getCenter","getCenter","toFixed","getZoom","prevProps","_this2","getLayer","setLayoutProperty","top","bottom","width","height","candiNumMapping","1","2","3","4","5","6","7","8","9","10","card","left","pos","marginBottom","electors","cacode","yearIndex","findIndex","o","parseInt","result","election","find","Fragment","Card_default","CardContent_default","cname","ename","List_default","candidates","candi","ListItem_default","alignItems","key","number","ListItemAvatar_default","Avatar_default","Person_default","ListItemText_default","primary","cName","eName","secondary","vote","win","ListItemSecondaryAction_default","Star_default","createMuiTheme","palette","main","themeName","typography","useNextVariants","fontFamily","LONG","LAT","ZOOM","STYLE_ID","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","lastClick","lngLat","selectedDCCA","state","dccaList","onYearBtnClicked","idx","dcca","toConsumableArray","dc2003","dc2007","dc2011","dc2015","dc2019","open","_this$state","_this$state$map","currentFeature","currentYear","MuiThemeProvider_default","root","CssBaseline_default","layout_NavBar","content","toolbar","components_MapboxMap","showPopUp","InfoCard","CACODE","yearButton","Button_default","onClick","backgroundColor","d","button","display","flexShrink","drawerPaper","flexGrow","mixins","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7705c7ae.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    }\n})\n\nclass NavBar extends Component {\n    render() {\n        const { classes } = this.props\n        return (\n            <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              區議會選區分界地圖（2003-2019）\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NavBar)","import * as turf from '@turf/turf'\n\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\n    const pt = turf.point([point.lng, point.lat])\n    const result = featuresArray.map(feature => {\n        let polygonProps = {}\n        for (let i= 0, n = feature.features.length; i < n; i++) {\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\n            if (turf.booleanPointInPolygon(pt, poly)) {\n                polygonProps = {...feature.features[i].properties}\n                break\n            }\n        }\n        return {\n            year: feature.name.split('_')[1],\n            ...polygonProps\n        }\n    })\n    return result\n}\n\n\nexport const getBoundingBox = data => {\n    var bounds = {}, coords, point, latitude, longitude;\n  \n    // We want to use the “features” key of the FeatureCollection (see above)\n    // data = data.features;\n  \n    // Loop through each “feature”\n    // for (var i = 0; i < data.length; i++) {\n  \n      // Pull out the coordinates of this feature\n      coords = data.geometry.coordinates[0];\n  \n      // For each individual coordinate in this feature's coordinates…\n      for (var j = 0; j < coords.length; j++) {\n  \n        longitude = coords[j][0];\n        latitude = coords[j][1];\n  \n        // Update the bounds recursively by comparing the current\n        // xMin/xMax and yMin/yMax with the coordinate\n        // we're currently checking\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\n      }\n  \n    // }\n  \n    // Returns an object that contains the bounds of this GeoJSON\n    // data. The keys of this object describe a box formed by the\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\n    return bounds;\n  }","import React, { Component } from 'react'\nimport mapboxgl from 'mapbox-gl'\nimport { getBoundingBox } from '../utils/features'\n\nclass MapboxMap extends Component {\n    componentDidMount() {\n        // set map properties\n        const { token, center, zoom, minZoom, styleID, mapLayers, onMapClicked, onMapPanned, color } = this.props\n\n        const mapConfig = {\n            container: 'map',\n            style: `mapbox://styles/${styleID}`,\n            center: center,\n            zoom: zoom,\n            minZoom: minZoom\n        }\n\n        mapboxgl.accessToken = token\n        this.map = new mapboxgl.Map(mapConfig)\n\n        this.map.on('load', () => {\n            // Get the map style and set it in the state tree\n            const style = this.map.getStyle()\n            //   this.props.setStyle(style)\n\n            \n            let hoveredStateId = null\n            let clickedStateId = null\n\n            mapLayers.forEach((layer, index) => {\n                this.map.addSource(layer.name, {\n                    type: 'geojson',\n                    data: layer,\n                    generateId: true\n                    // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\n                })\n\n                this.map.addLayer({\n                    id: `${layer.name}-lines`,\n                    type: 'line',\n                    source: layer.name,\n                    layout: {\n                        'visibility': layer.checked ? 'visible': 'none'\n                    },\n                    paint: {\n                        'line-color': color[index],\n                        'line-width': 2\n                    }\n                })\n\n                this.map.addLayer({\n                    id: `${layer.name}-hovers`,\n                    type: 'fill',\n                    source: layer.name,\n                    layout: {\n                        'visibility': layer.checked ? 'visible': 'none'\n                    },\n                    paint: {\n                        \"fill-color\": \"#000\",\n                        \"fill-opacity\": [\"case\",\n                            [\"boolean\", [\"feature-state\", \"hover\"], false],\n                            0.1,\n                            0\n                        ]\n                    }\n                })\n\n                this.map.addLayer({\n                    id: `${layer.name}-highlight`,\n                    type: 'fill',\n                    source: layer.name,\n                    layout: {\n                        'visibility': layer.checked ? 'visible': 'none'\n                    },\n                    paint: {\n                        \"fill-color\": color[index],\n                        \"fill-opacity\": [\"case\",\n                            [\"boolean\", [\"feature-state\", \"highlight\"], false],\n                            0.3,\n                            0\n                        ]\n                    }\n                })\n\n                // When the user moves their mouse over the state-fill layer, we'll update the\n                // feature state for the feature under the mouse.\n                this.map.on(\"mousemove\", `${layer.name}-hovers`, function (e) {\n                    if (e.features.length > 0) {\n                        if (hoveredStateId) {\n                            this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\n                        }\n                        hoveredStateId = e.features[0].id\n                        this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: true })\n                    }\n                })\n\n                // When the mouse leaves the state-fill layer, update the feature state of the\n                // previously hovered feature.\n                this.map.on(\"mouseleave\", `${layer.name}-hovers`, function () {\n                    if (hoveredStateId) {\n                        this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\n                    }\n                    hoveredStateId = null\n                })\n\n                this.map.on(\"click\", `${layer.name}-highlight`, function (e) {\n\n                    if (clickedStateId) {\n                        this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: false })\n                        clickedStateId = null\n                    }\n                    clickedStateId = e.features[0].id\n                    this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: true })\n    \n                    \n                    let bounds = getBoundingBox(e.features[0])\n    \n                    bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\n    \n                    this.fitBounds(bounds, {\n                        padding: 50,\n                        maxZoom: 13.5\n                    })\n    \n                })\n\n            })\n\n            this.map.on('click', e => {\n                onMapClicked(e)\n            })\n\n            this.map.on('move', () => {\n                const { lng, lat } = this.map.getCenter()\n                onMapPanned(lng.toFixed(4), lat.toFixed(4), this.map.getZoom().toFixed(2))\n            })\n\n\n\n        })\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.mapLayers !== prevProps.mapLayers) {\n\n            const status = this.props.mapLayers.map(layer => {\n                return {\n                    name: layer.name,\n                    visibility: layer.checked ? 'visible' : 'none'\n                }\n            })\n\n            status.forEach(layer => {\n                if (this.map.getLayer(`${layer.name}-lines`)) {\n                    this.map.setLayoutProperty(`${layer.name}-lines`, 'visibility', layer.visibility)\n                    this.map.setLayoutProperty(`${layer.name}-hovers`, 'visibility', layer.visibility)\n                    this.map.setLayoutProperty(`${layer.name}-highlight`, 'visibility', layer.visibility)\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div id='map'\n                style={{\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    width: '100%',\n                    height: '100%',\n                }}\n            ></div>\n        )\n    }\n}\n\nexport default MapboxMap","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport PersonIcon from '@material-ui/icons/Person'\nimport StarIcon from '@material-ui/icons/Star'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = {\n    card: {    \n        width: '400px',\n        position: 'absolute',\n        top: '15%',\n        left: '100px'\n    },\n    pos: {\n        marginBottom: 12,\n    },\n}\n\n\nconst candiNumMapping = {\n        1: '①',\n        2: '②',\n        3: '③',\n        4: '④',\n        5: '⑤',\n        6: '⑥',\n        7: '⑦',\n        8: '⑧',\n        9: '⑨',\n        10: '⑩'\n}\n\nconst SimpleCard = props => {\n    const { classes, electors, year, cacode } = props\n\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\n\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\n    \n    return (\n        <React.Fragment>\n            {result && <Card className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" >\n                        {year}\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        {result.cacode} {result.cname}\n                    </Typography>\n                    <Typography variant=\"subtitle2\">\n                        {result.ename}\n                    </Typography>\n                    <List>\n                    {\n                        result.candidates.map(candi => <ListItem alignItems=\"flex-start\" key={`${candi.number}`}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <PersonIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${candi.number > 0 ? candiNumMapping[candi.number] : ''} ${candi.cName} ${candi.eName}`}\n                                secondary={candi.vote > 0 ? `${candi.vote}票` : '自動當選'}\n                            />\n                            {candi.win &&\n                            <ListItemSecondaryAction>\n                                <StarIcon color=\"secondary\" />\n                            </ListItemSecondaryAction>}\n                        </ListItem>)\n\n                    }\n                </List>\n                </CardContent>\n            </Card>}\n        </React.Fragment>\n    )\n}\n\nSimpleCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(SimpleCard)","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst palette = {\n  primary: { main: '#FF8F00' },\n  secondary: { main: '#00E676' }\n};\nconst themeName = 'Pizazz Spring Green Falcon';\n\nconst typography =  {\n  useNextVariants: true,\n  fontFamily: \"'Noto Sans TC', sans-serif\"\n}\n\nexport default createMuiTheme({ palette, themeName, typography });\n","import React, { Component } from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport { withStyles } from '@material-ui/core/styles'\nimport NavBar from './layout/NavBar'\nimport MapboxMap from './components/MapboxMap'\nimport InfoCard from './components/InfoCard'\nimport createMuiTheme from './ui/theme'\nimport { getAllFeaturesFromPoint } from './utils/features'\nimport Button from '@material-ui/core/Button'\n\nimport './App.css'\n\nimport dc2003 from './data/DCCA_2003'\nimport dc2007 from './data/DCCA_2007'\nimport dc2011 from './data/DCCA_2011'\nimport dc2015 from './data/DCCA_2015'\nimport dc2019 from './data/DCCA_2019'\nimport electors from './data/electors'\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\n\nconst drawerWidth = 240\n\nconst theme = createMuiTheme\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1\n  },\n  toolbar: theme.mixins.toolbar,\n  yearButton: {\n    position: 'absolute',\n    width: 100,\n    top: '15%'\n  }\n})\n\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA'\nconst LONG = 114.2029\nconst LAT = 22.3844\nconst ZOOM = 11\nconst STYLE_ID = 'mapbox/streets-v9'\nconst MIN_ZOOM = 10\n\nconst color = [\n  '#6e40e6',\n  '#f49600',\n  '#ff5d55',\n  '#005ecd',\n  '#ad0000'\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dccaList: [dc2003, dc2007, dc2011, dc2015, dc2019],\n      open: false,\n      map: {\n        center: [LONG, LAT],\n        zoom: ZOOM,\n        styleID: STYLE_ID,\n        lastClick: null\n      },\n      selectedDCCA: null\n    }\n  }\n\n  componentDidMount() {\n    this.onYearBtnClicked('DCCA_2011')\n    this.onYearBtnClicked('DCCA_2015')\n    // this.props.actions.loadDCCAdata([dc2003, dc2007, dc2011, dc2015, dc2019])\n  }\n\n  onMapPanned = (lng, lat, zoom) => {\n    this.setState({\n      map: {\n        center: [lng, lat],\n        zoom,\n      }\n    })\n  }\n\n  onMapClicked = (e) => {\n    this.setState({\n      map: {\n        lastClick : [e.lngLat.lng, e.lngLat.lat]\n      },\n      selectedDCCA: getAllFeaturesFromPoint(e.lngLat, this.state.dccaList)\n    })\n  }\n\n  onYearBtnClicked = (name) => {\n    const idx = this.state.dccaList.findIndex(dcca => dcca.name === name)\n    let dccaList = [...this.state.dccaList]\n    dccaList.forEach(dcca => {dcca.checked = false})\n    dccaList[idx].checked = true\n    this.setState({ dccaList })\n  }\n\n  render() {\n    const { map: {center, zoom, lastClick}, selectedDCCA, dccaList } = this.state\n    const { classes, map } = this.props\n\n    const currentFeature = dccaList.length > 0 ? dccaList.find(dcca => dcca.checked) : null\n    const currentYear = currentFeature ? currentFeature.name.split('_')[1] : null\n    return (\n      <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <NavBar />\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {dccaList &&\n            <MapboxMap\n              mapLayers={dccaList}\n              token={TOKEN}\n              center={center}\n              zoom={zoom}\n              showPopUp={true}\n              styleID={STYLE_ID}\n              minZoom={MIN_ZOOM}\n              color={color}\n              onMapClicked={this.onMapClicked}\n              onMapPanned={this.onMapPanned}\n            />}\n            <InfoCard \n            electors={electors}\n            year={currentYear}\n            cacode={currentYear && selectedDCCA && selectedDCCA.find(feature => feature.year === currentYear).CACODE}\n            />\n            <div className={classes.yearButton}>\n              <List>\n                {dccaList.map((dcca, index) => <ListItem key={`${dcca.name}`}>\n                  <Button\n                    onClick={() => this.onYearBtnClicked(dcca.name)}\n                    key={dcca.name} variant=\"contained\"\n                    style={{\n                      backgroundColor: dccaList.findIndex(d => d.name === dcca.name && d.checked === true) > -1 ? color[index] : '#e0e0e0'\n                    }}\n                    className={classes.button}>\n                    {dcca.name.split('_')[1]}\n                  </Button>\n                </ListItem>)}\n              </List>\n            </div>\n        </main>\n      </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n      <App />,\n    document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}