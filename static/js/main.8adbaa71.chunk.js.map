{"version":3,"sources":["components/SideBar.js","components/BoundariesMap.js","actions/types.js","actions/map.js","components/MapboxMap.js","utils/features.js","ui/theme/index.js","components/DCCAElectionResult.js","actions/index.js","App.js","reducers/index.js","store/index.js","reducers/dccaReducer.js","reducers/mapReducer.js","index.js"],"names":["withStyles","theme","root","display","appBar","width","concat","marginLeft","drawer","flexShrink","drawerPaper","content","flexGrow","padding","spacing","unit","toolbar","mixins","props","style","dcca","dc2019","undefined","dccaList","find","d","name","includes","react_default","a","createElement","Drawer_default","className","variant","anchor","classes","paper","features","map","feature","ListItem_default","key","properties","CACODE","href","ListItemText_default","primary","CNAME","React","Component","LOAD_DCCA_DATA","PAN_MAP","CLICK_MAP","CLICK_DCCA","panMap","payload","dispatch","type","clickMap","clickDCCA","MapboxMap","_this","this","_this$props","token","longitude","latitude","zoom","minZoom","styleID","mapConfig","mapLayers","container","center","mapboxgl","accessToken","Map","on","getStyle","addSource","data","generateId","addLayer","id","source","paint","line-color","line-width","fill-color","fill-opacity","hoveredStateId","clickedStateId","e","length","setFeatureState","hover","highlight","bounds","coords","geometry","coordinates","j","xMin","xMax","yMin","yMax","getBoundingBox","LngLatBounds","LngLat","fitBounds","maxZoom","actions","lngLat","point","featuresArray","pt","turf","lng","lat","polygonProps","i","n","poly","Object","objectSpread","year","split","getAllFeaturesFromPoint","_map$getCenter","getCenter","toFixed","getZoom","position","top","bottom","height","connect","state","ownProps","bindActionCreators","createMuiTheme","palette","main","secondary","themeName","DCCAElectionResult","electors","cacode","yearIndex","findIndex","o","parseInt","result","election","Fragment","cname","ename","List_default","candidates","r","number","cName","eName","vote","loadDCCAdata","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","dc2003","dc2007","dc2011","dc2015","MuiThemeProvider_default","CssBaseline_default","AppBar_default","Toolbar_default","Typography_default","color","noWrap","Divider_default","lastClick","Stepper_default","orientation","selectedFeature","index","Step_default","active","StepLabel_default","StepContent_default","ENAME","actionsContainer","components_DCCAElectionResult","components_MapboxMap","showPopUp","zIndex","withTheme","combineReducers","initialState","arguments","action","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8adbaa71.chunk.js","sourcesContent":["import React from 'react'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst drawerWidth = 320;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n});\r\n\r\nconst SideBar = (props) => {\r\n  const { style, drawerPaper, dcca } = props\r\n\r\n  \r\n  const dc2019 = dcca !== undefined &&  dcca.dccaList !== undefined ? dcca.dccaList.find(d => d.name.includes('2019')) : null\r\n  \r\n  return (\r\n    <Drawer\r\n      className={style}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: drawerPaper,\r\n      }}\r\n    >\r\n    {dc2019 && dc2019.features.map(feature => \r\n    <ListItem key={feature.properties.CACODE} href=\"#\">\r\n    <ListItemText primary={`${feature.properties.CACODE} - ${feature.properties.CNAME}`} />\r\n  </ListItem>\r\n    )}\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SideBar)","import React from 'react'\r\nimport { Map, View } from 'ol'\r\nimport { Group as LayerGroup, Tile as TileLayer, Vector as VectorLayer } from 'ol/layer'\r\nimport XYZ from 'ol/source/XYZ'\r\nimport GeoJSON from 'ol/format/GeoJSON'\r\nimport { Stroke, Fill, Style } from 'ol/style'\r\nimport { Vector as VectorSource } from 'ol/source'\r\nimport { click } from 'ol/events/condition'\r\nimport Select from 'ol/interaction/Select'\r\nimport dc2003 from '../data/DCCA_2003'\r\nimport dc2007 from '../data/DCCA_2007'\r\nimport dc2011 from '../data/DCCA_2011'\r\nimport dc2015 from '../data/DCCA_2015'\r\nimport dc2019 from '../data/DCCA_2019'\r\n\r\nclass BoundariesMap extends React.Component {\r\n\r\n  state = {\r\n    map: null,\r\n    selectedFeatures: [],\r\n    lastClick: null\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const { mapLayers } = this.props\r\n    console.log(mapLayers)\r\n    const red = [\r\n      new Style({\r\n        stroke: new Stroke({\r\n          color: 'red',\r\n          width: 1\r\n        }),\r\n        fill: new Fill({\r\n          color: 'rgba(255,255,255,0.1)'\r\n        })\r\n      })\r\n    ];\r\n\r\n    const blue = [\r\n      new Style({\r\n        stroke: new Stroke({\r\n          color: 'blue',\r\n          width: 1\r\n        }),\r\n        fill: new Fill({\r\n          color: 'rgba(255,255,255,0.1)'\r\n        })\r\n      })\r\n    ];\r\n\r\n    // const dc2015Layer = new VectorLayer({\r\n    //   source: new VectorSource({\r\n    //     features: (new GeoJSON()).readFeatures(dc2015)\r\n    //   }),\r\n    //   style: blue\r\n    // })\r\n\r\n    const dc2019Layer = new VectorLayer({\r\n      source: new VectorSource({\r\n        features: (new GeoJSON()).readFeatures(dc2019)\r\n      }),\r\n      style: red\r\n    })\r\n\r\n    let map = new Map({\r\n      target: this.refs.mapContainer,\r\n      layers: [\r\n        new TileLayer({\r\n          source: new XYZ({\r\n            url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n          })\r\n        }), new LayerGroup({\r\n          layers: [\r\n            // dc2011Layer,\r\n            // dc2015Layer,\r\n            dc2019Layer\r\n          ]\r\n        })\r\n      ],\r\n      view: new View({\r\n        center: [114.1401483, 22.379149],\r\n        projection: 'EPSG:4326',\r\n        zoom: 11,\r\n      })\r\n    })\r\n\r\n    // select interaction working on \"click\"\r\n    let interaction = new Select({\r\n      condition: click,\r\n      multi: true\r\n    });\r\n\r\n\r\n    if (interaction !== null) {\r\n      map.addInteraction(interaction)\r\n      interaction.on('select', this.onFeatureSelected)\r\n    }\r\n\r\n    map.on('singleclick', (event) => {\r\n      this.setState({\r\n        lastClick: event.coordinate\r\n      })\r\n      console.log(this.state)\r\n    })\r\n\r\n    this.setState({\r\n      map,\r\n      interaction\r\n    })\r\n  }\r\n\r\n\r\n  onFeatureSelected = event => {\r\n    if (event.target.getFeatures().getLength() > 0) {\r\n      let features = event.target.getFeatures()\r\n      console.log(features)\r\n      if (event.target.getFeatures().getLength() > 3) features.clear()\r\n      this.setState({\r\n        selectedFeatures: features.getArray()\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <div ref=\"mapContainer\" style={classes}></div>\r\n      {this.state.selectedFeatures.map((feature, index) => \r\n        <li key={index}>\r\n        {feature.getProperties().CACODE}\r\n        {feature.getProperties().CANAME}\r\n        </li>\r\n      )}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default BoundariesMap","export const LOAD_DCCA_DATA = 'LOAD_DCCA_DATA'\r\n\r\nexport const PAN_MAP = 'PAN_MAP'\r\nexport const CLICK_MAP = 'CLICK_MAP'\r\nexport const CLICK_DCCA = 'CLICK_DCCA'","import * as type from './types'\r\n\r\nexport function panMap(payload) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: type.PAN_MAP,\r\n            payload\r\n        })\r\n    }\r\n}\r\n\r\nexport function clickMap(payload) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: type.CLICK_MAP,\r\n            payload\r\n        })\r\n    }\r\n}\r\n\r\nexport function clickDCCA(payload) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: type.CLICK_DCCA,\r\n            payload\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport mapboxgl from 'mapbox-gl'\r\nimport { panMap, clickMap, clickDCCA } from '../actions/map'\r\nimport { getAllFeaturesFromPoint, getBoundingBox } from '../utils/features'\r\n\r\nclass MapboxMap extends Component {\r\n    componentDidMount() {\r\n        // set map properties\r\n        const { token, longitude, latitude, zoom, minZoom, styleID, mapLayers } = this.props;\r\n\r\n        const mapConfig = {\r\n            container: 'map',\r\n            style: `mapbox://styles/${styleID}`,\r\n            center: [longitude, latitude],\r\n            zoom: zoom,\r\n            minZoom: minZoom\r\n        };\r\n\r\n        mapboxgl.accessToken = token;\r\n        let map = new mapboxgl.Map(mapConfig);\r\n\r\n        map.on('load', () => {\r\n            // Get the map style and set it in the state tree\r\n            const style = map.getStyle();\r\n            //   this.props.setStyle(style);\r\n\r\n            map.addSource('2019', {\r\n                type: 'geojson',\r\n                data: this.props.mapLayers.dccaList[4],\r\n                generateId: true\r\n                // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\r\n            });\r\n\r\n            map.addLayer({\r\n                id: '2019-lines',\r\n                type: 'line',\r\n                source: '2019',\r\n                paint: {\r\n                    'line-color': 'rgba(255, 0, 0, 1)',\r\n                    'line-width': 2\r\n                }\r\n            });\r\n\r\n            map.addLayer({\r\n                id: '2019-hovers',\r\n                type: 'fill',\r\n                source: '2019',\r\n                paint: {\r\n                    \"fill-color\": \"#627BC1\",\r\n                    \"fill-opacity\": [\"case\",\r\n                        [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n                        0.3,\r\n                        0\r\n                    ]\r\n                }\r\n            });\r\n\r\n            map.addLayer({\r\n                id: '2019-highlight',\r\n                type: 'fill',\r\n                source: '2019',\r\n                paint: {\r\n                    \"fill-color\": \"#ff0000\",\r\n                    \"fill-opacity\": [\"case\",\r\n                        [\"boolean\", [\"feature-state\", \"highlight\"], false],\r\n                        0.3,\r\n                        0\r\n                    ]\r\n                }\r\n            });\r\n\r\n            let hoveredStateId = null;\r\n            let clickedStateId = null;\r\n            // When the user moves their mouse over the state-fill layer, we'll update the\r\n            // feature state for the feature under the mouse.\r\n            map.on(\"mousemove\", \"2019-hovers\", function (e) {\r\n                if (e.features.length > 0) {\r\n                    if (hoveredStateId) {\r\n                        map.setFeatureState({ source: '2019', id: hoveredStateId }, { hover: false });\r\n                    }\r\n                    hoveredStateId = e.features[0].id;\r\n                    map.setFeatureState({ source: '2019', id: hoveredStateId }, { hover: true });\r\n                }\r\n            });\r\n\r\n            // When the mouse leaves the state-fill layer, update the feature state of the\r\n            // previously hovered feature.\r\n            map.on(\"mouseleave\", \"2019-hovers\", function () {\r\n                if (hoveredStateId) {\r\n                    map.setFeatureState({ source: '2019', id: hoveredStateId }, { hover: false });\r\n                }\r\n                hoveredStateId = null;\r\n            });\r\n\r\n            map.on(\"click\", \"2019-highlight\", function (e) {\r\n                if (clickedStateId) {\r\n                    map.setFeatureState({ source: '2019', id: clickedStateId }, { highlight: false });\r\n                    clickedStateId = null;\r\n                }\r\n                clickedStateId = e.features[0].id;\r\n                map.setFeatureState({ source: '2019', id: clickedStateId }, { highlight: true });\r\n\r\n                \r\n                let bounds = getBoundingBox(e.features[0])\r\n\r\n                bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax));\r\n\r\n                map.fitBounds(bounds, {\r\n                    padding: 50,\r\n                    maxZoom: 13.5\r\n                });\r\n\r\n            });\r\n\r\n\r\n            map.on('click', e => {\r\n                this.props.actions.clickMap(e.lngLat)\r\n                this.props.actions.clickDCCA(getAllFeaturesFromPoint(e.lngLat, this.props.mapLayers.dccaList))\r\n            });\r\n\r\n            map.on('move', () => {\r\n                const { lng, lat } = map.getCenter();\r\n\r\n                this.props.actions.panMap({\r\n                    lng: lng.toFixed(4),\r\n                    lat: lat.toFixed(4),\r\n                    zoom: map.getZoom().toFixed(2)\r\n                })\r\n\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='map'\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        mapConfig: state.map\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { actions: bindActionCreators({ panMap, clickMap, clickDCCA }, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapboxMap)","import * as turf from '@turf/turf'\r\n\r\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\r\n    const pt = turf.point([point.lng, point.lat])\r\n    const result = featuresArray.map(feature => {\r\n        let polygonProps = {}\r\n        for (let i= 0, n = feature.features.length; i < n; i++) {\r\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\r\n            if (turf.booleanPointInPolygon(pt, poly)) {\r\n                polygonProps = {...feature.features[i].properties}\r\n                break\r\n            }\r\n        }\r\n        return {\r\n            year: feature.name.split('_')[1],\r\n            ...polygonProps\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n\r\nexport const getBoundingBox = data => {\r\n    var bounds = {}, coords, point, latitude, longitude;\r\n  \r\n    // We want to use the “features” key of the FeatureCollection (see above)\r\n    // data = data.features;\r\n  \r\n    // Loop through each “feature”\r\n    // for (var i = 0; i < data.length; i++) {\r\n  \r\n      // Pull out the coordinates of this feature\r\n      coords = data.geometry.coordinates[0];\r\n  \r\n      // For each individual coordinate in this feature's coordinates…\r\n      for (var j = 0; j < coords.length; j++) {\r\n  \r\n        longitude = coords[j][0];\r\n        latitude = coords[j][1];\r\n  \r\n        // Update the bounds recursively by comparing the current\r\n        // xMin/xMax and yMin/yMax with the coordinate\r\n        // we're currently checking\r\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\r\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\r\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\r\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\r\n      }\r\n  \r\n    // }\r\n  \r\n    // Returns an object that contains the bounds of this GeoJSON\r\n    // data. The keys of this object describe a box formed by the\r\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\r\n    return bounds;\r\n  }","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#FF8F00' },\r\n  secondary: { main: '#00E676' }\r\n};\r\nconst themeName = 'Pizazz Spring Green Falcon';\r\n\r\nexport default createMuiTheme({ palette, themeName });\r\n","\r\nimport React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nconst DCCAElectionResult = (props) => {\r\n    const { electors, year, cacode } = props\r\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\r\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\r\n    return (\r\n        <React.Fragment>\r\n            {`${result.cacode}`} <br />\r\n            {`${result.cname} ${result.ename}`} <br />\r\n            {result &&\r\n                <List>\r\n                    {\r\n                        result.candidates.map(r => <ListItem key={year}>\r\n                            <ListItemText\r\n                                primary={`${r.number > 0 ? r.cName : ''} ${r.eName}`}\r\n                                secondary={r.vote > 0 ? `${r.vote}票` : '自動當選'}\r\n                            />\r\n                        </ListItem>)\r\n\r\n                    }\r\n                </List>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DCCAElectionResult","import * as type from './types'\r\n\r\nexport function loadDCCAdata(payload) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: type.LOAD_DCCA_DATA,\r\n            payload\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SideBar from './components/SideBar';\r\nimport BoundariesMap from './components/BoundariesMap'\r\nimport MapboxMap from './components/MapboxMap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport createMuiTheme from './ui/theme';\r\nimport DCCAElectionResult from './components/DCCAElectionResult'\r\n\r\nimport './App.css'\r\nimport { loadDCCAdata } from './actions'\r\n\r\nimport dc2003 from './data/DCCA_2003'\r\nimport dc2007 from './data/DCCA_2007'\r\nimport dc2011 from './data/DCCA_2011'\r\nimport dc2015 from './data/DCCA_2015'\r\nimport dc2019 from './data/DCCA_2019'\r\nimport electors from './data/electors'\r\n\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n});\r\n\r\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\r\nconst LONG = 114.2029;\r\nconst LAT = 22.3844;\r\nconst ZOOM = 11;\r\nconst STYLE_ID = 'mapbox/streets-v9';\r\nconst MIN_ZOOM = 10;\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.actions.loadDCCAdata([dc2003, dc2007, dc2011, dc2015, dc2019])\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { classes, dccaList, map } = this.props;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              District Council Dashboard\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.toolbar} />\r\n\r\n          <Divider />\r\n          <div>{`Longitude: ${map.lng} Latitude: ${map.lat} Zoom: ${map.zoom}`}</div>\r\n          <div>{map.lastClick ? `lastClick: ${map.lastClick.lat} ${map.lastClick.lng}` : ''}</div>\r\n\r\n          <Stepper orientation=\"vertical\">\r\n            {map.selectedFeature && map.selectedFeature.map((feature, index) => (\r\n              <Step key={feature.year} active={true}>\r\n                <StepLabel>{feature.year}</StepLabel>\r\n                <StepContent>\r\n                  <Typography>{`${feature.CNAME} ${feature.ENAME}`}</Typography>\r\n                  <div className={classes.actionsContainer}>\r\n                    <DCCAElectionResult\r\n                      electors={electors}\r\n                      year={feature.year}\r\n                      cacode={feature.CACODE} />\r\n                  </div>\r\n                </StepContent>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {dccaList &&\r\n            <MapboxMap\r\n              mapLayers={dccaList}\r\n              token={TOKEN}\r\n              longitude={LONG}\r\n              latitude={LAT}\r\n              zoom={ZOOM}\r\n              showPopUp={true}\r\n              styleID={STYLE_ID}\r\n              minZoom={MIN_ZOOM}\r\n            />}\r\n        </main>\r\n      </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    dccaList: state.dcca,\r\n    map: state.map\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { actions: bindActionCreators({ loadDCCAdata }, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(App))","import { combineReducers } from 'redux';\r\nimport dccaReducer from './dccaReducer';\r\nimport mapReducer from './mapReducer';\r\n\r\nexport default combineReducers({\r\n    dcca: dccaReducer,\r\n    map: mapReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(initialState) {\r\n    return createStore(rootReducer, initialState, applyMiddleware(thunk))\r\n}","import * as type from '../actions/types'\r\n\r\nexport default function dccaReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case type.LOAD_DCCA_DATA:\r\n            return {\r\n                ...state,\r\n                dccaList: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as type from '../actions/types'\r\n\r\n\r\nexport default function mapReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case type.PAN_MAP:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case type.CLICK_MAP:\r\n            return {\r\n                ...state,\r\n                lastClick: {\r\n                    lng: action.payload.lng,\r\n                    lat: action.payload.lat\r\n                }\r\n            }\r\n        case type.CLICK_DCCA:\r\n            return {\r\n                ...state,\r\n                selectedFeature: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport configureStore from './store'\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}