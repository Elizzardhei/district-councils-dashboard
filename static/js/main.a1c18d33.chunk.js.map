{"version":3,"sources":["../node_modules/encoding/lib sync","ui/theme/index.js","layout/NavBar.js","utils/httpClient.js","components/PeopleSearcher.js","components/AddressSearcher.js","pages/search/index.js","utils/features.js","components/MapboxMap.js","components/InfoCard.js","pages/map/index.js","pages/profile/index.js","components/BorderLinearProgress.js","service/district.js","components/OLMap.js","pages/district/index.js","pages/notfound/index.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","theme","createMuiTheme","typography","useNextVariants","fontFamily","palette","primary","light","main","dark","secondary","background","default","text","console","log","NavBar","classes","this","props","react_default","a","createElement","Container","maxWidth","AppBar","position","className","headerParent","Toolbar","disableGutters","header","Typography","variant","color","title","Component","withStyles","boxShadow","backgroundColor","flexGrow","withTheme","fetchData","query","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","json","resObj","data","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","Object","objectWithoutProperties","TextField","assign","fullWidth","InputProps","node","input","renderSuggestion","suggestion","_ref","isHighlighted","matches","match","name","parts","parse","MenuItem","selected","component","map","part","index","highlight","key","String","style","fontWeight","getSuggestionValue","PeopleSearcher","state","single","popper","suggestions","rawSuggestions","handleSuggestionsFetchRequested","_ref2","value","_this","setState","getSuggestions","handleSuggestionsClearRequested","handleChange","event","_ref3","newValue","defineProperty","handleSuggestionSelected","_ref4","suggestionValue","suggestionIndex","sectionIndex","handlePeopleSelected","deburr","trim","toLowerCase","length","filter","includes","fetched_data","dc_people","i","name_zh","_this2","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","class","dist_default","label","placeholder","onChange","popperNode","InputLabelProps","shrink","suggestionsList","renderSuggestionsContainer","options","Popper","anchorEl","open","Boolean","children","Paper","square","containerProps","width","clientWidth","React","root","height","container","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","display","margin","padding","listStyleType","IntegrationAutosuggest","inputValue","inputLength","count","keep","slice","address","coordinate","onAutoSuggestClicked","nativeEvent","MouseEvent","foundAddress","addresses","fullAddress","AddressParser","LANG_ZH","error","handleAddressSelected","currentSearchingResult","records","_","record","autoSuggestDiv","onAddressFieldChanged","bind","left","right","divider","SearchPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","history","push","concat","renderDCCA","district","dcca","Button","NavLink","to","selectedDistrict","autoCompleteList","evt","target","Grid","item","xs","paper","Input","defaultValue","aria-label","area","dccode","onClick","dname_chi","getAllFeaturesFromPoint","point","featuresArray","pt","turf","lng","lat","feature","polygonProps","n","features","poly","geometry","coordinates","objectSpread","properties","year","split","getBoundingBox","coords","latitude","longitude","bounds","j","xMin","xMax","yMin","yMax","MapboxMap","getMapboxFeature","current","mapLayers","find","layer","checked","queryRenderedFeatures","layers","zoomToBound","mapboxgl","LngLatBounds","LngLat","fitBounds","maxZoom","hoveredStateId","clickedStateId","_this$props","token","center","zoom","minZoom","styleID","onMapClicked","selectedDCCA","onMapPanned","onMapFeatureClicked","mapConfig","accessToken","Map","on","getStyle","forEach","addSource","type","generateId","addLayer","source","layout","visibility","paint","line-color","line-width","fill-color","fill-opacity","_this2$map$getCenter","getCenter","toFixed","getZoom","prevProps","_this3","getLayer","setLayoutProperty","lastClick","setFeatureState","newFeature","project","newFeatureId","setTimeout","top","bottom","candiNumMapping","1","2","3","4","5","6","7","8","9","10","card","pos","marginBottom","electors","cacode","yearIndex","findIndex","o","parseInt","election","Fragment","Card","CardContent","cname","ename","List","candidates","candi","ListItem","alignItems","number","ListItemAvatar","Avatar","src","imgProps","onError","ListItemText","cName","eName","vote","win","ListItemSecondaryAction","Star_default","LONG","LAT","ZOOM","STYLE_ID","MapPage","lngLat","dccaList","parseFloat","onYearBtnClicked","idx","toConsumableArray","dc2003","dc2007","dc2011","dc2015","dc2019","_this$state","_this$state$map","currentFeature","currentYear","MuiThemeProvider_default","CssBaseline","content","toolbar","components_MapboxMap","InfoCard","CACODE","AddressSearcher","searchBox","yearButton","d","button","mixins","ProfilePage","name_chi","params","showCase","candidate","CardHeader","avatar","candi_number","subheader","age","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","district_name_chi","CANAME_chi","camp","political_affiliation","votes","percentage","useStyles","makeStyles","BorderLinearProgress","lighten","bar","borderRadius","LinearProgress","CustomizedProgressBars","getDistrictDataByYearCode","asyncToGenerator","regenerator_default","mark","_callee","fetchedData","wrap","_context","prev","next","abrupt","sent","dc_constituencies","councillor","c","won","stop","_x","_x2","apply","arguments","OLMap","handleMapClick","changeDistrict","selectedFeature","getFeatures","getArray","getProperties","setView","featureSource","view","extent","getGeometry","getExtent","getView","fit","size","getSize","animate","duration","easing","t","Math","pow","sin","PI","VectorSource","GeoJSON","readFeatures","_this$props2","featuresLayer","VectorLayer","Style","fill","Fill","stroke","Stroke","refs","mapContainer","TileLayer","XYZ","url","View","projection","select","Select","addInteraction","_this$props3","DistrictCard","styled","border","DistrictPage","handleChangeDistrict","replace","undefined","components_OLMap","Box","p","flexDirection","justifyContent","IconButton","ArrowBack_default","gutterBottom","ArrowForward_default","Divider","person","main_areas","expected_population","sort","b","candidate_number","vote_percentage","CheckCircle_default","NotFoundPage","href","App","layout_NavBar","react_router","exact","path","NotfoundPage","ReactDOM","render","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a1c18d33.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 324;","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    fontFamily: \"'Noto Sans TC', sans-serif\"\r\n  },\r\n  palette: {\r\n    primary: {\r\n      light: '#ffffff',\r\n      main: '#000000',\r\n      dark: '#cccccc'\r\n    },\r\n    secondary: {\r\n      light: '#2c2c2c',\r\n      main: '#000000',\r\n      dark: '#000000'\r\n    },\r\n    background: {\r\n      default: '#ffffff'\r\n    },\r\n  },\r\n  text: {\r\n    primary: '#000000'\r\n  }\r\n});\r\n\r\nconsole.log(theme)\r\nexport default theme","import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Container from '@material-ui/core/Container'\r\nimport { relative } from 'path';\r\n\r\nconst styles = theme => ({\r\n  headerParent: {\r\n    boxShadow: 'none'\r\n  },\r\n  header: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: theme.palette.primary.main\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n})\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n          <Container maxWidth=\"lg\">\r\n            <AppBar position=\"relative\" className={classes.headerParent}>\r\n            <Toolbar disableGutters className={classes.header}>\r\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n              Vote for Hong Kong\r\n              </Typography>\r\n              {/* <Button component={NavLink} to=\"/\">Search</Button>\r\n              <Button component={NavLink} to=\"/map\">Map</Button> */}\r\n            </Toolbar>\r\n          </AppBar>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NavBar)","export const fetchData = query => {\r\n    return fetch('https://gql.opencultures.life/graphql', {\r\n        method: 'POST', // or 'PUT'\r\n        body: JSON.stringify({ query }), // data can be `string` or {object}!\r\n        headers:{\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .then(res => res.json())\r\n      .then(resObj => resObj.data)\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport deburr from 'lodash/deburr'\r\nimport Autosuggest from 'react-autosuggest'\r\nimport match from 'autosuggest-highlight/match'\r\nimport parse from 'autosuggest-highlight/parse'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Popper from '@material-ui/core/Popper'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { fetchData } from '../utils/httpClient'\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node)\r\n          inputRef(node)\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  )\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.name, query)\r\n  const parts = parse(suggestion.name, matches)\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map((part, index) =>\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 500 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          ),\r\n        )}\r\n      </div>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    height: 250,\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block',\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none',\r\n  }\r\n})\r\n\r\nclass PeopleSearcher extends React.Component {\r\n  state = {\r\n    single: '',\r\n    popper: '',\r\n    suggestions: [],\r\n    rawSuggestions: []\r\n  }\r\n\r\n   getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase()\r\n    const inputLength = inputValue.length\r\n  \r\n    return inputLength === 0 ? [] : this.state.rawSuggestions.filter(suggestion => suggestion.name.includes(value))\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const query = `\r\n    {\r\n      dc_people(distinct_on: name_zh) {\r\n        name_zh\r\n      }\r\n    }\r\n    `\r\n    const fetched_data = await fetchData(query)\r\n    console.log(fetched_data)\r\n    this.setState({rawSuggestions: fetched_data.data.dc_people.map(i => {\r\n      return {\r\n        name: i.name_zh\r\n      }\r\n    })})\r\n  }\r\n\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value),\r\n    })\r\n  }\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    })\r\n  }\r\n\r\n  handleChange = name => (event, { newValue }) => {\r\n    this.setState({\r\n      [name]: newValue,\r\n    })\r\n  }\r\n\r\n  handleSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n    this.props.handlePeopleSelected(suggestion)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    \r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.suggestions,\r\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      onSuggestionSelected: this.handleSuggestionSelected,\r\n      getSuggestionValue,\r\n      renderSuggestion,\r\n    }\r\n\r\n    return (\r\n      <div className={this.props.class}>\r\n        <Autosuggest\r\n          {...autosuggestProps}\r\n          inputProps={{\r\n            classes,\r\n            label: '揾人',\r\n            placeholder: 'Please type a candidate name',\r\n            value: this.state.popper,\r\n            onChange: this.handleChange('popper'),\r\n            inputRef: node => {\r\n              this.popperNode = node\r\n            },\r\n            InputLabelProps: {\r\n              shrink: true,\r\n            },\r\n          }}\r\n          theme={{\r\n            suggestionsList: classes.suggestionsList,\r\n            suggestion: classes.suggestion,\r\n          }}\r\n          renderSuggestionsContainer={options => (\r\n            <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\r\n              <Paper\r\n                square\r\n                {...options.containerProps}\r\n                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\r\n              >\r\n                {options.children}\r\n              </Paper>\r\n            </Popper>\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPeopleSearcher.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(PeopleSearcher)","import React from 'react';\r\nimport PropTypes, { instanceOf } from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport * as AddressParser from 'hk-address-parser-lib';\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.label, query);\r\n  const parts = parse(suggestion.label, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map((part, index) =>\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 500 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          ),\r\n        )}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'block',\r\n    // height: 250,\r\n    flexGrow: 1,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n    padding: '10px'\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block'\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none'\r\n  },\r\n  divider: {\r\n    height: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass IntegrationAutosuggest extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : this.state.suggestions.filter(suggestion => {\r\n          const keep =\r\n            count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n          if (keep) {\r\n            count += 1;\r\n          }\r\n\r\n          return keep;\r\n        });\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    // console.log('fetched');\r\n    // this.setState({\r\n    //   suggestions: this.getSuggestions(value),\r\n    // });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleAddressSelected(address) {\r\n    const coordinate = address.coordinate();\r\n    this.props.onAutoSuggestClicked(coordinate)\r\n  }\r\n\r\n  async onAddressFieldChanged(event, { newValue }) {\r\n    const isMouseClick = event.nativeEvent instanceof MouseEvent;\r\n    if (isMouseClick) {\r\n      // This is fired when clicked on the pull down menu\r\n      this.setState({\r\n        value: newValue\r\n      })\r\n\r\n      let foundAddress = null;\r\n      try {\r\n        foundAddress = this.state.addresses.filter( address => address.fullAddress(AddressParser.Address.LANG_ZH) === newValue)[0];\r\n      } catch (error) {\r\n      }\r\n\r\n      if (foundAddress) {\r\n        this.handleAddressSelected(foundAddress);\r\n      }\r\n    } else {\r\n      // this is fired when typing in the search field\r\n      this.setState({\r\n        currentSearchingResult: newValue,\r\n        value: newValue\r\n      })\r\n      const records = await AddressParser.parse(newValue);\r\n\r\n      // Ignore the search if it is not the latest result\r\n      if (this.state.currentSearchingResult === newValue) {\r\n        this.setState({\r\n          suggestions: records.filter((_, index) => index < 10).map(record => ({ label: record.fullAddress(AddressParser.Address.LANG_ZH) })),\r\n          addresses: records,\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.suggestions,\r\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      getSuggestionValue,\r\n      renderSuggestion,\r\n    };\r\n\r\n    return (\r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.autoSuggestDiv}>\r\n          <Autosuggest\r\n            {...autosuggestProps}\r\n            inputProps={{\r\n              classes,\r\n              label: 'Label',\r\n              placeholder: 'With Popper',\r\n              value: this.state.value,\r\n              onChange: this.onAddressFieldChanged.bind(this),\r\n              inputRef: node => {\r\n                this.popperNode = node;\r\n              },\r\n              InputLabelProps: {\r\n                shrink: true,\r\n              },\r\n            }}\r\n            theme={{\r\n              suggestionsList: classes.suggestionsList,\r\n              suggestion: classes.suggestion,\r\n            }}\r\n            renderSuggestionsContainer={options => (\r\n              <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\r\n                <Paper\r\n                  square\r\n                  {...options.containerProps}\r\n                  style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\r\n                >\r\n                  {options.children}\r\n                </Paper>\r\n              </Popper>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIntegrationAutosuggest.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationAutosuggest);","import React, { Component } from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Input from '@material-ui/core/Input'\r\nimport PeopleSearcher from '../../components/PeopleSearcher'\r\nimport AddressSearcher from '../../components/AddressSearcher'\r\nimport area from '../../data/area'\r\nimport district from '../../data/district'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport * as AddressParser from 'hk-address-parser-lib'\r\n\r\nconst styles = theme => ({\r\n})\r\n\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDistrict: null,\r\n      autoCompleteList: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n  }\r\n\r\n  async onAddressFieldChanged(evt) {\r\n    const { value } = evt.target;\r\n    const records = await AddressParser.parse(value);\r\n    this.setState({\r\n      autoCompleteList: records,\r\n    })\r\n  }\r\n\r\n  handlePeopleSelected = result => {\r\n    this.props.history.push(`profile/${result.name}`)\r\n  }\r\n\r\n  renderDCCA = code => {\r\n    if (!code) return null\r\n    return <div>\r\n      {Object.keys(district['2019'][code]).map(dcca => {\r\n        return (\r\n          <Button component={NavLink} to={`/district/2019/${dcca}`} key={district['2019'][code][dcca].code} color=\"secondary\">{district['2019'][code][dcca].name}</Button>\r\n        )\r\n      })}\r\n    </div>\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { autoCompleteList } = this.state\r\n\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            {/* TODO: Change the following input to AddressSearcher component, similar to PeopleSearcher */}\r\n            <Input\r\n              defaultValue=\"Search Address\"\r\n              inputProps={{\r\n                'aria-label': 'Description',\r\n              }}\r\n              onChange={this.onAddressFieldChanged.bind(this)}\r\n            />\r\n            {autoCompleteList.map((address, index) => (<div key={index}><p>{address.fullAddress()}</p></div>))}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            {/* TODO: Build a people.json for the autosuggest and profile */}\r\n            {/* <PeopleSearcher\r\n              handlePeopleSelected={this.handlePeopleSelected}\r\n            /> */}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            {\r\n              area.map(a => <Button key={a.dccode} color=\"primary\" onClick={() => this.setState({ selectedDistrict: a.dccode })}>{a.dname_chi}</Button>)\r\n            }\r\n            {this.renderDCCA(this.state.selectedDistrict)}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n        \r\n\r\n      \r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchPage)\r\n","import * as turf from '@turf/turf'\r\n\r\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\r\n    const pt = turf.point([point.lng, point.lat])\r\n    const result = featuresArray.map(feature => {\r\n        let polygonProps = {}\r\n        for (let i= 0, n = feature.features.length; i < n; i++) {\r\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\r\n            if (turf.booleanPointInPolygon(pt, poly)) {\r\n                polygonProps = {...feature.features[i].properties}\r\n                break\r\n            }\r\n        }\r\n        return {\r\n            year: feature.name.split('_')[1],\r\n            ...polygonProps\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n\r\nexport const getBoundingBox = data => {\r\n    var bounds = {}, coords, point, latitude, longitude;\r\n  \r\n    // We want to use the “features” key of the FeatureCollection (see above)\r\n    // data = data.features;\r\n  \r\n    // Loop through each “feature”\r\n    // for (var i = 0; i < data.length; i++) {\r\n  \r\n      // Pull out the coordinates of this feature\r\n      coords = data.geometry.coordinates[0];\r\n  \r\n      // For each individual coordinate in this feature's coordinates…\r\n      for (var j = 0; j < coords.length; j++) {\r\n  \r\n        longitude = coords[j][0];\r\n        latitude = coords[j][1];\r\n  \r\n        // Update the bounds recursively by comparing the current\r\n        // xMin/xMax and yMin/yMax with the coordinate\r\n        // we're currently checking\r\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\r\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\r\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\r\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\r\n      }\r\n  \r\n    // }\r\n  \r\n    // Returns an object that contains the bounds of this GeoJSON\r\n    // data. The keys of this object describe a box formed by the\r\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\r\n    return bounds;\r\n  }","import React, { Component } from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport { getBoundingBox } from '../utils/features'\r\n\r\nclass MapboxMap extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hoveredStateId: null,\r\n            clickedStateId: null\r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n        // set map properties\r\n        const { token, center, zoom, minZoom, styleID, mapLayers, selectedDCCA, onMapClicked, onMapFeatureClicked, onMapPanned, color } = this.props\r\n\r\n        const mapConfig = {\r\n            container: 'map',\r\n            style: `mapbox://styles/${styleID}`,\r\n            center: center,\r\n            zoom: zoom,\r\n            minZoom: minZoom\r\n        }\r\n\r\n        mapboxgl.accessToken = token\r\n        this.map = new mapboxgl.Map(mapConfig)\r\n\r\n        this.map.on('load', () => {\r\n            // Get the map style and set it in the state tree\r\n            const style = this.map.getStyle()\r\n            //   this.props.setStyle(style)\r\n\r\n            mapLayers.forEach((layer, index) => {\r\n                this.map.addSource(layer.name, {\r\n                    type: 'geojson',\r\n                    data: layer,\r\n                    generateId: true\r\n                    // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-lines`,\r\n                    type: 'line',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        'line-color': color[index],\r\n                        'line-width': 2\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-hovers`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": \"#000\",\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n                            0.1,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-highlight`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": color[index],\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"highlight\"], false],\r\n                            0.3,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                // When the user moves their mouse over the state-fill layer, we'll update the\r\n                // feature state for the feature under the mouse.\r\n                // this.map.on(\"mousemove\", `${layer.name}-hovers`, function (e) {\r\n                    // if (e.features.length > 0) {\r\n                        // if (this.state.hoveredStateId !== null) {\r\n                        //     this.setFeatureState({ source: layer.name, id: this.state.hoveredStateId }, { hover: false })\r\n                        // }\r\n                        // let currentFeatureId = e.features[0].id\r\n                        // this.setFeatureState({ source: layer.name, id: currentFeatureId }, { hover: true })\r\n                        // this.setState({hoveredStateId: currentFeatureId})\r\n                    // }\r\n                // })\r\n\r\n                // When the mouse leaves the state-fill layer, update the feature state of the\r\n                // previously hovered feature.\r\n                // this.map.on(\"mouseleave\", `${layer.name}-hovers`, function () {\r\n                //     if (hoveredStateId) {\r\n                //         this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\r\n                //     }\r\n                //     hoveredStateId = null\r\n                // })\r\n\r\n                // this.map.on(\"click\", `${layer.name}-highlight`, function (e) {\r\n                // \r\n                    // if (clickedStateId) {\r\n                    //     this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: false })\r\n                    //     clickedStateId = null\r\n                    // }\r\n                    // clickedStateId = e.features[0].id\r\n                    // this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: true })\r\n                    // let bounds = getBoundingBox(e.features[0])\r\n                    // bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n                    // this.fitBounds(bounds, {\r\n                    //     padding: 50,\r\n                    //     maxZoom: 13.5\r\n                    // })\r\n                // })\r\n\r\n            })\r\n\r\n            this.map.on('click', e => {\r\n                this.getMapboxFeature(e.point)\r\n                onMapClicked(e)\r\n            })\r\n\r\n            this.map.on('move', () => {\r\n                const { lng, lat } = this.map.getCenter()\r\n                onMapPanned(lng.toFixed(4), lat.toFixed(4), this.map.getZoom().toFixed(2))\r\n            })\r\n\r\n\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    getMapboxFeature = (coordinate) => {\r\n        const current = this.props.mapLayers.find(layer => layer.checked)\r\n        const features = this.map.queryRenderedFeatures(\r\n            coordinate, { layers: [`${current.name}-highlight`] }\r\n          );\r\n          return features\r\n    }\r\n\r\n    zoomToBound = (feature) => {\r\n        let bounds = getBoundingBox(feature)\r\n        bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n\r\n        this.map.fitBounds(bounds, {\r\n            padding: 50,\r\n            maxZoom: 13.5\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.mapLayers !== prevProps.mapLayers) {\r\n\r\n            const status = this.props.mapLayers.map(layer => {\r\n                return {\r\n                    name: layer.name,\r\n                    visibility: layer.checked ? 'visible' : 'none'\r\n                }\r\n            })\r\n\r\n            status.forEach(layer => {\r\n                if (this.map.getLayer(`${layer.name}-lines`)) {\r\n                    this.map.setLayoutProperty(`${layer.name}-lines`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-hovers`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-highlight`, 'visibility', layer.visibility)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (this.props.lastClick !== prevProps.lastClick) {\r\n                if (this.state.clickedStateId) {\r\n                    this.map.setFeatureState({ source: 'DCCA_2015', id: this.state.clickedStateId }, { highlight: false })\r\n                }\r\n\r\n                if (this.props.lastClick) {\r\n                    const newFeature = this.getMapboxFeature(this.map.project(this.props.lastClick))[0]\r\n                    const newFeatureId = newFeature.id\r\n                    this.zoomToBound(newFeature)\r\n                    \r\n                    setTimeout(() => {\r\n                        this.map.setFeatureState({ source: 'DCCA_2015', id: newFeatureId }, { highlight: true }) \r\n                    }, 1000)\r\n                    \r\n\r\n                    this.setState({\r\n                        clickedStateId: newFeatureId\r\n                    })\r\n                }\r\n                \r\n                \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='map'\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n            ></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapboxMap","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = {\r\n    card: {    \r\n        width: '400px',\r\n        position: 'absolute',\r\n        top: '20%',\r\n        left: '100px'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n}\r\n\r\n\r\nconst candiNumMapping = {\r\n        1: '①',\r\n        2: '②',\r\n        3: '③',\r\n        4: '④',\r\n        5: '⑤',\r\n        6: '⑥',\r\n        7: '⑦',\r\n        8: '⑧',\r\n        9: '⑨',\r\n        10: '⑩'\r\n}\r\n\r\nconst SimpleCard = props => {\r\n    const { classes, electors, year, cacode } = props\r\n\r\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\r\n\r\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {result && <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" >\r\n                        {year}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        {result.cacode} {result.cname}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {result.ename}\r\n                    </Typography>\r\n                    <List>\r\n                    {\r\n                        result.candidates.map(candi => <ListItem alignItems=\"flex-start\" key={`${candi.number}`}>\r\n                            <ListItemAvatar>\r\n                                <Avatar \r\n                                src={`/static/images/avatar/${year}/${result.cacode}_${year === 2011 ? '0' : ''}${candi.number}.jpg`}\r\n                                imgProps={{ onError: (e) => { e.target.src = '/static/images/avatar/default.png'; } }} >\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={`${candi.number > 0 ? candiNumMapping[candi.number] : ''} ${candi.cName} ${candi.eName}`}\r\n                                secondary={candi.vote > 0 ? `${candi.vote}票` : '自動當選'}\r\n                            />\r\n                            {candi.win &&\r\n                            <ListItemSecondaryAction>\r\n                                <StarIcon color=\"secondary\" />\r\n                            </ListItemSecondaryAction>}\r\n                        </ListItem>)\r\n\r\n                    }\r\n                </List>\r\n                </CardContent>\r\n            </Card>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(SimpleCard)","import React, { Component } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport NavBar from '../../layout/NavBar'\r\nimport MapboxMap from '../../components/MapboxMap'\r\nimport InfoCard from '../../components/InfoCard'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport { getAllFeaturesFromPoint } from '../../utils/features'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddressSearcher from '../../components/AddressSearcher'\r\n\r\nimport dc2003 from '../../data/DCCA_2003'\r\nimport dc2007 from '../../data/DCCA_2007'\r\nimport dc2011 from '../../data/DCCA_2011'\r\nimport dc2015 from '../../data/DCCA_2015'\r\nimport dc2019 from '../../data/DCCA_2019'\r\nimport electors from '../../data/electors'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  yearButton: {\r\n    position: 'absolute',\r\n    width: 100,\r\n    top: '20%'\r\n  },\r\n  searchBox: {\r\n    position: 'absolute',\r\n    zIndex: 100,\r\n    top: '50%'\r\n  }\r\n})\r\n\r\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA'\r\nconst LONG = 114.2029\r\nconst LAT = 22.3844\r\nconst ZOOM = 11\r\nconst STYLE_ID = 'mapbox/streets-v9'\r\nconst MIN_ZOOM = 10\r\n\r\nconst color = [\r\n  '#6e40e6',\r\n  '#f49600',\r\n  '#ff5d55',\r\n  '#005ecd',\r\n  '#ad0000'\r\n]\r\n\r\nclass MapPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      dccaList: [dc2003, dc2007, dc2011, dc2015, dc2019],\r\n      open: false,\r\n      map: {\r\n        center: [LONG, LAT],\r\n        zoom: ZOOM,\r\n        styleID: STYLE_ID,\r\n        lastClick: null\r\n      },\r\n      selectedDCCA: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onYearBtnClicked('DCCA_2011')\r\n    this.onYearBtnClicked('DCCA_2015')\r\n  }\r\n\r\n  onMapPanned = (lng, lat, zoom) => {\r\n    this.setState({\r\n      map: {\r\n        center: [lng, lat],\r\n        zoom,\r\n      }\r\n    })\r\n  }\r\n\r\n  onMapClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lngLat.lng, e.lngLat.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint(e.lngLat, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onMapFeatureClicked = (e) => {\r\n    this.setState({\r\n      clickedStateId: e.features[0].id\r\n    })\r\n  }\r\n\r\n  onAutoSuggestClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lng, e.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint({lat: parseFloat(e.lat), lng: parseFloat(e.lng)}, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onYearBtnClicked = (name) => {\r\n    const idx = this.state.dccaList.findIndex(dcca => dcca.name === name)\r\n    let dccaList = [...this.state.dccaList]\r\n    dccaList.forEach(dcca => {dcca.checked = false})\r\n    dccaList[idx].checked = true\r\n    this.setState({ dccaList })\r\n  }\r\n\r\n  render() {\r\n    const { map: {center, zoom, lastClick}, selectedDCCA, dccaList } = this.state\r\n    const { classes, map } = this.props\r\n\r\n    const currentFeature = dccaList.length > 0 ? dccaList.find(dcca => dcca.checked) : null\r\n    const currentYear = currentFeature ? currentFeature.name.split('_')[1] : null\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {dccaList &&\r\n            <MapboxMap\r\n              mapLayers={dccaList}\r\n              token={TOKEN}\r\n              center={center}\r\n              zoom={zoom}\r\n              styleID={STYLE_ID}\r\n              minZoom={MIN_ZOOM}\r\n              color={color}\r\n              onMapClicked={this.onMapClicked}\r\n              onMapFeatureClicked={this.onMapFeatureClicked}\r\n              onMapPanned={this.onMapPanned}\r\n              clickedStateId={this.state.clickedStateId}\r\n              selectedDCCA={selectedDCCA}\r\n              lastClick={lastClick}\r\n            />}\r\n            <InfoCard \r\n            electors={electors}\r\n            year={currentYear}\r\n            cacode={currentYear && selectedDCCA && selectedDCCA.find(feature => feature.year === currentYear).CACODE}\r\n            />\r\n            \r\n            <AddressSearcher \r\n            className={classes.searchBox} \r\n            onAutoSuggestClicked={this.onAutoSuggestClicked}\r\n            />\r\n            <div className={classes.yearButton}>\r\n              <List>\r\n                {dccaList.map((dcca, index) => <ListItem key={`${dcca.name}`}>\r\n                  <Button\r\n                    onClick={() => this.onYearBtnClicked(dcca.name)}\r\n                    key={dcca.name} variant=\"contained\"\r\n                    style={{\r\n                      backgroundColor: dccaList.findIndex(d => d.name === dcca.name && d.checked === true) > -1 ? color[index] : '#e0e0e0'\r\n                    }}\r\n                    className={classes.button}>\r\n                    {dcca.name.split('_')[1]}\r\n                  </Button>\r\n                </ListItem>)}\r\n              </List>\r\n            </div>\r\n        </main>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(MapPage)","import React, { Component } from 'react'\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport candidates from '../../data/candidates'\r\nimport { fetchData } from '../../utils/httpClient'\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n     \r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const query = `\r\n    {\r\n      dc_people(distinct_on: name_chi) {\r\n        name_chi\r\n      }\r\n    }\r\n    `\r\n    const fetched_data = await fetchData(query)\r\n    this.setState({rawSuggestions: fetched_data.data.dc_people.map(i => {\r\n      return {\r\n        name: i.name_chi\r\n      }\r\n    })})\r\n  }\r\n\r\n  render() {\r\n    const { match: { params } } = this.props\r\n    const showCase = candidates.filter(candidate => candidate.name_chi === params.name )\r\n    return (\r\n      // TODO: UI design\r\n      <Paper>\r\n        <Card>\r\n          <CardHeader\r\n            avatar={\r\n              // TODO: Add candi_number to candidate.json\r\n              <Avatar \r\n              src={`/static/images/avatar/2015/${showCase[showCase.length-1].cacode}_0${showCase[showCase.length-1].candi_number}.jpg`}\r\n              >\r\n              </Avatar>\r\n            }\r\n            title={showCase[0].name_chi}\r\n            subheader={`${showCase[showCase.length-1].age}歲 (${showCase[showCase.length-1].year})`}\r\n          />\r\n          <CardContent>\r\n          </CardContent>\r\n    </Card>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Year</TableCell>\r\n            <TableCell>Age</TableCell>\r\n            <TableCell>Distict</TableCell>\r\n            <TableCell>DCCA</TableCell>\r\n            <TableCell>Camp</TableCell>\r\n            <TableCell>political_affiliation</TableCell>\r\n            <TableCell align=\"right\">votes</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {showCase.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.year}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.age}</TableCell>\r\n              <TableCell align=\"right\">{row.district_name_chi}</TableCell>\r\n              <TableCell align=\"right\">{row.CANAME_chi}</TableCell>\r\n              <TableCell align=\"right\">{row.camp}</TableCell>\r\n              <TableCell align=\"right\">{row.political_affiliation}</TableCell>\r\n              <TableCell align=\"right\">{`${row.votes} (${row.percentage}%)`}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfilePage\r\n","\r\nimport React from 'react'\r\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BorderLinearProgress = withStyles({\r\n    root: {\r\n        height: 10,\r\n        backgroundColor: lighten('#ff6c5c', 0.5),\r\n    },\r\n    bar: {\r\n        borderRadius: 20,\r\n        backgroundColor: '#ff6c5c',\r\n    },\r\n})(LinearProgress)\r\n\r\nexport default function CustomizedProgressBars(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <BorderLinearProgress\r\n                className={classes.margin}\r\n                variant=\"determinate\"\r\n                color=\"secondary\"\r\n                value={props.value}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}","import { fetchData } from '../utils/httpClient'\r\n\r\nexport const getDistrictDataByYearCode = async (year, code) => {\r\n    // It should call GraphQL\r\n    if (!year || !code) return\r\n\r\n    const query = `\r\n    {\r\n        dc_constituencies(where: {year: {_eq: ${year}}, code: {_eq: \"${code}\"}}) {\r\n          name_zh\r\n          name_en\r\n          code\r\n          deviation_percentage\r\n          expected_population\r\n          main_areas\r\n          candidates {\r\n            candidate_number\r\n            person {\r\n              name_zh\r\n              name_en\r\n            }\r\n            political_affiliation {\r\n              name_zh\r\n              name_en\r\n            }\r\n            vote_percentage\r\n            votes\r\n            won\r\n          }\r\n        }\r\n      }\r\n      `\r\n    const fetchedData = await fetchData(query)\r\n\r\n    const result = {\r\n        ...fetchedData.dc_constituencies[0],\r\n        councillor: fetchedData.dc_constituencies[0].candidates.find(c => c.won)\r\n\r\n    }\r\n    return result\r\n}","import React, { Component } from 'react'\r\nimport Map from 'ol/Map'\r\nimport View from 'ol/View'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport VectorLayer from 'ol/layer/Vector'\r\nimport VectorSource from 'ol/source/Vector'\r\nimport XYZ from 'ol/source/XYZ'\r\nimport GeoJSON from 'ol/format/GeoJSON'\r\nimport { Style, Stroke, Fill } from 'ol/style'\r\nimport Select from 'ol/interaction/Select'\r\n\r\nimport dc2015 from '../data/DCCA_2015'\r\n\r\n\r\nclass OLMap extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n\r\n        this.featureSource = new VectorSource({\r\n            features: (new GeoJSON()).readFeatures(dc2015)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { year, code } = this.props\r\n\r\n        const styleFunction = feature => {\r\n            if (feature.getProperties().CACODE === code) {\r\n                return new Style({\r\n                    fill: new Fill({\r\n                        color: 'rgba(74, 144, 226, 0.5)'\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: '#3e59ef',\r\n                        width: 2\r\n                    })\r\n                })\r\n            }\r\n            return new Style({\r\n                fill: new Fill({\r\n                    color: 'rgba(74, 144, 226, 0.05)'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#3e59ef',\r\n                    width: 2\r\n                })\r\n            })\r\n        }\r\n\r\n        // getFeaturesByYearCode(year, code)\r\n\r\n        const featuresLayer = new VectorLayer({\r\n            source: this.featureSource,\r\n            style: styleFunction\r\n        })\r\n\r\n        // create map object with feature layer\r\n        const map = new Map({\r\n            target: this.refs.mapContainer,\r\n            layers: [\r\n                //default OSM layer\r\n                new TileLayer({\r\n                    source: new XYZ({\r\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}'\r\n                    })\r\n                }),\r\n                featuresLayer\r\n            ],\r\n            view: new View({\r\n                projection: 'EPSG:4326',\r\n                center: [114.2029, 22.3844],\r\n                zoom: 13,\r\n            })\r\n        })\r\n\r\n        this.setState({\r\n            map,\r\n            view: map.getView(),\r\n            featuresLayer: featuresLayer\r\n        }, () => this.setView(this.featureSource))\r\n\r\n        const select = new Select()\r\n\r\n        if (select !== null) {\r\n            map.addInteraction(select);\r\n            select.on('select', this.handleMapClick)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { year, code } = this.props\r\n        if (year !== prevProps.year) {\r\n        }\r\n\r\n        if (code !== prevProps.code) {\r\n            this.setView(this.featureSource)\r\n        }\r\n    }\r\n\r\n    handleMapClick = e => {\r\n        const { year, changeDistrict } = this.props\r\n        const selectedFeature = e.target.getFeatures().getArray()\r\n\r\n        if (selectedFeature[0]) {\r\n            changeDistrict(year, selectedFeature[0].getProperties().CACODE)\r\n        }\r\n    }\r\n\r\n    setView = featureSource => {\r\n        const { map, view } = this.state\r\n        const { code } = this.props\r\n\r\n        // Fit to feature \r\n        const features = featureSource.getFeatures()\r\n        for (let i = 0; i < features.length; i++) {\r\n            if (features[i].getProperties().CACODE === code) {\r\n                const extent = features[i].getGeometry().getExtent()\r\n                map.getView().fit(extent, {\r\n                    size: map.getSize(),\r\n                    padding: [10, 10, 10, 10]\r\n                })\r\n\r\n                view.animate({\r\n                    // center: the coordinate of the centre of the selected Feature,\r\n                    duration: 2000,\r\n                    easing: t => {\r\n                        return Math.pow(2, -10 * t) * Math.sin((t - 0.075) * (2 * Math.PI) / 0.3) + 1;\r\n                    }\r\n                })\r\n                this.setState({ map })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref=\"mapContainer\"> </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default OLMap","import React, { Component } from 'react'\r\nimport { styled } from '@material-ui/styles';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CustomizedProgressBars from '../../components/BorderLinearProgress'\r\nimport { getDistrictDataByYearCode } from '../../service/district'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport OLMap from '../../components/OLMap'\r\n\r\nconst Map = styled(Paper)({\r\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n  border: 0,\r\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  color: 'white',\r\n  height: 300,\r\n  padding: '0 30px',\r\n})\r\n\r\nconst DistrictCard = styled(Paper)({\r\n  background: '#f6f6f6',\r\n  color: '#00000',\r\n  height: 300\r\n})\r\n\r\nclass DistrictPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      district: undefined\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { match: { params: { year, code } } } = this.props\r\n    this.setState({\r\n      year,\r\n      code,\r\n      district: await getDistrictDataByYearCode(year, code)\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    const { match: { params: { year, code } } } = this.props\r\n    if (year !== prevProps.match.params.year) {\r\n      this.setState({\r\n        year,\r\n        district: await getDistrictDataByYearCode(year, code)\r\n      })\r\n    }\r\n\r\n    if (code !== prevProps.match.params.code) {\r\n      this.setState({\r\n        code,\r\n        district: await getDistrictDataByYearCode(year, code)\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChangeDistrict = (year, code) => {\r\n    if (!year || ! code) return\r\n    this.props.history.replace(`/district/${year}/${code}`)\r\n  }\r\n\r\n  render() {\r\n    const { year, code, district } = this.state\r\n    if (!district) return null\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container maxWidth='lg'>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={8}>\r\n              <OLMap\r\n                year={year}\r\n                code={code}\r\n                changeDistrict={this.handleChangeDistrict}\r\n                 />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <DistrictCard>\r\n                <Box\r\n                  p={1} \r\n                  border={0}\r\n                  color='primary.minor'>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"row\"\r\n                    alignItems='center'\r\n                    justifyContent='space-between'>\r\n                    <IconButton aria-label='arrow_back'>\r\n                      <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <Typography variant='button' gutterBottom>\r\n                      {year}\r\n                    </Typography>\r\n                    <IconButton aria-label='arrow_forward'>\r\n                      <ArrowForwardIcon />\r\n                    </IconButton>\r\n                  </Box>\r\n\r\n                  <Typography variant='h4' color='inherit' style={{ display: 'inline-block' }}>\r\n                    {district.name_zh}\r\n                  </Typography>\r\n                  <Typography variant='h4' color='inherit' style={{ display: 'inline-block' }}>\r\n                    {code}\r\n                  </Typography>\r\n                  <Divider />\r\n                  <List>\r\n                    <ListItemText primary={'區議員'} />\r\n                    <ListItemSecondaryAction>{district.councillor.person.name_zh}</ListItemSecondaryAction>\r\n                  </List>\r\n                  <List>\r\n                    <ListItemText primary={'政黨'} />\r\n                    <ListItemSecondaryAction>{district.councillor.political_affiliation ? district.councillor.political_affiliation.name_zh : '-'}</ListItemSecondaryAction>\r\n                  </List>\r\n                </Box>\r\n              </DistrictCard>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant='h6' gutterBottom>主要屋邨 / 地區：</Typography>\r\n            <List>\r\n              {\r\n                district.main_areas.map((area, index) => <ListItem alignItems='flex-start' key={index}>\r\n                  <ListItemText\r\n                    primary={`${Object.keys(area)[0]}. ${area[Object.keys(area)[0]]}`}\r\n                  />\r\n                </ListItem>)\r\n              }\r\n            </List>\r\n          </Grid>\r\n        </Container>\r\n        <Grid item xs={12}>\r\n          <Container maxWidth='lg'>\r\n            <Typography variant='h5' gutterBottom>估計人口</Typography>\r\n            {district.expected_population}\r\n            \r\n            <Typography variant='h5' gutterBottom>議員候選人</Typography>\r\n            <Grid item xs={12}>\r\n              {\r\n                district.candidates.sort((a, b) => a.candidate_number - b.candidate_number).map(candidate =>\r\n                  <div \r\n                    style={{ width: '100%' }}\r\n                    key={candidate.candidate_number}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"row\"\r\n                    justifyContent='space-between'>\r\n                    <Box p={1}>\r\n                      <Avatar\r\n                        src={`/static/images/avatar/${year}/${code}_${year === 2011 ? '0' : ''}${candidate.candidate_number}.jpg`}\r\n                        imgProps={{ onError: (e) => { e.target.src = '/static/images/avatar/default.png'; } }} >\r\n                      </Avatar>\r\n                    </Box>\r\n                    <Box p={1}>\r\n                      <Typography gutterBottom variant='h6'>\r\n                        {`${candidate.candidate_number}. ${candidate.person.name_zh}`}\r\n                      </Typography>\r\n                      </Box>\r\n                    <Box p={1}>\r\n                      <Typography color='textSecondary' variant='body2'>\r\n                        陣營\r\n                      </Typography>\r\n                      <Typography gutterBottom variant='body1'>\r\n                        {candidate.political_affiliation ? candidate.political_affiliation.name_zh: ''}\r\n                      </Typography>\r\n                      </Box>\r\n                    <Box p={1}>\r\n                      <Typography gutterBottom variant='body1'>\r\n                        {`${candidate.votes} (${candidate.vote_percentage}%)`}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box p={1}>\r\n                      <Typography color='textSecondary' variant='body2'>\r\n                        得票率\r\n                      </Typography>\r\n                      <CustomizedProgressBars\r\n                        value={parseFloat(candidate.vote_percentage)} />\r\n                    </Box>\r\n                    <Box p={1}>\r\n                      {candidate.won && <CheckCircleIcon />}\r\n                    </Box>\r\n                  </Box>\r\n                  </div>)\r\n              }\r\n            </Grid>\r\n          </Container>\r\n        </Grid>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DistrictPage\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n  },\r\n})\r\n\r\nclass NotFoundPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n     \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      TODO - <a href='https://notfound.collaction.hk/'>404</a>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NotFoundPage)\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport createMuiTheme from './ui/theme'\r\nimport NavBar from './layout/NavBar'\r\nimport SearchPage from './pages/search'\r\nimport MapPage from './pages/map'\r\nimport ProfilePage from './pages/profile'\r\nimport DistrictPage from './pages/district'\r\nimport NotfoundPage from './pages/notfound'\r\nimport './App.css'\r\n\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  // Load app bar information from the theme\r\n  // https://stackoverflow.com/questions/48508449/content-beneath-fixed-appbar\r\n  toolbar: theme.mixins.toolbar\r\n})\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n          <NavBar />\r\n          <main>\r\n            {/* <div className={classes.toolbar} /> */}\r\n            {/* Content will be shifted downwards by the div above. If the div is removed, the content will disappear under the app bar. */}\r\n            <Switch>\r\n              <Route exact path=\"/\" component={SearchPage} />\r\n              <Route exact path=\"/map\" component={MapPage} />\r\n              <Route path=\"/profile/:name\" component={ProfilePage} />\r\n              <Route path=\"/district/:year/:code\" component={DistrictPage} />\r\n              <Route component={NotfoundPage} />\r\n            </Switch>\r\n          </main>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}