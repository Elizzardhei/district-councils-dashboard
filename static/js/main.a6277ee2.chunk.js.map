{"version":3,"sources":["../node_modules/encoding/lib sync","ui/theme/index.js","layout/NavBar.js","components/PeopleSearcher.js","components/AddressSearcher.js","pages/search/index.js","utils/features.js","components/MapboxMap.js","components/InfoCard.js","pages/map/index.js","pages/profile/index.js","pages/notfound/index.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","createMuiTheme","palette","primary","main","secondary","themeName","typography","useNextVariants","fontFamily","NavBar","classes","this","props","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","className","grow","Button_default","component","NavLink","to","Component","withStyles","theme","flexGrow","withTheme","suggestions","candidates","map","item","name","name_chi","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","Object","objectWithoutProperties","TextField_default","assign","fullWidth","InputProps","node","input","renderSuggestion","suggestion","_ref","query","isHighlighted","matches","match","parts","parse","MenuItem_default","selected","part","index","highlight","key","String","style","fontWeight","text","getSuggestions","value","deburr","trim","toLowerCase","length","filter","includes","getSuggestionValue","PeopleSearcher","state","single","popper","handleSuggestionsFetchRequested","_ref2","_this","setState","handleSuggestionsClearRequested","handleChange","event","_ref3","newValue","defineProperty","handleSuggestionSelected","_ref4","suggestionValue","suggestionIndex","sectionIndex","method","handlePeopleSelected","_this2","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","class","dist_default","label","placeholder","onChange","popperNode","InputLabelProps","shrink","suggestionsList","renderSuggestionsContainer","options","Popper_default","anchorEl","open","Boolean","children","Paper_default","square","containerProps","width","clientWidth","React","root","height","container","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","display","margin","padding","listStyleType","IntegrationAutosuggest","inputValue","inputLength","count","keep","slice","address","coordinate","onAutoSuggestClicked","nativeEvent","MouseEvent","foundAddress","addresses","fullAddress","AddressParser","LANG_ZH","error","handleAddressSelected","currentSearchingResult","records","_","record","autoSuggestDiv","onAddressFieldChanged","bind","backgroundColor","left","right","divider","SearchPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","history","push","concat","autoCompleteList","evt","target","Grid_default","xs","paper","Input_default","defaultValue","aria-label","components_PeopleSearcher","getAllFeaturesFromPoint","point","featuresArray","pt","turf","lng","lat","feature","polygonProps","i","n","features","poly","geometry","coordinates","objectSpread","properties","year","split","getBoundingBox","data","coords","latitude","longitude","bounds","j","xMin","xMax","yMin","yMax","MapboxMap","getMapboxFeature","current","mapLayers","find","layer","checked","queryRenderedFeatures","layers","zoomToBound","mapboxgl","LngLatBounds","LngLat","fitBounds","maxZoom","hoveredStateId","clickedStateId","_this$props","token","center","zoom","minZoom","styleID","onMapClicked","selectedDCCA","onMapPanned","onMapFeatureClicked","mapConfig","accessToken","Map","on","getStyle","forEach","addSource","type","generateId","addLayer","source","layout","visibility","paint","line-color","line-width","fill-color","fill-opacity","_this2$map$getCenter","getCenter","toFixed","getZoom","prevProps","_this3","getLayer","setLayoutProperty","lastClick","setFeatureState","newFeature","project","newFeatureId","setTimeout","top","bottom","candiNumMapping","1","2","3","4","5","6","7","8","9","10","card","pos","marginBottom","electors","cacode","yearIndex","findIndex","o","parseInt","election","Fragment","Card_default","CardContent_default","cname","ename","List_default","candi","ListItem_default","alignItems","number","ListItemAvatar_default","Avatar_default","src","imgProps","onError","ListItemText_default","cName","eName","vote","win","ListItemSecondaryAction_default","Star_default","LONG","LAT","ZOOM","STYLE_ID","MapPage","lngLat","dccaList","parseFloat","onYearBtnClicked","idx","dcca","toConsumableArray","dc2003","dc2007","dc2011","dc2015","dc2019","_this$state","_this$state$map","currentFeature","currentYear","MuiThemeProvider_default","CssBaseline_default","content","toolbar","components_MapboxMap","InfoCard","CACODE","AddressSearcher","searchBox","yearButton","onClick","d","button","mixins","ProfilePage","params","showCase","candidate","CardHeader_default","avatar","candi_number","title","subheader","age","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","row","scope","district_name_chi","CANAME_chi","camp","political_affiliation","votes","percentage","NotFoundPage","href","App","layout_NavBar","react_router","exact","path","NotfoundPage","ReactDOM","render","react_router_dom","basename","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a6277ee2.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 368;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#FF8F00' },\r\n  secondary: { main: '#00E676' }\r\n};\r\nconst themeName = 'Pizazz Spring Green Falcon';\r\n\r\nconst typography =  {\r\n  useNextVariants: true,\r\n  fontFamily: \"'Noto Sans TC', sans-serif\"\r\n}\r\n\r\nexport default createMuiTheme({ palette, themeName, typography });\r\n","import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  }\r\n})\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              District Council Dashboard\r\n              </Typography>\r\n              <Button component={NavLink} to=\"/\">Search</Button>\r\n              <Button component={NavLink} to=\"/map\">Map</Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NavBar)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport deburr from 'lodash/deburr'\r\nimport Autosuggest from 'react-autosuggest'\r\nimport match from 'autosuggest-highlight/match'\r\nimport parse from 'autosuggest-highlight/parse'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Popper from '@material-ui/core/Popper'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport candidates from '../data/candidates'\r\n\r\nconst suggestions = candidates.map(item => {\r\n  return {\r\n    name: item.name_chi\r\n  }})\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node)\r\n          inputRef(node)\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  )\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.name, query)\r\n  const parts = parse(suggestion.name, matches)\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map((part, index) =>\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 500 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          ),\r\n        )}\r\n      </div>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = deburr(value.trim()).toLowerCase()\r\n  const inputLength = inputValue.length\r\n\r\n  return inputLength === 0 ? [] : suggestions.filter(suggestion => suggestion.name.includes(value))\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    height: 250,\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block',\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none',\r\n  }\r\n})\r\n\r\nclass PeopleSearcher extends React.Component {\r\n  state = {\r\n    single: '',\r\n    popper: '',\r\n    suggestions: [],\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    })\r\n  }\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    })\r\n  }\r\n\r\n  handleChange = name => (event, { newValue }) => {\r\n    this.setState({\r\n      [name]: newValue,\r\n    })\r\n  }\r\n\r\n  handleSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n    this.props.handlePeopleSelected(suggestion)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    \r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.suggestions,\r\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      onSuggestionSelected: this.handleSuggestionSelected,\r\n      getSuggestionValue,\r\n      renderSuggestion,\r\n    }\r\n\r\n    return (\r\n      <div className={this.props.class}>\r\n        <Autosuggest\r\n          {...autosuggestProps}\r\n          inputProps={{\r\n            classes,\r\n            label: '揾人',\r\n            placeholder: 'Please type a candidate name',\r\n            value: this.state.popper,\r\n            onChange: this.handleChange('popper'),\r\n            inputRef: node => {\r\n              this.popperNode = node\r\n            },\r\n            InputLabelProps: {\r\n              shrink: true,\r\n            },\r\n          }}\r\n          theme={{\r\n            suggestionsList: classes.suggestionsList,\r\n            suggestion: classes.suggestion,\r\n          }}\r\n          renderSuggestionsContainer={options => (\r\n            <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\r\n              <Paper\r\n                square\r\n                {...options.containerProps}\r\n                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\r\n              >\r\n                {options.children}\r\n              </Paper>\r\n            </Popper>\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPeopleSearcher.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(PeopleSearcher)","import React from 'react';\r\nimport PropTypes, { instanceOf } from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport * as AddressParser from 'hk-address-parser-lib';\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.label, query);\r\n  const parts = parse(suggestion.label, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map((part, index) =>\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 500 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          ),\r\n        )}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'block',\r\n    // height: 250,\r\n    flexGrow: 1,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n    padding: '10px'\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block'\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none'\r\n  },\r\n  divider: {\r\n    height: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass IntegrationAutosuggest extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : this.state.suggestions.filter(suggestion => {\r\n          const keep =\r\n            count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n          if (keep) {\r\n            count += 1;\r\n          }\r\n\r\n          return keep;\r\n        });\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    // console.log('fetched');\r\n    // this.setState({\r\n    //   suggestions: this.getSuggestions(value),\r\n    // });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleAddressSelected(address) {\r\n    const coordinate = address.coordinate();\r\n    this.props.onAutoSuggestClicked(coordinate)\r\n  }\r\n\r\n  async onAddressFieldChanged(event, { newValue }) {\r\n    const isMouseClick = event.nativeEvent instanceof MouseEvent;\r\n    if (isMouseClick) {\r\n      // This is fired when clicked on the pull down menu\r\n      this.setState({\r\n        value: newValue\r\n      })\r\n\r\n      let foundAddress = null;\r\n      try {\r\n        foundAddress = this.state.addresses.filter( address => address.fullAddress(AddressParser.Address.LANG_ZH) === newValue)[0];\r\n      } catch (error) {\r\n      }\r\n\r\n      if (foundAddress) {\r\n        this.handleAddressSelected(foundAddress);\r\n      }\r\n    } else {\r\n      // this is fired when typing in the search field\r\n      this.setState({\r\n        currentSearchingResult: newValue,\r\n        value: newValue\r\n      })\r\n      const records = await AddressParser.parse(newValue);\r\n\r\n      // Ignore the search if it is not the latest result\r\n      if (this.state.currentSearchingResult === newValue) {\r\n        this.setState({\r\n          suggestions: records.filter((_, index) => index < 10).map(record => ({ label: record.fullAddress(AddressParser.Address.LANG_ZH) })),\r\n          addresses: records,\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.suggestions,\r\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      getSuggestionValue,\r\n      renderSuggestion,\r\n    };\r\n\r\n    return (\r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.autoSuggestDiv}>\r\n          <Autosuggest\r\n            {...autosuggestProps}\r\n            inputProps={{\r\n              classes,\r\n              label: 'Label',\r\n              placeholder: 'With Popper',\r\n              value: this.state.value,\r\n              onChange: this.onAddressFieldChanged.bind(this),\r\n              inputRef: node => {\r\n                this.popperNode = node;\r\n              },\r\n              InputLabelProps: {\r\n                shrink: true,\r\n              },\r\n            }}\r\n            theme={{\r\n              suggestionsList: classes.suggestionsList,\r\n              suggestion: classes.suggestion,\r\n            }}\r\n            renderSuggestionsContainer={options => (\r\n              <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\r\n                <Paper\r\n                  square\r\n                  {...options.containerProps}\r\n                  style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\r\n                >\r\n                  {options.children}\r\n                </Paper>\r\n              </Popper>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIntegrationAutosuggest.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationAutosuggest);","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Input from '@material-ui/core/Input'\r\nimport PeopleSearcher from '../../components/PeopleSearcher'\r\nimport AddressSearcher from '../../components/AddressSearcher'\r\n\r\nimport * as AddressParser from 'hk-address-parser-lib'\r\n\r\nconst styles = theme => ({\r\n})\r\n\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      autoCompleteList: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n  }\r\n\r\n  async onAddressFieldChanged(evt) {\r\n    const { value } = evt.target;\r\n    const records = await AddressParser.parse(value);\r\n    this.setState({\r\n      autoCompleteList: records,\r\n    })\r\n  }\r\n\r\n  handlePeopleSelected = result => {\r\n    this.props.history.push(`profile/${result.name}`)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { autoCompleteList } = this.state;\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n          {/* TODO: Change the following input to AddressSearcher component, similar to PeopleSearcher */}\r\n            <Input\r\n              defaultValue=\"Search Address\"\r\n              inputProps={{\r\n                'aria-label': 'Description',\r\n              }}\r\n              onChange={this.onAddressFieldChanged.bind(this)}\r\n            />\r\n            { autoCompleteList.map( (address, index) => (<div key={index}><p>{address.fullAddress()}</p></div>))}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n          {/* TODO: Build a people.json for the autosuggest and profile */}\r\n            <PeopleSearcher\r\n            handlePeopleSelected={this.handlePeopleSelected}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n        \r\n\r\n      \r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchPage)\r\n","import * as turf from '@turf/turf'\r\n\r\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\r\n    const pt = turf.point([point.lng, point.lat])\r\n    const result = featuresArray.map(feature => {\r\n        let polygonProps = {}\r\n        for (let i= 0, n = feature.features.length; i < n; i++) {\r\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\r\n            if (turf.booleanPointInPolygon(pt, poly)) {\r\n                polygonProps = {...feature.features[i].properties}\r\n                break\r\n            }\r\n        }\r\n        return {\r\n            year: feature.name.split('_')[1],\r\n            ...polygonProps\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n\r\nexport const getBoundingBox = data => {\r\n    var bounds = {}, coords, point, latitude, longitude;\r\n  \r\n    // We want to use the “features” key of the FeatureCollection (see above)\r\n    // data = data.features;\r\n  \r\n    // Loop through each “feature”\r\n    // for (var i = 0; i < data.length; i++) {\r\n  \r\n      // Pull out the coordinates of this feature\r\n      coords = data.geometry.coordinates[0];\r\n  \r\n      // For each individual coordinate in this feature's coordinates…\r\n      for (var j = 0; j < coords.length; j++) {\r\n  \r\n        longitude = coords[j][0];\r\n        latitude = coords[j][1];\r\n  \r\n        // Update the bounds recursively by comparing the current\r\n        // xMin/xMax and yMin/yMax with the coordinate\r\n        // we're currently checking\r\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\r\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\r\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\r\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\r\n      }\r\n  \r\n    // }\r\n  \r\n    // Returns an object that contains the bounds of this GeoJSON\r\n    // data. The keys of this object describe a box formed by the\r\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\r\n    return bounds;\r\n  }","import React, { Component } from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport { getBoundingBox } from '../utils/features'\r\n\r\nclass MapboxMap extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hoveredStateId: null,\r\n            clickedStateId: null\r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n        // set map properties\r\n        const { token, center, zoom, minZoom, styleID, mapLayers, selectedDCCA, onMapClicked, onMapFeatureClicked, onMapPanned, color } = this.props\r\n\r\n        const mapConfig = {\r\n            container: 'map',\r\n            style: `mapbox://styles/${styleID}`,\r\n            center: center,\r\n            zoom: zoom,\r\n            minZoom: minZoom\r\n        }\r\n\r\n        mapboxgl.accessToken = token\r\n        this.map = new mapboxgl.Map(mapConfig)\r\n\r\n        this.map.on('load', () => {\r\n            // Get the map style and set it in the state tree\r\n            const style = this.map.getStyle()\r\n            //   this.props.setStyle(style)\r\n\r\n            mapLayers.forEach((layer, index) => {\r\n                this.map.addSource(layer.name, {\r\n                    type: 'geojson',\r\n                    data: layer,\r\n                    generateId: true\r\n                    // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-lines`,\r\n                    type: 'line',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        'line-color': color[index],\r\n                        'line-width': 2\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-hovers`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": \"#000\",\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n                            0.1,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-highlight`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": color[index],\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"highlight\"], false],\r\n                            0.3,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                // When the user moves their mouse over the state-fill layer, we'll update the\r\n                // feature state for the feature under the mouse.\r\n                // this.map.on(\"mousemove\", `${layer.name}-hovers`, function (e) {\r\n                    // if (e.features.length > 0) {\r\n                        // if (this.state.hoveredStateId !== null) {\r\n                        //     this.setFeatureState({ source: layer.name, id: this.state.hoveredStateId }, { hover: false })\r\n                        // }\r\n                        // let currentFeatureId = e.features[0].id\r\n                        // this.setFeatureState({ source: layer.name, id: currentFeatureId }, { hover: true })\r\n                        // this.setState({hoveredStateId: currentFeatureId})\r\n                    // }\r\n                // })\r\n\r\n                // When the mouse leaves the state-fill layer, update the feature state of the\r\n                // previously hovered feature.\r\n                // this.map.on(\"mouseleave\", `${layer.name}-hovers`, function () {\r\n                //     if (hoveredStateId) {\r\n                //         this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\r\n                //     }\r\n                //     hoveredStateId = null\r\n                // })\r\n\r\n                // this.map.on(\"click\", `${layer.name}-highlight`, function (e) {\r\n                // \r\n                    // if (clickedStateId) {\r\n                    //     this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: false })\r\n                    //     clickedStateId = null\r\n                    // }\r\n                    // clickedStateId = e.features[0].id\r\n                    // this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: true })\r\n                    // let bounds = getBoundingBox(e.features[0])\r\n                    // bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n                    // this.fitBounds(bounds, {\r\n                    //     padding: 50,\r\n                    //     maxZoom: 13.5\r\n                    // })\r\n                // })\r\n\r\n            })\r\n\r\n            this.map.on('click', e => {\r\n                this.getMapboxFeature(e.point)\r\n                onMapClicked(e)\r\n            })\r\n\r\n            this.map.on('move', () => {\r\n                const { lng, lat } = this.map.getCenter()\r\n                onMapPanned(lng.toFixed(4), lat.toFixed(4), this.map.getZoom().toFixed(2))\r\n            })\r\n\r\n\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    getMapboxFeature = (coordinate) => {\r\n        const current = this.props.mapLayers.find(layer => layer.checked)\r\n        const features = this.map.queryRenderedFeatures(\r\n            coordinate, { layers: [`${current.name}-highlight`] }\r\n          );\r\n          return features\r\n    }\r\n\r\n    zoomToBound = (feature) => {\r\n        let bounds = getBoundingBox(feature)\r\n        bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n\r\n        this.map.fitBounds(bounds, {\r\n            padding: 50,\r\n            maxZoom: 13.5\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.mapLayers !== prevProps.mapLayers) {\r\n\r\n            const status = this.props.mapLayers.map(layer => {\r\n                return {\r\n                    name: layer.name,\r\n                    visibility: layer.checked ? 'visible' : 'none'\r\n                }\r\n            })\r\n\r\n            status.forEach(layer => {\r\n                if (this.map.getLayer(`${layer.name}-lines`)) {\r\n                    this.map.setLayoutProperty(`${layer.name}-lines`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-hovers`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-highlight`, 'visibility', layer.visibility)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (this.props.lastClick !== prevProps.lastClick) {\r\n                if (this.state.clickedStateId) {\r\n                    this.map.setFeatureState({ source: 'DCCA_2015', id: this.state.clickedStateId }, { highlight: false })\r\n                }\r\n\r\n                if (this.props.lastClick) {\r\n                    const newFeature = this.getMapboxFeature(this.map.project(this.props.lastClick))[0]\r\n                    const newFeatureId = newFeature.id\r\n                    this.zoomToBound(newFeature)\r\n                    \r\n                    setTimeout(() => {\r\n                        this.map.setFeatureState({ source: 'DCCA_2015', id: newFeatureId }, { highlight: true }) \r\n                    }, 1000)\r\n                    \r\n\r\n                    this.setState({\r\n                        clickedStateId: newFeatureId\r\n                    })\r\n                }\r\n                \r\n                \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='map'\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n            ></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapboxMap","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = {\r\n    card: {    \r\n        width: '400px',\r\n        position: 'absolute',\r\n        top: '20%',\r\n        left: '100px'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n}\r\n\r\n\r\nconst candiNumMapping = {\r\n        1: '①',\r\n        2: '②',\r\n        3: '③',\r\n        4: '④',\r\n        5: '⑤',\r\n        6: '⑥',\r\n        7: '⑦',\r\n        8: '⑧',\r\n        9: '⑨',\r\n        10: '⑩'\r\n}\r\n\r\nconst SimpleCard = props => {\r\n    const { classes, electors, year, cacode } = props\r\n\r\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\r\n\r\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {result && <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" >\r\n                        {year}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        {result.cacode} {result.cname}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {result.ename}\r\n                    </Typography>\r\n                    <List>\r\n                    {\r\n                        result.candidates.map(candi => <ListItem alignItems=\"flex-start\" key={`${candi.number}`}>\r\n                            <ListItemAvatar>\r\n                                <Avatar \r\n                                src={`/static/images/avatar/${year}/${result.cacode}_${year === 2011 ? '0' : ''}${candi.number}.jpg`}\r\n                                imgProps={{ onError: (e) => { e.target.src = '/static/images/avatar/default.png'; } }} >\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={`${candi.number > 0 ? candiNumMapping[candi.number] : ''} ${candi.cName} ${candi.eName}`}\r\n                                secondary={candi.vote > 0 ? `${candi.vote}票` : '自動當選'}\r\n                            />\r\n                            {candi.win &&\r\n                            <ListItemSecondaryAction>\r\n                                <StarIcon color=\"secondary\" />\r\n                            </ListItemSecondaryAction>}\r\n                        </ListItem>)\r\n\r\n                    }\r\n                </List>\r\n                </CardContent>\r\n            </Card>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(SimpleCard)","import React, { Component } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport NavBar from '../../layout/NavBar'\r\nimport MapboxMap from '../../components/MapboxMap'\r\nimport InfoCard from '../../components/InfoCard'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport { getAllFeaturesFromPoint } from '../../utils/features'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddressSearcher from '../../components/AddressSearcher'\r\n\r\nimport dc2003 from '../../data/DCCA_2003'\r\nimport dc2007 from '../../data/DCCA_2007'\r\nimport dc2011 from '../../data/DCCA_2011'\r\nimport dc2015 from '../../data/DCCA_2015'\r\nimport dc2019 from '../../data/DCCA_2019'\r\nimport electors from '../../data/electors'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  yearButton: {\r\n    position: 'absolute',\r\n    width: 100,\r\n    top: '20%'\r\n  },\r\n  searchBox: {\r\n    position: 'absolute',\r\n    zIndex: 100,\r\n    top: '50%'\r\n  }\r\n})\r\n\r\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA'\r\nconst LONG = 114.2029\r\nconst LAT = 22.3844\r\nconst ZOOM = 11\r\nconst STYLE_ID = 'mapbox/streets-v9'\r\nconst MIN_ZOOM = 10\r\n\r\nconst color = [\r\n  '#6e40e6',\r\n  '#f49600',\r\n  '#ff5d55',\r\n  '#005ecd',\r\n  '#ad0000'\r\n]\r\n\r\nclass MapPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      dccaList: [dc2003, dc2007, dc2011, dc2015, dc2019],\r\n      open: false,\r\n      map: {\r\n        center: [LONG, LAT],\r\n        zoom: ZOOM,\r\n        styleID: STYLE_ID,\r\n        lastClick: null\r\n      },\r\n      selectedDCCA: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onYearBtnClicked('DCCA_2011')\r\n    this.onYearBtnClicked('DCCA_2015')\r\n  }\r\n\r\n  onMapPanned = (lng, lat, zoom) => {\r\n    this.setState({\r\n      map: {\r\n        center: [lng, lat],\r\n        zoom,\r\n      }\r\n    })\r\n  }\r\n\r\n  onMapClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lngLat.lng, e.lngLat.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint(e.lngLat, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onMapFeatureClicked = (e) => {\r\n    this.setState({\r\n      clickedStateId: e.features[0].id\r\n    })\r\n  }\r\n\r\n  onAutoSuggestClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lng, e.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint({lat: parseFloat(e.lat), lng: parseFloat(e.lng)}, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onYearBtnClicked = (name) => {\r\n    const idx = this.state.dccaList.findIndex(dcca => dcca.name === name)\r\n    let dccaList = [...this.state.dccaList]\r\n    dccaList.forEach(dcca => {dcca.checked = false})\r\n    dccaList[idx].checked = true\r\n    this.setState({ dccaList })\r\n  }\r\n\r\n  render() {\r\n    const { map: {center, zoom, lastClick}, selectedDCCA, dccaList } = this.state\r\n    const { classes, map } = this.props\r\n\r\n    const currentFeature = dccaList.length > 0 ? dccaList.find(dcca => dcca.checked) : null\r\n    const currentYear = currentFeature ? currentFeature.name.split('_')[1] : null\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {dccaList &&\r\n            <MapboxMap\r\n              mapLayers={dccaList}\r\n              token={TOKEN}\r\n              center={center}\r\n              zoom={zoom}\r\n              styleID={STYLE_ID}\r\n              minZoom={MIN_ZOOM}\r\n              color={color}\r\n              onMapClicked={this.onMapClicked}\r\n              onMapFeatureClicked={this.onMapFeatureClicked}\r\n              onMapPanned={this.onMapPanned}\r\n              clickedStateId={this.state.clickedStateId}\r\n              selectedDCCA={selectedDCCA}\r\n              lastClick={lastClick}\r\n            />}\r\n            <InfoCard \r\n            electors={electors}\r\n            year={currentYear}\r\n            cacode={currentYear && selectedDCCA && selectedDCCA.find(feature => feature.year === currentYear).CACODE}\r\n            />\r\n            \r\n            <AddressSearcher \r\n            className={classes.searchBox} \r\n            onAutoSuggestClicked={this.onAutoSuggestClicked}\r\n            />\r\n            <div className={classes.yearButton}>\r\n              <List>\r\n                {dccaList.map((dcca, index) => <ListItem key={`${dcca.name}`}>\r\n                  <Button\r\n                    onClick={() => this.onYearBtnClicked(dcca.name)}\r\n                    key={dcca.name} variant=\"contained\"\r\n                    style={{\r\n                      backgroundColor: dccaList.findIndex(d => d.name === dcca.name && d.checked === true) > -1 ? color[index] : '#e0e0e0'\r\n                    }}\r\n                    className={classes.button}>\r\n                    {dcca.name.split('_')[1]}\r\n                  </Button>\r\n                </ListItem>)}\r\n              </List>\r\n            </div>\r\n        </main>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(MapPage)","import React, { Component } from 'react'\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport candidates from '../../data/candidates'\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n     \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { match: { params } } = this.props\r\n    const showCase = candidates.filter(candidate => candidate.name_chi === params.name )\r\n    return (\r\n      // TODO: UI design\r\n      <Paper>\r\n        <Card>\r\n          <CardHeader\r\n            avatar={\r\n              // TODO: Add candi_number to candidate.json\r\n              <Avatar \r\n              src={`/static/images/avatar/2015/${showCase[showCase.length-1].cacode}_0${showCase[showCase.length-1].candi_number}.jpg`}\r\n              >\r\n              </Avatar>\r\n            }\r\n            title={showCase[0].name_chi}\r\n            subheader={`${showCase[showCase.length-1].age}歲 (${showCase[showCase.length-1].year})`}\r\n          />\r\n          <CardContent>\r\n          </CardContent>\r\n    </Card>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Year</TableCell>\r\n            <TableCell>Age</TableCell>\r\n            <TableCell>Distict</TableCell>\r\n            <TableCell>DCCA</TableCell>\r\n            <TableCell>Camp</TableCell>\r\n            <TableCell>political_affiliation</TableCell>\r\n            <TableCell align=\"right\">votes</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {showCase.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.year}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.age}</TableCell>\r\n              <TableCell align=\"right\">{row.district_name_chi}</TableCell>\r\n              <TableCell align=\"right\">{row.CANAME_chi}</TableCell>\r\n              <TableCell align=\"right\">{row.camp}</TableCell>\r\n              <TableCell align=\"right\">{row.political_affiliation}</TableCell>\r\n              <TableCell align=\"right\">{`${row.votes} (${row.percentage}%)`}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTheme()(ProfilePage)\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n  },\r\n})\r\n\r\nclass NotFoundPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n     \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      TODO - <a href='https://notfound.collaction.hk/'>404</a>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NotFoundPage)\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport createMuiTheme from './ui/theme'\r\nimport NavBar from './layout/NavBar'\r\nimport SearchPage from './pages/search'\r\nimport MapPage from './pages/map'\r\nimport ProfilePage from './pages/profile'\r\nimport NotfoundPage from './pages/notfound'\r\nimport './App.css'\r\n\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  // Load app bar information from the theme\r\n  // https://stackoverflow.com/questions/48508449/content-beneath-fixed-appbar\r\n  toolbar: theme.mixins.toolbar\r\n})\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <NavBar />\r\n        <main>\r\n          <div className={classes.toolbar} />\r\n          {/* Content will be shifted downwards by the div above. If the div is removed, the content will disappear under the app bar. */}\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SearchPage} />\r\n          <Route exact path=\"/map\" component={MapPage} />\r\n          <Route path=\"/profile/:name\" component={ProfilePage} />\r\n          <Route component={NotfoundPage} />\r\n        </Switch>\r\n        </main>\r\n        </MuiThemeProvider >\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Router basename=\"district-councils-dashboard\">\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}