{"version":3,"sources":["../node_modules/encoding/lib sync","components/atom/UnstyledLink.js","utils/responsive.js","components/atom/MobileAppBar.js","components/atom/DesktopAppBar.js","components/NavBar.js","utils/features.js","components/AddressSearcher.js","components/search/DistrictSelector.js","pages/search/index.js","pages/profile/index.js","components/OLMap.js","components/district/DistrictCard.js","components/district/MainAreas.js","components/BorderLinearProgress.js","components/district/CandidateList.js","helpers/candidate.js","components/district/VoterTurnoutChart.js","components/district/Metrics.js","pages/district/index.js","pages/battleground/index.js","ui/theme/index.js","pages/notfound/index.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","UnstyledLink","styled","Link","_templateObject","bps","createBreakpoints","createMuiTheme","StyledAppBar","AppBar","MobileAppBar_templateObject","up","StyledToolbar","Toolbar","_templateObject2","AppBarTitle","_templateObject3","Transition","React","forwardRef","props","ref","react_default","a","createElement","Slide","Object","assign","direction","displayName","StyledListItem","ListItem","_templateObject4","ListItemLink","button","component","NavList","List","_templateObject5","NavText","Typography","_templateObject6","MobileAppBar","_React$useState","useState","_React$useState2","slicedToArray","open","setOpen","navs","handleClose","Fragment","position","color","Container","disableGutters","RouterLink","to","IconButton","edge","aria-label","onClick","Menu_default","Dialog","fullScreen","onClose","TransitionComponent","style","flexGrow","Close_default","map","nav","i","_React$createElement","key","defineProperty","url","ListItemText","primary","variant","title","DesktopAppBar_templateObject","down","DesktopAppBar_templateObject2","NavLink","DesktopAppBar_templateObject3","DesktopAppBar","DesktopAppBar_StyledAppBar","maxWidth","DesktopAppBar_AppBarTitle","NavBar","atom_MobileAppBar","atom_DesktopAppBar","Component","getAllFeaturesFromPoint","point","featuresArray","arguments","length","undefined","dc2003","dc2007","dc2011","dc2015","dc2019","pt","turf","lng","lat","feature","polygonProps","n","features","poly","geometry","coordinates","objectSpread","properties","year","name","split","renderInputComponent","inputProps","classes","_inputProps$inputRef","inputRef","other","objectWithoutProperties","TextField","fullWidth","InputProps","node","input","disableUnderline","endAdornment","InputAdornment","className","searchButton","Search_default","renderSuggestion","suggestion","_ref","query","isHighlighted","matches","match","label","parts","parse","MenuItem","selected","part","index","highlight","String","fontWeight","text","getSuggestionValue","IntegrationAutosuggest","state","value","suggestions","handleSuggestionsFetchRequested","_ref2","_this","getSuggestions","then","result","setState","handleSuggestionsClearRequested","handleChange","event","_ref3","newValue","handleSuggestionSelected","_ref4","suggestionValue","suggestionIndex","sectionIndex","method","handleAddressSelected","coordinate","inputValue","trim","toLowerCase","AddressParser","records","filter","_","record","fullAddress","LANG_ZH","_this2","this","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","root","dist_default","placeholder","onChange","popperNode","InputLabelProps","shrink","theme","suggestionsList","suggestInput","renderSuggestionsContainer","options","Paper","square","containerProps","width","children","withStyles","height","container","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","display","margin","padding","listStyleType","borderRadius","boxShadow","backgroundColor","textDecoration","div","DistrictSelector_templateObject","SideBar","Box","DistrictSelector_templateObject2","MainContent","DistrictSelector_templateObject3","SideBarItem","Button","DistrictSelector_templateObject4","DistrictContainer","DistrictSelector_templateObject5","DistrictSelector","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderDCCA","district","dcca","concat","selectedDistrict","DistrictSelector_Container","area","dccode","dname_chi","StyledDivier","Divider","search_templateObject","search_templateObject2","RowContainer","search_templateObject3","ContentRowContainer","search_templateObject4","TabButton","search_templateObject5","active","ContentContainer","search_templateObject6","LandingIcon","_templateObject7","SearchPage","handlePeopleSelected","history","push","lastest","pop","CACODE","autoCompleteList","selectedTab","evt","target","tab","AddressSearcher","search_DistrictSelector","isSearchPeople","console","log","search_Container","onTabSelected","bind","renderSearchPeople","renderSearchDistrict","withTheme","GET_PEOPLE_PROFILE","gql","profile_templateObject","commonFontStyle","css","profile_templateObject2","CandidateName","profile_templateObject3","DistrictName","profile_templateObject4","FlexRowContainer","profile_templateObject5","CandidateHeaderContainer","profile_templateObject6","CandidateAvatar","Avatar","profile_templateObject7","BasicInfoHeader","_templateObject8","ElectionHistoryContainer","_templateObject9","ElectionHistoryHeader","_templateObject10","YearDiv","_templateObject11","ElectionHistoryPaper","_templateObject12","ElectionHistoryContentGrid","Grid","_templateObject13","ElectionHistoryContentSpan","_templateObject14","ElectionHistoryContentHeaderSpan","_templateObject15","ElectionDetailButton","_templateObject16","BasicInfoGridContainer","_templateObject17","BasicInfoGridHeader","_templateObject18","BasicInfoGridContent","_templateObject19","ProfilePage","handleElectionDetailButton","election","yob","item","xs","md","constituency","name_zh","cacode","camp","vote_percentage","is_won","_this3","params","homeUrl","react_apollo_esm","variables","loading","error","data","person","dc_people","sm","src","imgProps","onError","name_en","gender","estimated_yob","moment","elections","occupation","sort","b","renderElectionInfoCard","MapContainer","OLMap_templateObject","regionStyle","Style","fill","Fill","stroke","Stroke","Text","font","highlightStyle","OLMap","handleMapClick","_this$props","changeDistrict","selectedFeature","getFeatures","highlightFeature","get","getView","fit","getGeometry","getExtent","duration","featuresLayer","_this$props2","dc","find","d","isDCDataExist","featureSource","VectorSource","GeoJSON","readFeatures","VectorLayer","source","getText","setText","getProperties","layers","TileLayer","XYZ","Map","refs","mapContainer","view","View","projection","center","zoom","featureOverlay","extent","size","getSize","select","Select","addInteraction","on","highlightedFeature","getSource","removeFeature","addFeature","DistrictCard_templateObject","InnerContainer","DistrictCard_templateObject2","YearText","DistrictCard_templateObject3","RegionText","DistrictCard_templateObject4","CodeText","DistrictCard_templateObject5","DistrictCard_templateObject6","SeperatedRow","DistrictCard_templateObject7","DistrictCard","onPrevElection","ArrowBack_default","Date","getFullYear","onNextElection","ArrowForward_default","councillor","candidates","politicalAffiliation","electedCandidate","candidate","political_affiliations","political_affiliation","getCouncillor","DistrictCard_Container","border","renderPrevElectionButton","gutterBottom","renderNextElectionButton","DistrictCard_StyledDivier","MainAreas_templateObject","MainAreas","areas","MainAreas_Container","flexWrap","alignContent","mr","useStyles","makeStyles","BorderLinearProgress","lighten","bgColor","bar","LinearProgress","CustomizedProgressBars","fontBoldStyle","CandidateList_templateObject","fontNormalStyle","CandidateList_templateObject2","OvalButton","CandidateList_templateObject3","CandidateList_templateObject4","RowsContainer","CandidateList_templateObject5","CandidateList_templateObject6","FlexColumn","CandidateList_templateObject7","AvatarColumn","CandidateList_templateObject8","NameColumn","CandidateList_templateObject9","PoliticalColumn","CandidateList_templateObject10","CandidateList_templateObject11","CandidateListTitle","CandidateList_templateObject12","CandidateList_templateObject13","BlueVoteContainer","CandidateList_templateObject14","RedVoteContainer","CandidateList_templateObject15","ContentHeader","CandidateList_templateObject16","Content","CandidateList_templateObject17","CandidateList","CandidateList_Container","candidate_number","CandidateList_StyledDivier","CandidateList_FlexRowContainer","handleCandidateSelected","p","CandidateList_CandidateName","err","getCamp","pa","getPoliticalAffiliation","votes","parseFloat","zingchart","MODULESDIR","chartJSON","chartData","male","female","values","type","stacked","stack-type","x","y","align","subtitle","bold","font-size","font-color","background-color","plot","bar-width","hover-state","visible","animation","delay","sequence","valueBox","rules","rule","decimals","scale-x","tick","guide","scale-y","short","line-color","line-style","series","tooltip","VoterTurnoutChart","render","nextProps","nextState","JSON","stringify","exec","QUERY_FETCH_VOTES","Metrics_templateObject","Metrics_templateObject2","expected_population","stats","dc_constituencies","vote_stats","barVote","total","reduce","acc","cur","age","Metrics_Container","district_VoterTurnoutChart","GET_DISTRICTS","district_templateObject","FullWidthBox","district_templateObject2","LowerBackgroundContainer","district_templateObject3","district_templateObject4","DistrictCardContainer","district_templateObject5","DistrictPage","candidateId","handleChangeDistrict","_this$props$match$par","parseInt","_this$props$match$par2","_this$props$match$par3","electionYear","district_FlexRowContainer","components_OLMap","district_DistrictCard","district_MainAreas","main_areas","Metrics","district_CandidateList","battleground_templateObject","battleground_templateObject2","battleground_templateObject3","battleground_templateObject4","battleground_templateObject5","BattleGroundPage","_this$props$match$par4","battleground_FlexRowContainer","battleground_DistrictCardContainer","battleground_FullWidthBox","battleground_LowerBackgroundContainer","typography","useNextVariants","fontSize","fontFamily","join","h1","h2","h3","h4","h5","h6","body1","palette","light","main","dark","secondary","background","default","NotFoundPage","MuiThemeProvider_default","href","content","client","ApolloClient","uri","App","CssBaseline","components_NavBar","react_router","exact","path","NotfoundPage","toolbar","mixins","ReactDOM","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b73af3c7.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 366;","import styled from 'styled-components'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst UnstyledLink = styled(Link)`\r\n  text-decoration: unset;\r\n  color: unset;\r\n  font-style: unset;\r\n  cursor: pointer;\r\n`\r\n\r\nexport default UnstyledLink\r\n","import createBreakpoints from '@material-ui/core/styles/createBreakpoints'\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\r\n\r\nexport const bps = createBreakpoints({})\r\n\r\nexport const headingFontFamily = 'Source Serif Pro, sans-serif'\r\nexport const bodyFontFamily = 'PT Serif, sans-serif'\r\n\r\nexport const fontFamily = ['PingFangTC-Semibold', 'PingFangTC-Medium']\r\n\r\nexport const typography = {}\r\n\r\nexport const theme = createMuiTheme()\r\n","import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport styled from 'styled-components'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport UnstyledLink from './UnstyledLink'\r\nimport { bps } from '../../utils/responsive'\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  && {\r\n    width: 100%;\r\n    background-color: white;\r\n    box-shadow: none;\r\n    ${bps.up('md')} {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledToolbar = styled(Toolbar)`\r\n  && {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst AppBarTitle = styled(UnstyledLink)`\r\n  && {\r\n    font-weight: 700;\r\n    flex-grow: 1;\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst Transition = React.forwardRef((props, ref) => (\r\n  <Slide direction=\"left\" ref={ref} {...props} />\r\n))\r\nTransition.displayName = 'Transition'\r\n\r\nconst StyledListItem = styled(ListItem)`\r\n  && {\r\n    padding: 1rem 1rem;\r\n  }\r\n`\r\n\r\nfunction ListItemLink(props) {\r\n  return <StyledListItem button component={UnstyledLink} {...props} />\r\n}\r\n\r\nconst NavList = styled(List)`\r\n  && {\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nconst NavText = styled(Typography)`\r\n  && {\r\n    display: inline;\r\n    font-weight: 700;\r\n    margin: 0 1.5rem -5px;\r\n    border-bottom: 5px solid #ffee4f;\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`\r\n\r\nfunction MobileAppBar(props) {\r\n  const [open, setOpen] = React.useState(false)\r\n  const { navs } = props\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true)\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledAppBar position=\"sticky\" color=\"default\">\r\n        <Container>\r\n          <StyledToolbar disableGutters>\r\n            <AppBarTitle component={RouterLink} to=\"/\">\r\n              Vote for Hong Kong\r\n            </AppBarTitle>\r\n            <IconButton\r\n              edge=\"end\"\r\n              component=\"span\"\r\n              color=\"default\"\r\n              aria-label=\"Menu\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </StyledToolbar>\r\n        </Container>\r\n      </StyledAppBar>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <Toolbar>\r\n          <div style={{ flexGrow: 1 }} />\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"Close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <NavList>\r\n          {navs.map((nav, i) => (\r\n            <ListItemLink\r\n              key={i}\r\n              component={RouterLink}\r\n              to=\"/\"\r\n              to={nav.url}\r\n              onClick={handleClose}\r\n            >\r\n              <ListItemText\r\n                primary={<NavText variant=\"h2\">{nav.title}</NavText>}\r\n              />\r\n            </ListItemLink>\r\n          ))}\r\n        </NavList>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MobileAppBar\r\n","import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport styled from 'styled-components'\r\nimport Container from '@material-ui/core/Container'\r\nimport { bps } from '../../utils/responsive'\r\nimport UnstyledLink from './UnstyledLink'\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  && {\r\n    width: 100%;\r\n    background-color: white;\r\n    box-shadow: none;\r\n    ${bps.down('sm')} {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst AppBarTitle = styled(UnstyledLink)`\r\n  && {\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n    margin-right: 5rem;\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst NavLink = styled(UnstyledLink)`\r\n  && {\r\n    margin: 0 1.5rem -5px;\r\n    border-bottom: 5px solid transparent;\r\n\r\n    &:hover {\r\n      border-bottom: 5px solid #ffee4f;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`\r\n\r\nfunction DesktopAppBar(props) {\r\n  const { navs } = props\r\n  return (\r\n    <>\r\n      <StyledAppBar position=\"sticky\" color=\"default\">\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar disableGutters>\r\n            <AppBarTitle component={RouterLink} to=\"/\">\r\n              Vote for Hong Kong\r\n            </AppBarTitle>\r\n            {navs.map((nav, i) => (\r\n              <NavLink key={i} component={RouterLink} to={nav.url}>\r\n                {nav.title}\r\n              </NavLink>\r\n            ))}\r\n          </Toolbar>\r\n        </Container>\r\n      </StyledAppBar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DesktopAppBar\r\n","import React, { Component } from 'react'\r\nimport MobileAppBar from './atom/MobileAppBar'\r\nimport DesktopAppBar from './atom/DesktopAppBar'\r\n\r\nconst navs = [\r\n  { url: '/', title: 'Search' },\r\n  { url: '/', title: 'District' },\r\n  { url: '/', title: 'People' },\r\n]\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <MobileAppBar navs={navs} />\r\n        <DesktopAppBar navs={navs} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar\r\n","import * as turf from '@turf/turf'\r\n\r\nimport dc2003 from '../data/DCCA_2003'\r\nimport dc2007 from '../data/DCCA_2007'\r\nimport dc2011 from '../data/DCCA_2011'\r\nimport dc2015 from '../data/DCCA_2015'\r\nimport dc2019 from '../data/DCCA_2019'\r\n\r\nexport const getAllFeaturesFromPoint = (\r\n  point,\r\n  featuresArray = [dc2003, dc2007, dc2011, dc2015, dc2019]\r\n) => {\r\n  const pt = turf.point([point.lng, point.lat])\r\n  const result = featuresArray.map(feature => {\r\n    let polygonProps = {}\r\n    for (let i = 0, n = feature.features.length; i < n; i++) {\r\n      const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\r\n      if (turf.booleanPointInPolygon(pt, poly)) {\r\n        polygonProps = { ...feature.features[i].properties }\r\n        break\r\n      }\r\n    }\r\n    return {\r\n      year: feature.name.split('_')[1],\r\n      ...polygonProps,\r\n    }\r\n  })\r\n  return result\r\n}\r\n","import React from 'react'\r\nimport PropTypes, { instanceOf } from 'prop-types'\r\nimport Autosuggest from 'react-autosuggest'\r\nimport match from 'autosuggest-highlight/match'\r\nimport parse from 'autosuggest-highlight/parse'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport * as AddressParser from 'hk-address-parser-lib'\r\nimport { getAllFeaturesFromPoint } from '../utils/features'\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        fullWidth\r\n        InputProps={{\r\n          inputRef: node => {\r\n            ref(node)\r\n            inputRef(node)\r\n          },\r\n          classes: {\r\n            input: classes.input,\r\n          },\r\n          disableUnderline: true,\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton className={classes.searchButton} aria-label=\"Search\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        disableUnderline={true}\r\n        {...other}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.label, query)\r\n  const parts = parse(suggestion.label, matches)\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      {parts.map((part, index) =>\r\n        part.highlight ? (\r\n          <span key={String(index)} style={{ fontWeight: 500 }}>\r\n            {part.text}\r\n          </span>\r\n        ) : (\r\n          <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n            {part.text}\r\n          </strong>\r\n        )\r\n      )}\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    height: 100,\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block',\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none',\r\n  },\r\n  suggestInput: {\r\n    height: '60px',\r\n    borderRadius: '4px',\r\n    boxShadow: '0 2px 16px 0 rgba(0, 0, 0, 0.1)',\r\n    backgroundColor: '#ffffff',\r\n    padding: '10px 20px',\r\n  },\r\n  input: {\r\n    textDecoration: 'none',\r\n  },\r\n  searchButton: {\r\n    color: '#ffd731',\r\n  },\r\n})\r\n\r\nclass IntegrationAutosuggest extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  }\r\n\r\n  async getSuggestions(value) {\r\n    const inputValue = value.trim().toLowerCase()\r\n    const inputLength = inputValue.length\r\n\r\n    if (inputLength > 0) {\r\n      const records = await AddressParser.parse(inputValue)\r\n      const result = records\r\n        .filter((_, index) => index < 10)\r\n        .map(record => ({\r\n          coordinate: record.coordinate(),\r\n          label: record.fullAddress(AddressParser.Address.LANG_ZH),\r\n        }))\r\n\r\n      return result\r\n    }\r\n\r\n    return []\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    this.getSuggestions(value).then(result => {\r\n      this.setState({\r\n        suggestions: result,\r\n      })\r\n    })\r\n  }\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    })\r\n  }\r\n\r\n  handleChange = name => (event, { newValue }) => {\r\n    this.setState({\r\n      [name]: newValue,\r\n    })\r\n  }\r\n\r\n  handleSuggestionSelected = (\r\n    event,\r\n    { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }\r\n  ) => {\r\n    this.props.handleAddressSelected(\r\n      getAllFeaturesFromPoint(suggestion.coordinate)\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.suggestions,\r\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      onSuggestionSelected: this.handleSuggestionSelected,\r\n      getSuggestionValue,\r\n      renderSuggestion,\r\n    }\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Autosuggest\r\n          {...autosuggestProps}\r\n          inputProps={{\r\n            classes,\r\n            placeholder: '尋找選區...',\r\n            value: this.state.value,\r\n            onChange: this.handleChange('value'),\r\n            inputRef: node => {\r\n              this.popperNode = node\r\n            },\r\n            InputLabelProps: {\r\n              shrink: true,\r\n            },\r\n          }}\r\n          theme={{\r\n            suggestionsList: classes.suggestionsList,\r\n            suggestion: classes.suggestion,\r\n            input: classes.suggestInput,\r\n          }}\r\n          renderSuggestionsContainer={options => (\r\n            <Paper\r\n              square\r\n              {...options.containerProps}\r\n              style={{\r\n                width: '100%',\r\n              }}\r\n            >\r\n              {options.children}\r\n            </Paper>\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nIntegrationAutosuggest.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(IntegrationAutosuggest)\r\n","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Box from '@material-ui/core/Box'\r\nimport area from '../../data/area'\r\nimport district from '../../data/district'\r\nimport Button from '@material-ui/core/Button'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n   {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst SideBar = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    min-width: 200px;\r\n    max-width: 200px;\r\n  }\r\n`\r\n\r\nconst MainContent = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: baseline;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    flex-grow: 1;\r\n  }\r\n`\r\n\r\nconst SideBarItem = styled(Button)`\r\n  && {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst DistrictContainer = styled(Button)`\r\n  && {\r\n    width: 120px;\r\n    justify-content: left;\r\n  }\r\n`\r\n\r\nclass DistrictSelector extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      selectedDistrict: null,\r\n    }\r\n  }\r\n  renderDCCA = code => {\r\n    if (!code) return null\r\n    return (\r\n      <div>\r\n        {Object.keys(district['2019'][code]).map(dcca => {\r\n          return (\r\n            <DistrictContainer\r\n              component={NavLink}\r\n              to={`/district/2019/${dcca}`}\r\n              key={district['2019'][code][dcca].code}\r\n              color=\"secondary\"\r\n            >\r\n              <Typography variant=\"h6\">\r\n                {district['2019'][code][dcca].name}\r\n              </Typography>\r\n            </DistrictContainer>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <SideBar>\r\n          {area.map(a => (\r\n            <SideBarItem\r\n              key={a.dccode}\r\n              color=\"primary\"\r\n              onClick={() => this.setState({ selectedDistrict: a.dccode })}\r\n            >\r\n              {a.dname_chi}\r\n            </SideBarItem>\r\n          ))}\r\n        </SideBar>\r\n        <MainContent>\r\n          <Typography variant=\"subtitle1\">\r\n            {this.renderDCCA(this.state.selectedDistrict)}\r\n          </Typography>\r\n        </MainContent>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DistrictSelector\r\n","import React, { Component } from 'react'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport AddressSearcher from '../../components/AddressSearcher'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport styled from 'styled-components'\r\nimport { bps } from 'utils/responsive'\r\nimport DistrictSelector from 'components/search/DistrictSelector'\r\n\r\nimport * as AddressParser from 'hk-address-parser-lib'\r\n\r\nconst styles = theme => ({})\r\n\r\nconst StyledDivier = styled(Divider)`\r\n  && {\r\n    background-color: #ececec;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  ${bps.up('md')} {\r\n    width: 100%;\r\n  }\r\n\r\n  ${bps.up('lg')} {\r\n    width: 1440px;\r\n  }\r\n  padding-top: 50px;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: baseline;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  flex-grow: 1;\r\n`\r\n\r\nconst RowContainer = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-grow: 1;\r\n  }\r\n`\r\n\r\nconst ContentRowContainer = styled(RowContainer)`\r\n  && {\r\n    flex-flow: row;\r\n    ${bps.down('md')} {\r\n      flex-flow: column;\r\n    }\r\n  }\r\n`\r\n\r\nconst TabButton = styled(Button)`\r\n  && {\r\n    width: 200px;\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    padding-bottom: 30px;\r\n    text-align: center;\r\n    color: ${props => (props.active ? '#ffd731' : '#c2c2c2')};\r\n\r\n    border-bottom: ${props => (props.active ? '1px solid #ffd731' : 'none')};\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst ContentContainer = styled(Box)`\r\n  && {\r\n    margin: 50px;\r\n    width: 50%;\r\n    ${bps.down('md')} {\r\n      width: 100%;\r\n    }\r\n    justify-content: center;\r\n  }\r\n`\r\nconst LandingIcon = styled.div`\r\n  margin-top: 70px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 461px;\r\n  height: 295px;\r\n\r\n  ${bps.down('md')} {\r\n    width: 200px;\r\n    height: 128px;\r\n  }\r\n  background: url('/static/images/landingIcon.svg') no-repeat;\r\n  background-size: cover;\r\n`\r\n\r\nclass SearchPage extends Component {\r\n  selectedTab\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      autoCompleteList: [],\r\n      selectedTab: 'district',\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {}\r\n\r\n  async onAddressFieldChanged(evt) {\r\n    const { value } = evt.target\r\n    const records = await AddressParser.parse(value)\r\n    this.setState({\r\n      autoCompleteList: records,\r\n    })\r\n  }\r\n\r\n  handlePeopleSelected = result => {\r\n    this.props.history.push(`profile/${result.id}`)\r\n  }\r\n\r\n  handleAddressSelected = result => {\r\n    if (!result) return\r\n\r\n    const lastest = result.pop()\r\n\r\n    /* TODO: \r\n      Use context (?) to store the Global district result array\r\n      When user select click previous button in district page, \r\n      the CACODE should follow follow the above result\r\n    */\r\n\r\n    this.props.history.push(`district/${lastest.year}/${lastest.CACODE}`)\r\n  }\r\n\r\n  renderSearchPeople() {\r\n    return <></>\r\n  }\r\n  onTabSelected(tab) {\r\n    return () => {\r\n      this.setState({\r\n        selectedTab: tab,\r\n      })\r\n    }\r\n  }\r\n\r\n  renderSearchDistrict() {\r\n    return (\r\n      <ContentRowContainer>\r\n        <ContentContainer>\r\n          <AddressSearcher handleAddressSelected={this.handleAddressSelected} />\r\n          <LandingIcon />\r\n        </ContentContainer>\r\n        <ContentContainer>\r\n          <DistrictSelector />\r\n        </ContentContainer>\r\n      </ContentRowContainer>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { selectedTab } = this.state\r\n    const isSearchPeople = selectedTab === 'people'\r\n    console.log(selectedTab)\r\n    return (\r\n      <Container>\r\n        <RowContainer>\r\n          <TabButton\r\n            active={!isSearchPeople}\r\n            onClick={this.onTabSelected('district').bind(this)}\r\n          >\r\n            <Typography variant=\"h2\">找選區</Typography>\r\n          </TabButton>\r\n          <TabButton\r\n            active={isSearchPeople}\r\n            onClick={this.onTabSelected('people').bind(this)}\r\n          >\r\n            <Typography variant=\"h2\">找議員</Typography>\r\n          </TabButton>\r\n        </RowContainer>\r\n        <StyledDivier />\r\n        {isSearchPeople\r\n          ? this.renderSearchPeople()\r\n          : this.renderSearchDistrict()}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchPage)\r\n","import React, { Component } from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport styled, { css } from 'styled-components'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport moment from 'moment'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport { bps } from 'utils/responsive'\r\n\r\n// TODO: add age, camp & political_affiliation\r\nconst GET_PEOPLE_PROFILE = gql`\r\n  query($id: uuid!) {\r\n    dc_people(\r\n      where: { id: { _eq: $id } }\r\n      order_by: { elections_aggregate: { max: { year: asc } } }\r\n    ) {\r\n      id\r\n      name_en\r\n      name_zh\r\n      estimated_yob\r\n      gender\r\n      elections {\r\n        occupation\r\n        cacode\r\n        year\r\n        votes\r\n        vote_percentage\r\n        is_won\r\n        constituency {\r\n          name_zh\r\n          expected_population\r\n          deviation_percentage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst commonFontStyle = css`\r\n  font-family: 'PingFangTC-Light';\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n`\r\n\r\nconst CandidateName = styled.div`\r\n   {\r\n    ${commonFontStyle}\r\n    margin: 20px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    ${bps.up('sm')} {\r\n      margin: 0px;\r\n      margin-top: 50px;\r\n      font-size: 30px;\r\n    }\r\n\r\n    ${bps.up('md')} {\r\n      margin-top: 50px;\r\n      font-size: 48px;\r\n    }\r\n  }\r\n`\r\n\r\nconst DistrictName = styled.div`\r\n   {\r\n    ${commonFontStyle}\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    ${bps.up('sm')} {\r\n      font-size: 20px;\r\n    }\r\n\r\n    ${bps.up('md')} {\r\n      font-size: 36px;\r\n    }\r\n  }\r\n`\r\n\r\nconst FlexRowContainer = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-content: flex-start;\r\n    margin: auto;\r\n\r\n    ${bps.up('md')} {\r\n      width: 100%;\r\n    }\r\n\r\n    ${bps.up('lg')} {\r\n      width: 1440px;\r\n    }\r\n  }\r\n`\r\n\r\nconst CandidateHeaderContainer = styled(FlexRowContainer)`\r\n  && {\r\n    opacity: 0.95;\r\n    background-color: #f6416e;\r\n  }\r\n`\r\n\r\nconst CandidateAvatar = styled(Avatar)`\r\n  && {\r\n    width: 153px;\r\n    height: 180px;\r\n    border-radius: 0;\r\n\r\n    ${bps.up('sm')} {\r\n      margin-top: 40px;\r\n      margin-left: 60px;\r\n    }\r\n\r\n    ${bps.up('md')} {\r\n      margin-left: 120px;\r\n    }\r\n  }\r\n`\r\n\r\nconst BasicInfoHeader = styled.div`\r\n  && {\r\n    ${commonFontStyle}\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n    width: 100%;\r\n\r\n    ${bps.up('md')} {\r\n      margin-left: 65px;\r\n    }\r\n  }\r\n`\r\nconst ElectionHistoryContainer = styled(FlexRowContainer)`\r\n  && {\r\n    padding: 20px;\r\n    background-color: #fafafa;\r\n    ${bps.up('sm')} {\r\n      padding-left: 40px;\r\n    }\r\n\r\n    ${bps.up('md')} {\r\n      padding-left: 120px;\r\n      height: 100%;\r\n    }\r\n  }\r\n`\r\nconst ElectionHistoryHeader = styled.div`\r\n  && {\r\n    ${commonFontStyle}\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n    color: #333333;\r\n    margin-top: 4px;\r\n  }\r\n`\r\n\r\nconst YearDiv = styled.div`\r\n  && {\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    color: #9b9b9b;\r\n    margin-bottom: 20px;\r\n  }\r\n`\r\n\r\nconst ElectionHistoryPaper = styled(Paper)`\r\n  && {\r\n    padding: 20px;\r\n  }\r\n`\r\n\r\nconst ElectionHistoryContentGrid = styled(Grid)`\r\n  && {\r\n    padding: 15px;\r\n  }\r\n`\r\n\r\nconst ElectionHistoryContentSpan = styled(Grid)`\r\n  && {\r\n    ${commonFontStyle}\r\n    font-size: 18px;\r\n    color: #4a4a4a;\r\n  }\r\n`\r\n\r\nconst ElectionHistoryContentHeaderSpan = styled(ElectionHistoryContentSpan)`\r\n  && {\r\n    font-weight: 500;\r\n  }\r\n`\r\nconst ElectionDetailButton = styled.div`\r\n  && {\r\n    ${commonFontStyle}\r\n    padding: 15px;\r\n    font-weight: 600;\r\n    color: #ffb700;\r\n    width: 100%;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: 2px solid #ffb700;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst BasicInfoGridContainer = styled(FlexRowContainer)`\r\n  && {\r\n    margin-top: 40px;\r\n    margin-left: 20px;\r\n    margin-bottom: 40px;\r\n\r\n    ${bps.up('sm')} {\r\n      padding-left: 40px;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n    }\r\n\r\n    ${bps.up('md')} {\r\n      padding-left: 55px;\r\n      height: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nconst BasicInfoGridHeader = styled(Grid)`\r\n  && {\r\n    ${commonFontStyle}\r\n    font-weight: 600;\r\n    color: #4a4a4a;\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nconst BasicInfoGridContent = styled(Grid)`\r\n  && {\r\n    ${commonFontStyle}\r\n    color: #4a4a4a;\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  async componentDidMount() {}\r\n\r\n  handleElectionDetailButton = (year, code) => {\r\n    this.props.history.push(`/district/${year}/${code}`)\r\n  }\r\n\r\n  renderElectionInfoCard(election, yob) {\r\n    console.log(election)\r\n    return (\r\n      <Grid item xs={12} md={4}>\r\n        <YearDiv>{`${election.year}年`}</YearDiv>\r\n        <ElectionHistoryPaper>\r\n          <ElectionHistoryContentGrid container spacing={1}>\r\n            <ElectionHistoryContentHeaderSpan item xs={12} md={4}>\r\n              地區\r\n            </ElectionHistoryContentHeaderSpan>\r\n            <ElectionHistoryContentSpan item xs={12} md={8}>\r\n              {' '}\r\n              {election.constituency && election.constituency.name\r\n                ? election.constituency.name\r\n                : '-'}{' '}\r\n            </ElectionHistoryContentSpan>\r\n          </ElectionHistoryContentGrid>\r\n          <hr />\r\n          <ElectionHistoryContentGrid container spacing={1}>\r\n            <ElectionHistoryContentHeaderSpan item xs={12} md={4}>\r\n              選區\r\n            </ElectionHistoryContentHeaderSpan>\r\n            <ElectionHistoryContentSpan item xs={12} md={8}>\r\n              {`${election.constituency.name_zh} （${election.cacode}）`}\r\n            </ElectionHistoryContentSpan>\r\n          </ElectionHistoryContentGrid>\r\n          <hr />\r\n          <ElectionHistoryContentGrid container spacing={1}>\r\n            <ElectionHistoryContentHeaderSpan item xs={12} md={4}>\r\n              陣營\r\n            </ElectionHistoryContentHeaderSpan>\r\n            <ElectionHistoryContentSpan item xs={12} md={8}>\r\n              {election.camp ? election.camp : '-'}\r\n            </ElectionHistoryContentSpan>\r\n          </ElectionHistoryContentGrid>\r\n          <hr />\r\n          <ElectionHistoryContentGrid container spacing={1}>\r\n            <ElectionHistoryContentHeaderSpan item xs={12} md={4}>\r\n              得票率\r\n            </ElectionHistoryContentHeaderSpan>\r\n            <ElectionHistoryContentSpan item xs={12} md={8}>\r\n              {`${election.vote_percentage}% （${\r\n                election.is_won ? '當選' : '落敗'\r\n              }）`}\r\n            </ElectionHistoryContentSpan>\r\n          </ElectionHistoryContentGrid>\r\n          <ElectionHistoryContentGrid container spacing={1}>\r\n            <ElectionDetailButton\r\n              onClick={() => {\r\n                this.handleElectionDetailButton(election.year, election.cacode)\r\n              }}\r\n            >\r\n              查看選舉資料\r\n            </ElectionDetailButton>\r\n          </ElectionHistoryContentGrid>\r\n        </ElectionHistoryPaper>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = this.props\r\n\r\n    // todo: use ENV_VAR\r\n    const homeUrl = 'https://cswbrian.github.io/district-councils-dashboard/'\r\n\r\n    return (\r\n      <Query query={GET_PEOPLE_PROFILE} variables={{ id }}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return null\r\n          if (error) return `Error! ${error}`\r\n          const person = data.dc_people[0]\r\n\r\n          return (\r\n            <>\r\n              <CandidateHeaderContainer>\r\n                <Box\r\n                  width={{ sm: '250px', md: '300px' }}\r\n                  height={{ sm: '200px' }}\r\n                >\r\n                  <CandidateAvatar\r\n                    src={`${homeUrl}/static/images/avatar/${person.id}.jpg`}\r\n                    imgProps={{\r\n                      onError: e => {\r\n                        e.target.src = `${homeUrl}/static/images/avatar/default.png`\r\n                      },\r\n                    }}\r\n                  ></CandidateAvatar>\r\n                </Box>\r\n                <Box>\r\n                  <CandidateName>\r\n                    {person.name_zh ? person.name_zh : ''}{' '}\r\n                    {person.name_zh ? person.name_en : ''}\r\n                    <DistrictName>{/* TODO */}-</DistrictName>\r\n                  </CandidateName>\r\n                </Box>\r\n              </CandidateHeaderContainer>\r\n\r\n              <BasicInfoGridContainer>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} md={3}>\r\n                    <BasicInfoHeader>基本資料</BasicInfoHeader>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Grid container spacing={3}>\r\n                      <BasicInfoGridHeader item xs={5}>\r\n                        性別\r\n                      </BasicInfoGridHeader>\r\n                      <BasicInfoGridContent item xs={7}>\r\n                        {person.gender\r\n                          ? person.gender == 'male'\r\n                            ? '男'\r\n                            : '女'\r\n                          : '-'}\r\n                      </BasicInfoGridContent>\r\n\r\n                      <BasicInfoGridHeader item xs={5}>\r\n                        年齡\r\n                      </BasicInfoGridHeader>\r\n                      <BasicInfoGridContent item xs={7}>\r\n                        {person.estimated_yob\r\n                          ? `${moment().year() - person.estimated_yob}歲`\r\n                          : '-'}\r\n                      </BasicInfoGridContent>\r\n\r\n                      <BasicInfoGridHeader item xs={5}>\r\n                        出生年份\r\n                      </BasicInfoGridHeader>\r\n                      <BasicInfoGridContent item xs={7}>\r\n                        {person.estimated_yob ? person.estimated_yob : '-'}\r\n                      </BasicInfoGridContent>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Grid container spacing={3}>\r\n                      <BasicInfoGridHeader item xs={5}>\r\n                        職業\r\n                      </BasicInfoGridHeader>\r\n                      <BasicInfoGridContent item xs={7}>\r\n                        {person.elections[person.elections.length - 1]\r\n                          .occupation\r\n                          ? person.elections[person.elections.length - 1]\r\n                              .occupation\r\n                          : '-'}\r\n                      </BasicInfoGridContent>\r\n\r\n                      <BasicInfoGridHeader item xs={5}>\r\n                        陣營\r\n                      </BasicInfoGridHeader>\r\n                      <BasicInfoGridContent item xs={7}>\r\n                        {/* TODO */}-\r\n                      </BasicInfoGridContent>\r\n\r\n                      <BasicInfoGridHeader item xs={5}>\r\n                        所屬政治聯繫\r\n                      </BasicInfoGridHeader>\r\n                      <BasicInfoGridContent item xs={7}>\r\n                        {/* TODO */}-\r\n                      </BasicInfoGridContent>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </BasicInfoGridContainer>\r\n\r\n              <ElectionHistoryContainer>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <ElectionHistoryHeader>區議會選舉</ElectionHistoryHeader>\r\n                  </Grid>\r\n\r\n                  {person.elections\r\n                    .sort((a, b) => b.year - a.year)\r\n                    .map(election =>\r\n                      this.renderElectionInfoCard(\r\n                        election,\r\n                        person.estimated_yob\r\n                      )\r\n                    )}\r\n                </Grid>\r\n              </ElectionHistoryContainer>\r\n            </>\r\n          )\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfilePage\r\n","import React, { Component } from 'react'\r\nimport Map from 'ol/Map'\r\nimport View from 'ol/View'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport VectorLayer from 'ol/layer/Vector'\r\nimport VectorSource from 'ol/source/Vector'\r\nimport XYZ from 'ol/source/XYZ'\r\nimport GeoJSON from 'ol/format/GeoJSON'\r\nimport { Style, Stroke, Fill, Text } from 'ol/style'\r\nimport Select from 'ol/interaction/Select'\r\nimport styled from 'styled-components'\r\n\r\nimport dc2003 from '../data/DCCA_2003'\r\nimport dc2007 from '../data/DCCA_2007'\r\nimport dc2011 from '../data/DCCA_2011'\r\nimport dc2015 from '../data/DCCA_2015'\r\nimport dc2019 from '../data/DCCA_2019'\r\n\r\nconst MapContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst regionStyle = new Style({\r\n  fill: new Fill({\r\n    color: 'rgba(255, 255, 255, 0.2)',\r\n  }),\r\n  stroke: new Stroke({\r\n    color: '#319FD3',\r\n    width: 1,\r\n  }),\r\n  text: new Text({\r\n    font: '16px Calibri,sans-serif',\r\n    fill: new Fill({\r\n      color: '#000',\r\n    }),\r\n    stroke: new Stroke({\r\n      color: '#fff',\r\n      width: 2,\r\n    }),\r\n  }),\r\n})\r\n\r\nconst highlightStyle = new Style({\r\n  stroke: new Stroke({\r\n    color: '#f00',\r\n    width: 1,\r\n  }),\r\n  fill: new Fill({\r\n    color: 'rgba(255,0,0,0.1)',\r\n  }),\r\n  text: new Text({\r\n    font: '16px Calibri,sans-serif',\r\n    fill: new Fill({\r\n      color: '#000',\r\n    }),\r\n    stroke: new Stroke({\r\n      color: '#f00',\r\n      width: 2,\r\n    }),\r\n  }),\r\n})\r\n\r\nclass OLMap extends Component {\r\n  featureOverlay\r\n  highlightedFeature\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { year, code } = this.props\r\n    const dc = [dc2003, dc2007, dc2011, dc2015, dc2019].find(\r\n      d => d.name === `DCCA_${year}`\r\n    )\r\n    let isDCDataExist = dc ? true : false\r\n    let featuresLayer\r\n\r\n    if (isDCDataExist) {\r\n      this.featureSource = new VectorSource({\r\n        features: new GeoJSON().readFeatures(dc),\r\n      })\r\n\r\n      featuresLayer = new VectorLayer({\r\n        source: this.featureSource,\r\n        style: feature => {\r\n          regionStyle.getText().setText(feature.getProperties().CACODE)\r\n          return regionStyle\r\n        },\r\n      })\r\n    }\r\n\r\n    // create map object with feature layer\r\n    const layers = [\r\n      //default OSM layer\r\n      new TileLayer({\r\n        source: new XYZ({\r\n          url:\r\n            'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\r\n        }),\r\n      }),\r\n    ]\r\n\r\n    if (isDCDataExist) {\r\n      layers.push(featuresLayer)\r\n    }\r\n\r\n    const map = new Map({\r\n      target: this.refs.mapContainer,\r\n      layers,\r\n      view: new View({\r\n        projection: 'EPSG:4326',\r\n        center: [114.2029, 22.3844],\r\n        zoom: 13,\r\n      }),\r\n    })\r\n\r\n    this.featureOverlay = new VectorLayer({\r\n      source: new VectorSource(),\r\n      map: map,\r\n      style: function(feature) {\r\n        highlightStyle.getText().setText(feature.getProperties().CACODE)\r\n        return highlightStyle\r\n      },\r\n    })\r\n\r\n    if (isDCDataExist) {\r\n      // Fit to feature\r\n      const features = this.featureSource.getFeatures()\r\n      for (let i = 0; i < features.length; i++) {\r\n        if (features[i].getProperties().CACODE === code) {\r\n          const extent = features[i].getGeometry().getExtent()\r\n          map.getView().fit(extent, {\r\n            size: map.getSize(),\r\n            padding: [10, 10, 10, 10],\r\n          })\r\n\r\n          this.highlightFeature(features[i])\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      map,\r\n      view: map.getView(),\r\n      featuresLayer: isDCDataExist ? featuresLayer : null,\r\n    })\r\n\r\n    const select = new Select()\r\n\r\n    if (select !== null) {\r\n      map.addInteraction(select)\r\n      select.on('select', this.handleMapClick)\r\n    }\r\n  }\r\n\r\n  highlightFeature(feature) {\r\n    if (this.highlightedFeature) {\r\n      this.featureOverlay.getSource().removeFeature(this.highlightedFeature)\r\n    }\r\n\r\n    this.featureOverlay.getSource().addFeature(feature)\r\n    this.highlightedFeature = feature\r\n  }\r\n\r\n  handleMapClick = e => {\r\n    const { year, changeDistrict } = this.props\r\n    const selectedFeature = e.target.getFeatures().item(0)\r\n\r\n    if (selectedFeature) {\r\n      this.highlightFeature(selectedFeature)\r\n      changeDistrict(year, selectedFeature.get('CACODE'))\r\n      this.state.map.getView().fit(selectedFeature.getGeometry().getExtent(), {\r\n        duration: 200,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <MapContainer ref=\"mapContainer\"> </MapContainer>\r\n  }\r\n}\r\n\r\nexport default OLMap\r\n","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Box from '@material-ui/core/Box'\r\nimport PropTypes from 'prop-types'\r\nimport { bps } from 'utils/responsive'\r\n\r\nconst Container = styled(Paper)`\r\n  && {\r\n    width: 400px;\r\n    height: 400px;\r\n    background-color: #f6f6f6;\r\n    padding: 0;\r\n\r\n    ${bps.down('md')} {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nconst InnerContainer = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: baseline;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst YearText = styled(Typography)`\r\n  && {\r\n    font-family: Avenir;\r\n    font-size: 30px;\r\n    font-weight: 900;\r\n    color: #333333;\r\n  }\r\n`\r\n\r\nconst RegionText = styled(Typography)`\r\n  && {\r\n    width: 100%;\r\n    font-family: PingFangTC-Medium;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    color: #ffb700;\r\n  }\r\n`\r\n\r\nconst CodeText = styled(Typography)`\r\n  && {\r\n    margin-left: 10px;\r\n    font-family: PingFangTC-Light;\r\n    font-size: 40px;\r\n    font-weight: 300;\r\n    color: #9b9b9b;\r\n  }\r\n`\r\n\r\nconst StyledDivier = styled(Divider)`\r\n  && {\r\n    margin-top: 40px;\r\n    background-color: #cecece;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst SeperatedRow = styled(Box)`\r\n  && {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nfunction getCouncillor(candidates) {\r\n  const councillor = {\r\n    name: '',\r\n    politicalAffiliation: '',\r\n  }\r\n\r\n  const electedCandidate = candidates.find(candidate => candidate.is_won)\r\n  if (electedCandidate) {\r\n    councillor.name =\r\n      electedCandidate.person.name_zh || electedCandidate.person.name_en\r\n    if (electedCandidate.person.political_affiliations.length) {\r\n      const political_affiliation =\r\n        electedCandidate.person.political_affiliations[0].political_affiliation\r\n      councillor.political_affiliation = political_affiliation.name_zh\r\n    }\r\n  }\r\n\r\n  return councillor\r\n}\r\n\r\nclass DistrictCard extends Component {\r\n  static propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    code: PropTypes.string.isRequired,\r\n    name_zh: PropTypes.string.isRequired,\r\n    name_en: PropTypes.string.isRequired,\r\n    onPrevElection: PropTypes.func.isRequired,\r\n    onNextElection: PropTypes.func.isRequired,\r\n    candidates: PropTypes.array.isRequired,\r\n  }\r\n\r\n  renderPrevElectionButton(year) {\r\n    return year > 1999 ? (\r\n      <IconButton aria-label=\"arrow_back\" onClick={this.props.onPrevElection}>\r\n        <ArrowBackIcon />\r\n      </IconButton>\r\n    ) : (\r\n      // if there is no next button, show a 48x48 empty box to align the 2 elements on the right\r\n      <div style={{ width: '48px', height: '48px' }}></div>\r\n    )\r\n  }\r\n\r\n  renderNextElectionButton(year) {\r\n    const nextElectionYear = year + 4\r\n    const currentYear = new Date().getFullYear()\r\n    return nextElectionYear <= currentYear ? (\r\n      <IconButton\r\n        aria-label=\"arrow_forward\"\r\n        onClick={this.props.onNextElection}\r\n      >\r\n        <ArrowForwardIcon />\r\n      </IconButton>\r\n    ) : (\r\n      // if there is no next button, show a 48x48 empty box to align the 2 elements on the left\r\n      <div style={{ width: '48px', height: '48px' }}></div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { name_zh, year, code, candidates } = this.props\r\n    const councillor = getCouncillor(candidates)\r\n    return (\r\n      <Container>\r\n        <InnerContainer border={0} color=\"primary.minor\">\r\n          <SeperatedRow>\r\n            {this.renderPrevElectionButton(year)}\r\n            <YearText variant=\"button\" gutterBottom>\r\n              {year}\r\n            </YearText>\r\n            {this.renderNextElectionButton(year)}\r\n          </SeperatedRow>\r\n          <RegionText>--區</RegionText>\r\n          <Typography variant=\"h3\">{name_zh}</Typography>\r\n          <CodeText>{code}</CodeText>\r\n          <StyledDivier />\r\n          <SeperatedRow>\r\n            <Typography variant=\"h6\">區議員</Typography>\r\n            <Typography>{councillor.name}</Typography>\r\n          </SeperatedRow>\r\n          <SeperatedRow>\r\n            <Typography variant=\"h6\">政治聯繫</Typography>\r\n            <Typography>{councillor.political_affiliation}</Typography>\r\n          </SeperatedRow>\r\n          <SeperatedRow>\r\n            <Typography variant=\"h6\">投票站</Typography>\r\n            <Typography variant=\"subtitle2\">-</Typography>\r\n          </SeperatedRow>\r\n        </InnerContainer>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DistrictCard\r\n","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Box from '@material-ui/core/Box'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = styled.div`\r\n   {\r\n    width: 100%;\r\n    height: 220px;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nclass MainAreas extends Component {\r\n  static propTypes = {\r\n    areas: PropTypes.array.isRequired,\r\n  }\r\n\r\n  render() {\r\n    const { areas } = this.props\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          主要屋邨 / 地區\r\n        </Typography>\r\n        <Box display=\"flex\" flexWrap=\"wrap\" alignContent=\"flex-start\">\r\n          {areas.map((area, index) => (\r\n            <Box mr={1} key={index}>\r\n              {`${Object.keys(area)[0]}. ${area[Object.keys(area)[0]]}`}\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainAreas\r\n","import React from 'react'\r\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst BorderLinearProgress = withStyles({\r\n  root: {\r\n    height: 20,\r\n    width: 100,\r\n    backgroundColor: props => lighten(props.bgColor, 0.5),\r\n  },\r\n  bar: {\r\n    borderRadius: 20,\r\n    backgroundColor: props => props.bgColor,\r\n  },\r\n})(LinearProgress)\r\n\r\nexport default function CustomizedProgressBars(props) {\r\n  const classes = useStyles()\r\n  return (\r\n    <React.Fragment>\r\n      <BorderLinearProgress\r\n        className={classes.margin}\r\n        variant=\"determinate\"\r\n        color=\"secondary\"\r\n        value={props.value}\r\n        bgColor={props.color}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport styled, { css } from 'styled-components'\r\nimport Box from '@material-ui/core/Box'\r\nimport PropTypes from 'prop-types'\r\nimport CustomizedProgressBars from '../../components/BorderLinearProgress'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { bps } from 'utils/responsive'\r\nimport { getCamp, getPoliticalAffiliation } from 'helpers/candidate'\r\n\r\nconst fontBoldStyle = css`\r\n  font-family: 'PingFangTC-Medium';\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n`\r\n\r\nconst fontNormalStyle = css`\r\n  font-family: 'PingFangTC';\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n`\r\n\r\nconst OvalButton = styled.div`\r\n  width: 95px;\r\n  height: 95px;\r\n  background: url('/static/images/electedIcon.png');\r\n`\r\n\r\nconst Container = styled.div`\r\n   {\r\n    padding: 0px 15px 100px 25px;\r\n  }\r\n`\r\n\r\nconst RowsContainer = styled.div`\r\n   {\r\n    margin-top: 30px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.2);\r\n    background-color: #ffffff;\r\n    ${bps.down('sm')} {\r\n      margin-left: 10px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`\r\n\r\nconst FlexRowContainer = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-content: flex-start;\r\n    width: 1440px;\r\n    margin: auto;\r\n    cursor: pointer;\r\n    ${bps.down('sm')} {\r\n      width: 1440px;\r\n      margin: auto;\r\n    }\r\n  }\r\n`\r\n\r\nconst FlexColumn = styled(Box)`\r\n  && {\r\n    height: 149px;\r\n    align-items: center;\r\n    display: flex;\r\n    padding-left: 40px;\r\n    ${bps.down('sm')} {\r\n      height: 80px;\r\n    }\r\n  }\r\n`\r\n\r\nconst AvatarColumn = styled(FlexColumn)`\r\n  && {\r\n    width: 100px;\r\n    ${bps.down('sm')} {\r\n      width: 100%;\r\n      height: 149px;\r\n    }\r\n  }\r\n`\r\n\r\nconst NameColumn = styled(FlexColumn)`\r\n  && {\r\n    width: 200px;\r\n    ${bps.down('sm')} {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nconst PoliticalColumn = styled(FlexColumn)`\r\n  && {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    width: 180px;\r\n    ${bps.down('sm')} {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledDivier = styled(Divider)`\r\n  && {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    ${bps.down('sm')} {\r\n      margin-top: 30px;\r\n    }\r\n  }\r\n`\r\nconst CandidateListTitle = styled.div`\r\n   {\r\n    ${fontBoldStyle}\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n    color: #333333;\r\n  }\r\n`\r\n\r\nconst CandidateName = styled.div`\r\n   {\r\n    ${fontBoldStyle}\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    color: #333333;\r\n  }\r\n`\r\n\r\nconst BlueVoteContainer = styled.div`\r\n   {\r\n    ${fontBoldStyle}\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    color: #306ece;\r\n  }\r\n`\r\n\r\nconst RedVoteContainer = styled.div`\r\n   {\r\n    ${fontBoldStyle}\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    color: #f6416e;\r\n  }\r\n`\r\n\r\nconst ContentHeader = styled.div`\r\n   {\r\n    ${fontBoldStyle}\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #4a4a4a;\r\n  }\r\n`\r\n\r\nconst Content = styled.div`\r\n   {\r\n    ${fontNormalStyle}\r\n    font-size: 18px;\r\n    color: #4a4a4a;\r\n  }\r\n`\r\n\r\nclass CandidateList extends Component {\r\n  static propTypes = {\r\n    candidates: PropTypes.array.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    code: PropTypes.string.isRequired,\r\n  }\r\n\r\n  // todo: use ENV_VAR\r\n  homeUrl = 'https://cswbrian.github.io/district-councils-dashboard/'\r\n\r\n  render() {\r\n    const { candidates, year, code } = this.props\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <CandidateListTitle>議員候選人</CandidateListTitle>\r\n        <RowsContainer>\r\n          {candidates\r\n            .sort((a, b) => a.candidate_number - b.candidate_number)\r\n            .map((candidate, index) => (\r\n              <>\r\n                {index > 0 ? <StyledDivier /> : null}\r\n                <FlexRowContainer\r\n                  style={{ width: '100%' }}\r\n                  key={candidate.candidate_number}\r\n                  onClick={() => {\r\n                    this.props.handleCandidateSelected(candidate.person.id)\r\n                  }}\r\n                >\r\n                  <AvatarColumn>\r\n                    <Avatar\r\n                      src={`${this.homeUrl}/static/images/avatar/${candidate.person.id}.jpg`}\r\n                      imgProps={{\r\n                        onError: e => {\r\n                          e.target.src =\r\n                            this.homeUrl + '/static/images/avatar/default.png'\r\n                        },\r\n                      }}\r\n                      style={{\r\n                        width: '66px',\r\n                        height: '88px',\r\n                        borderRadius: 0,\r\n                      }}\r\n                    ></Avatar>\r\n                  </AvatarColumn>\r\n                  <NameColumn p={1}>\r\n                    <CandidateName>\r\n                      {candidate.candidate_number !== 0 &&\r\n                        `${candidate.candidate_number}. `}\r\n                      {candidate.person.name_zh || candidate.person.name_en}\r\n                    </CandidateName>\r\n                  </NameColumn>\r\n                  <PoliticalColumn>\r\n                    <ContentHeader>陣營</ContentHeader>\r\n                    {'\\n'}\r\n                    <Content>{getCamp(candidate)}</Content>\r\n                  </PoliticalColumn>\r\n                  <PoliticalColumn>\r\n                    <ContentHeader>政治聯繫</ContentHeader>\r\n                    {'\\n'}\r\n                    <Content>{getPoliticalAffiliation(candidate)}</Content>\r\n                  </PoliticalColumn>\r\n                  {candidate.candidate_number !== 0 && (\r\n                    <>\r\n                      <PoliticalColumn>\r\n                        {candidate.is_won && (\r\n                          <BlueVoteContainer>\r\n                            {`${candidate.votes}票 (${candidate.vote_percentage}%)`}\r\n                          </BlueVoteContainer>\r\n                        )}\r\n                        {!candidate.is_won && (\r\n                          <RedVoteContainer>\r\n                            {`${candidate.votes}票 (${candidate.vote_percentage}%)`}\r\n                          </RedVoteContainer>\r\n                        )}\r\n                      </PoliticalColumn>\r\n                      <FlexColumn>\r\n                        <ContentHeader style={{ color: '#9b9b9b' }}>\r\n                          得票率\r\n                        </ContentHeader>\r\n                        <Content>\r\n                          <CustomizedProgressBars\r\n                            value={parseFloat(candidate.vote_percentage)}\r\n                            color={candidate.is_won ? '#306ece' : '#f6416e'}\r\n                          />\r\n                        </Content>\r\n                      </FlexColumn>\r\n                    </>\r\n                  )}\r\n                  <FlexColumn>\r\n                    {candidate.is_won && <OvalButton />}\r\n                    {!candidate.is_won && (\r\n                      <div\r\n                        style={{\r\n                          width: '95px',\r\n                          height: '95px',\r\n                        }}\r\n                      ></div>\r\n                    )}\r\n                  </FlexColumn>\r\n                </FlexRowContainer>\r\n              </>\r\n            ))}\r\n        </RowsContainer>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CandidateList\r\n","export const getPoliticalAffiliation = candidate => {\r\n  let pa = '-'\r\n  try {\r\n    // assume from the graphql we already sort out the only active political_affiliations here\r\n    pa =\r\n      candidate.person.political_affiliations[0].political_affiliation.name_zh\r\n  } catch (err) {}\r\n  return pa\r\n}\r\n\r\nexport const getCamp = candidate => {\r\n  let camp = '-'\r\n  try {\r\n    // assume from the graphql we already sort out the only active political_affiliations here\r\n    camp =\r\n      candidate.person.political_affiliations[0].political_affiliation.camp\r\n        .name_zh\r\n  } catch (err) {}\r\n  return camp\r\n}\r\n","import React, { Component } from 'react'\r\nimport zingchart from 'zingchart'\r\n\r\n// MUST define modulesdir for VoterTurnoutChart\r\n// https://www.zingchart.com/docs/api/modules/standard/#modules__modules_list\r\nzingchart.MODULESDIR = 'https://cdn.zingchart.com/modules/'\r\n\r\nconst chartJSON = chartData => {\r\n  const data = { male: [], female: [] }\r\n\r\n  Object.values(chartData.data).map(value => {\r\n    data['male'].push(value['male'])\r\n    data['female'].push(value['female'])\r\n  })\r\n\r\n  const titles = Object.keys(chartData.data)\r\n\r\n  // Demo\r\n  // https://codepen.io/pen/?editors=1010\r\n\r\n  return {\r\n    type: 'bar',\r\n    stacked: true,\r\n    'stack-type': 'normal',\r\n    title: {\r\n      text: '投票人士年齡分布',\r\n      x: '40px',\r\n      y: '5px',\r\n      align: 'left',\r\n    },\r\n    subtitle: {\r\n      text: '佔全部',\r\n      x: '175px',\r\n      y: '5px',\r\n      align: 'left',\r\n      bold: false,\r\n      'font-size': '10px',\r\n      'font-color': '#7E7E7E',\r\n      'background-color': 'none',\r\n    },\r\n    plot: {\r\n      'bar-width': '25px',\r\n      'hover-state': {\r\n        visible: false,\r\n      },\r\n      animation: {\r\n        delay: 300,\r\n        sequence: 1,\r\n      },\r\n      valueBox: {\r\n        text: '%total',\r\n        rules: [\r\n          {\r\n            rule: '%stack-top == 0',\r\n            visible: 0,\r\n          },\r\n        ],\r\n        decimals: 0,\r\n      },\r\n    },\r\n    'scale-x': {\r\n      values: titles,\r\n      tick: {\r\n        visible: false,\r\n      },\r\n      guide: {\r\n        visible: false,\r\n      },\r\n      item: {\r\n        'font-color': '#8B8B8B',\r\n      },\r\n    },\r\n    'scale-y': {\r\n      short: true,\r\n      'line-color': '#7E7E7E',\r\n      tick: {\r\n        visible: false,\r\n      },\r\n      guide: {\r\n        'line-style': 'solid',\r\n      },\r\n      item: {\r\n        'font-color': '#8B8B8B',\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        values: data.male,\r\n        'background-color': '#003f5c',\r\n      },\r\n      {\r\n        values: data.female,\r\n        'background-color': '#ff6361',\r\n      },\r\n    ],\r\n    tooltip: {\r\n      visible: false,\r\n    },\r\n  }\r\n}\r\n\r\nclass VoterTurnoutChart extends Component {\r\n  componentDidMount() {\r\n    zingchart.render({\r\n      id: this.props.id,\r\n      // data: this.props.data,\r\n      data: chartJSON(this.props.data),\r\n    })\r\n  }\r\n\r\n  //Used to check the values being passed in to avoid unnecessary changes.\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    //Lazy object comparison\r\n    return !(JSON.stringify(nextProps.data) === JSON.stringify(this.props.data))\r\n  }\r\n\r\n  componentWillUpdate(nextProps) {\r\n    zingchart.exec(this.props.id, 'setdata', {\r\n      data: chartJSON(nextProps.data), //nextProps.data,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={this.props.id}\r\n        style={{\r\n          width: this.props.width || '100%',\r\n          height: this.props.height || '450px',\r\n        }}\r\n      ></div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VoterTurnoutChart\r\n","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\nimport Box from '@material-ui/core/Box'\r\nimport PropTypes from 'prop-types'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport * as _ from 'lodash'\r\nimport VoterTurnoutChart from './VoterTurnoutChart'\r\n\r\nconst QUERY_FETCH_VOTES = gql`\r\n  query($year: Int!, $code: String!) {\r\n    dc_constituencies(where: { year: { _eq: 2015 }, code: { _eq: \"A01\" } }) {\r\n      candidates_aggregate {\r\n        aggregate {\r\n          sum {\r\n            votes\r\n          }\r\n        }\r\n      }\r\n      vote_stats {\r\n        station_code\r\n        name_en\r\n        name_zh\r\n        votes {\r\n          votes\r\n          age\r\n          gender\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Container = styled.div`\r\n   {\r\n    padding: 0px 15px 100px 25px;\r\n  }\r\n`\r\n\r\nclass MainAreas extends Component {\r\n  static propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    code: PropTypes.string.isRequired,\r\n    district: PropTypes.object.isRequired,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      year,\r\n      code,\r\n      district: { expected_population },\r\n    } = this.props\r\n    return (\r\n      <Query query={QUERY_FETCH_VOTES} variables={{ year, code }}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return null\r\n          if (error) return `Error! ${error}`\r\n\r\n          const stats = data.dc_constituencies[0].vote_stats\r\n\r\n          const barVote = { data: {} }\r\n          barVote.total = stats.reduce((acc, cur) => {\r\n            const sub_total = cur.votes.reduce((acc, cur) => {\r\n              if (typeof barVote.data[cur.age] === 'undefined') {\r\n                barVote.data[cur.age] = {}\r\n              }\r\n\r\n              if (typeof barVote.data[cur.age][cur.gender] === 'undefined') {\r\n                barVote.data[cur.age][cur.gender] = 0\r\n              }\r\n\r\n              barVote.data[cur.age][cur.gender] += cur.votes\r\n\r\n              return acc + cur.votes\r\n            }, 0)\r\n            return acc + sub_total\r\n          }, 0)\r\n\r\n          return (\r\n            <Container>\r\n              <Typography variant=\"h4\">人口資料</Typography>\r\n              <Typography variant=\"h4\">{expected_population}</Typography>\r\n              <VoterTurnoutChart\r\n                id={`${year}_${code}_voter_turnout`}\r\n                data={barVote}\r\n              />\r\n            </Container>\r\n          )\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainAreas\r\n","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport OLMap from '../../components/OLMap'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport DistrictCard from 'components/district/DistrictCard'\r\nimport MainAreas from 'components/district/MainAreas'\r\nimport CandidateList from 'components/district/CandidateList'\r\nimport Metrics from 'components/district/Metrics'\r\nimport styled from 'styled-components'\r\nimport { bps } from 'utils/responsive'\r\n\r\nconst GET_DISTRICTS = gql`\r\n  query($year: Int!, $code: String!, $electionYear: date) {\r\n    dc_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\r\n      name_zh\r\n      name_en\r\n      code\r\n      deviation_percentage\r\n      expected_population\r\n      main_areas\r\n      candidates {\r\n        candidate_number\r\n        person {\r\n          id\r\n          name_zh\r\n          name_en\r\n          political_affiliations(\r\n            where: {\r\n              year_from: { _lte: $electionYear }\r\n              year_to: { _gte: $electionYear }\r\n            }\r\n          ) {\r\n            year_to\r\n            year_from\r\n            political_affiliation {\r\n              name_zh\r\n              id\r\n              camp {\r\n                name_zh\r\n              }\r\n            }\r\n          }\r\n        }\r\n        vote_percentage\r\n        votes\r\n        is_won\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst FullWidthBox = styled(Box)`\r\n  && {\r\n    padding-top: 4rem;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst LowerBackgroundContainer = styled(Box)`\r\n  && {\r\n    width: 100vw;\r\n    position: relative;\r\n    margin-left: -50vw;\r\n    left: 50%;\r\n    background-color: #fafafa;\r\n  }\r\n`\r\n\r\nconst FlexRowContainer = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-content: flex-start;\r\n    ${bps.up('md')} {\r\n      width: 100%;\r\n    }\r\n\r\n    ${bps.up('lg')} {\r\n      width: 1440px;\r\n    }\r\n    margin: auto;\r\n  }\r\n`\r\n\r\nconst DistrictCardContainer = styled(Box)`\r\n  && {\r\n    padding-left: 30px;\r\n    margin: 0px;\r\n    width: 400px;\r\n    height: 400px;\r\n\r\n    ${bps.down('md')} {\r\n      margin: 10px;\r\n      width: 100%;\r\n      padding: 0px;\r\n    }\r\n  }\r\n`\r\n\r\nclass DistrictPage extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    //  if (this.props.route.path === nextProps.route.path) return false;\r\n    return true\r\n  }\r\n\r\n  handleCandidateSelected = candidateId => {\r\n    this.props.history.push(`/profile/${candidateId}`)\r\n  }\r\n\r\n  handleChangeDistrict = (year, code) => {\r\n    if (!year || !code) return\r\n    this.props.history.push(`/district/${year}/${code}`)\r\n  }\r\n\r\n  onPrevElection() {\r\n    const {\r\n      match: {\r\n        params: { year, code },\r\n      },\r\n    } = this.props\r\n    this.props.history.push(`/district/${parseInt(year, 10) - 4}/${code}`)\r\n  }\r\n\r\n  onNextElection() {\r\n    const {\r\n      match: {\r\n        params: { year, code },\r\n      },\r\n    } = this.props\r\n    this.props.history.push(`/district/${parseInt(year, 10) + 4}/${code}`)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      match: {\r\n        params: { year, code },\r\n      },\r\n    } = this.props\r\n\r\n    // TODO: this should be the election date\r\n    const electionYear = `${year}-01-01`\r\n\r\n    return (\r\n      <>\r\n        <FlexRowContainer>\r\n          <Box\r\n            width={{ sm: '100%', md: '960px' }}\r\n            height={{ sm: '300px', md: '400px' }}\r\n          >\r\n            <OLMap\r\n              year={year}\r\n              code={code}\r\n              changeDistrict={this.handleChangeDistrict}\r\n            />\r\n          </Box>\r\n          <Query query={GET_DISTRICTS} variables={{ year, code, electionYear }}>\r\n            {({ loading, error, data }) => {\r\n              if (loading) return null\r\n              if (error) return `Error! ${error}`\r\n              const district = data.dc_constituencies[0]\r\n              return (\r\n                <>\r\n                  <DistrictCardContainer>\r\n                    <DistrictCard\r\n                      {...district}\r\n                      year={parseInt(year, 10)}\r\n                      code={code}\r\n                      onNextElection={this.onNextElection.bind(this)}\r\n                      onPrevElection={this.onPrevElection.bind(this)}\r\n                    />\r\n                  </DistrictCardContainer>\r\n                  <FullWidthBox>\r\n                    <MainAreas areas={district.main_areas || []} />\r\n                  </FullWidthBox>\r\n                  <LowerBackgroundContainer>\r\n                    <FlexRowContainer>\r\n                      <FullWidthBox>\r\n                        <Metrics\r\n                          year={year}\r\n                          code={code}\r\n                          district={district}\r\n                        ></Metrics>\r\n                      </FullWidthBox>\r\n                      <FullWidthBox>\r\n                        <CandidateList\r\n                          candidates={district.candidates}\r\n                          year={parseInt(year, 10)}\r\n                          code={code}\r\n                          handleCandidateSelected={this.handleCandidateSelected}\r\n                        />\r\n                      </FullWidthBox>\r\n                    </FlexRowContainer>\r\n                  </LowerBackgroundContainer>\r\n                </>\r\n              )\r\n            }}\r\n          </Query>\r\n        </FlexRowContainer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DistrictPage\r\n","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport OLMap from '../../components/OLMap'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport DistrictCard from 'components/district/DistrictCard'\r\nimport MainAreas from 'components/district/MainAreas'\r\nimport CandidateList from 'components/district/CandidateList'\r\nimport Metrics from 'components/district/Metrics'\r\nimport styled from 'styled-components'\r\nimport { bps } from 'utils/responsive'\r\n\r\nconst GET_DISTRICTS = gql`\r\n  query($year: Int!, $code: String!, $electionYear: date) {\r\n    dc_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\r\n      name_zh\r\n      name_en\r\n      code\r\n      deviation_percentage\r\n      expected_population\r\n      main_areas\r\n      candidates {\r\n        candidate_number\r\n        person {\r\n          id\r\n          name_zh\r\n          name_en\r\n          political_affiliations(\r\n            where: {\r\n              year_from: { _lte: $electionYear }\r\n              year_to: { _gte: $electionYear }\r\n            }\r\n          ) {\r\n            year_to\r\n            year_from\r\n            political_affiliation {\r\n              name_zh\r\n              id\r\n              camp {\r\n                name_zh\r\n              }\r\n            }\r\n          }\r\n        }\r\n        vote_percentage\r\n        votes\r\n        is_won\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst FullWidthBox = styled(Box)`\r\n  && {\r\n    padding-top: 4rem;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst LowerBackgroundContainer = styled(Box)`\r\n  && {\r\n    width: 100vw;\r\n    position: relative;\r\n    margin-left: -50vw;\r\n    left: 50%;\r\n    background-color: #fafafa;\r\n  }\r\n`\r\n\r\nconst FlexRowContainer = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-content: flex-start;\r\n    ${bps.up('md')} {\r\n      width: 100%;\r\n    }\r\n\r\n    ${bps.up('lg')} {\r\n      width: 1440px;\r\n    }\r\n    margin: auto;\r\n  }\r\n`\r\n\r\nconst DistrictCardContainer = styled(Box)`\r\n  && {\r\n    padding-left: 30px;\r\n    margin: 0px;\r\n    width: 400px;\r\n    height: 400px;\r\n\r\n    ${bps.down('md')} {\r\n      margin: 10px;\r\n      width: 100%;\r\n      padding: 0px;\r\n    }\r\n  }\r\n`\r\n\r\nclass BattleGroundPage extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    //  if (this.props.route.path === nextProps.route.path) return false;\r\n    return true\r\n  }\r\n\r\n  handleCandidateSelected = candidateId => {\r\n    this.props.history.push(`/profile/${candidateId}`)\r\n  }\r\n\r\n  handleChangeDistrict = (year, code) => {\r\n    if (!year || !code) return\r\n    this.props.history.push(`/district/${year}/${code}`)\r\n  }\r\n\r\n  onPrevElection() {\r\n    const {\r\n      match: {\r\n        params: { year, code },\r\n      },\r\n    } = this.props\r\n    this.props.history.push(`/district/${parseInt(year, 10) - 4}/${code}`)\r\n  }\r\n\r\n  onNextElection() {\r\n    const {\r\n      match: {\r\n        params: { year, code },\r\n      },\r\n    } = this.props\r\n    this.props.history.push(`/district/${parseInt(year, 10) + 4}/${code}`)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      match: {\r\n        params: { year = 2019, code },\r\n      },\r\n    } = this.props\r\n\r\n    // TODO: this should be the election date\r\n    const electionYear = `${year}-01-01`\r\n\r\n    return (\r\n      <>\r\n        <FlexRowContainer>\r\n          <Box\r\n            width={{ sm: '100%', md: '960px' }}\r\n            height={{ sm: '300px', md: '400px' }}\r\n          >\r\n            This is the Page tailormade for 2019 District Councils Election\r\n            <OLMap\r\n              year={year}\r\n              code={code}\r\n              changeDistrict={this.handleChangeDistrict}\r\n            />\r\n          </Box>\r\n          <Query query={GET_DISTRICTS} variables={{ year, code, electionYear }}>\r\n            {({ loading, error, data }) => {\r\n              if (loading) return null\r\n              if (error) return `Error! ${error}`\r\n              const district = data.dc_constituencies[0]\r\n              return (\r\n                <>\r\n                  <DistrictCardContainer>\r\n                    <DistrictCard\r\n                      {...district}\r\n                      year={parseInt(year, 10)}\r\n                      code={code}\r\n                      onNextElection={this.onNextElection.bind(this)}\r\n                      onPrevElection={this.onPrevElection.bind(this)}\r\n                    />\r\n                  </DistrictCardContainer>\r\n                  <FullWidthBox>\r\n                    <MainAreas areas={district.main_areas || []} />\r\n                  </FullWidthBox>\r\n                  <LowerBackgroundContainer>\r\n                    <FlexRowContainer>\r\n                      <FullWidthBox>\r\n                        <Metrics\r\n                          year={year}\r\n                          code={code}\r\n                          district={district}\r\n                        ></Metrics>\r\n                      </FullWidthBox>\r\n                      <FullWidthBox>\r\n                        <CandidateList\r\n                          candidates={district.candidates}\r\n                          year={parseInt(year, 10)}\r\n                          code={code}\r\n                          handleCandidateSelected={this.handleCandidateSelected}\r\n                        />\r\n                      </FullWidthBox>\r\n                    </FlexRowContainer>\r\n                  </LowerBackgroundContainer>\r\n                </>\r\n              )\r\n            }}\r\n          </Query>\r\n        </FlexRowContainer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BattleGroundPage\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const headingFontFamily = 'PingFangTC-Medium, sans-serif'\r\nexport const bodyFontFamily = 'PT Serif, sans-serif'\r\n\r\nexport const fontFamily = [\r\n  'PingFangTC',\r\n  'Noto Sans TC',\r\n  'sans-serif',\r\n  '-apple-system',\r\n  '\"Helvetica Neue\"',\r\n  'Arial',\r\n]\r\n\r\nexport const typography = {\r\n  useNextVariants: true,\r\n  fontSize: 16,\r\n  fontFamily: fontFamily.join(','),\r\n  h1: {\r\n    fontFamily: headingFontFamily,\r\n  },\r\n  h2: {\r\n    fontFamily: headingFontFamily,\r\n    fontSize: 50,\r\n    fontWeight: 500,\r\n  },\r\n  h3: {\r\n    fontFamily: headingFontFamily,\r\n    fontSize: 40,\r\n    fontWeight: 500,\r\n  },\r\n  h4: {\r\n    fontFamily: headingFontFamily,\r\n    fontSize: 30,\r\n    fontWeight: 500,\r\n  },\r\n  h5: {\r\n    fontFamily: headingFontFamily,\r\n    fontSize: 24,\r\n    fontWeight: 500,\r\n  },\r\n  h6: {\r\n    fontFamily: headingFontFamily,\r\n    fontSize: 18,\r\n    fontWeight: 500,\r\n  },\r\n  body1: {\r\n    fontFamily: bodyFontFamily,\r\n  },\r\n}\r\n\r\nexport default createMuiTheme({\r\n  typography,\r\n  palette: {\r\n    primary: {\r\n      light: '#ffffff',\r\n      main: '#000000',\r\n      dark: '#cccccc',\r\n    },\r\n    secondary: {\r\n      light: '#2c2c2c',\r\n      main: '#000000',\r\n      dark: '#000000',\r\n    },\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    button: {\r\n      primary: '#ffd731',\r\n      secondary: '#ffd731',\r\n    },\r\n  },\r\n})\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {},\r\n})\r\n\r\nclass NotFoundPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        TODO - <a href=\"https://notfound.collaction.hk/\">404</a>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NotFoundPage)\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport NavBar from './components/NavBar'\r\nimport SearchPage from './pages/search'\r\nimport ProfilePage from './pages/profile'\r\nimport DistrictPage from './pages/district'\r\nimport BattleGroundPage from './pages/battleground'\r\nimport NotfoundPage from './pages/notfound'\r\nimport ApolloClient from 'apollo-boost'\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport theme from 'ui/theme'\r\nimport './App.css'\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://gql.opencultures.life/graphql',\r\n})\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  // Load app bar information from the theme\r\n  // https://stackoverflow.com/questions/48508449/content-beneath-fixed-appbar\r\n  toolbar: theme.mixins.toolbar,\r\n})\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <NavBar />\r\n          <main>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={SearchPage} />\r\n              <Route path=\"/profile/:id\" component={ProfilePage} />\r\n              <Route path=\"/district/2019/:code\" component={BattleGroundPage} />\r\n              <Route path=\"/district/:year/:code\" component={DistrictPage} />\r\n              <Route component={NotfoundPage} />\r\n            </Switch>\r\n          </main>\r\n        </MuiThemeProvider>\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}