{"version":3,"sources":["../node_modules/encoding/lib sync","ui/theme/index.js","layout/NavBar.js","components/PeopleSearcher.js","components/AddressSearcher.js","pages/search/index.js","utils/features.js","components/MapboxMap.js","components/InfoCard.js","pages/map/index.js","pages/profile/index.js","components/BorderLinearProgress.js","components/OLMap.js","pages/district/index.js","pages/notfound/index.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","theme","createMuiTheme","typography","useNextVariants","fontFamily","palette","primary","light","main","dark","secondary","background","default","text","console","log","NavBar","classes","this","props","react_default","a","createElement","Container","maxWidth","AppBar","position","className","headerParent","Toolbar","disableGutters","header","Typography","variant","color","title","Component","withStyles","boxShadow","backgroundColor","flexGrow","withTheme","GET_PEOPLE","gql","_templateObject","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","Object","objectWithoutProperties","TextField","assign","fullWidth","InputProps","node","input","renderSuggestion","suggestion","_ref","query","isHighlighted","MenuItem","selected","component","name_zh","name_en","getSuggestionValue","PeopleSearcher","state","single","popper","suggestions","handleSuggestionsClearRequested","_this","setState","handleChange","name","event","_ref2","newValue","defineProperty","handleSuggestionSelected","_ref3","suggestionValue","suggestionIndex","sectionIndex","method","handlePeopleSelected","onSuggestionsFetchRequested","_callee","_ref4","value","_ref6","data","regenerator_default","wrap","_context","prev","next","reason","client","variables","nameRegex","concat","sent","dc_people","stop","deburr","trim","toLowerCase","length","filter","includes","_this2","autosuggestProps","onSuggestionsClearRequested","onSuggestionSelected","class","dist_default","label","placeholder","onChange","popperNode","InputLabelProps","shrink","suggestionsList","renderSuggestionsContainer","options","Popper","anchorEl","open","Boolean","children","Paper","square","containerProps","style","width","clientWidth","React","withApollo","root","height","container","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","display","margin","padding","listStyleType","matches","match","parts","parse","map","part","index","highlight","key","String","fontWeight","IntegrationAutosuggest","handleSuggestionsFetchRequested","inputValue","inputLength","count","keep","slice","address","coordinate","onAutoSuggestClicked","nativeEvent","MouseEvent","foundAddress","addresses","fullAddress","AddressParser","LANG_ZH","error","handleAddressSelected","currentSearchingResult","records","_","record","autoSuggestDiv","onAddressFieldChanged","bind","left","right","divider","SearchPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","history","push","renderDCCA","district","dcca","Button","NavLink","to","selectedDistrict","autoCompleteList","evt","target","Grid","item","xs","paper","Input","defaultValue","aria-label","area","dccode","onClick","dname_chi","getAllFeaturesFromPoint","point","featuresArray","pt","turf","lng","lat","feature","polygonProps","i","n","features","poly","geometry","coordinates","objectSpread","properties","year","split","getBoundingBox","coords","latitude","longitude","bounds","j","xMin","xMax","yMin","yMax","MapboxMap","getMapboxFeature","current","mapLayers","find","layer","checked","queryRenderedFeatures","layers","zoomToBound","mapboxgl","LngLatBounds","LngLat","fitBounds","maxZoom","hoveredStateId","clickedStateId","_this$props","token","center","zoom","minZoom","styleID","onMapClicked","selectedDCCA","onMapPanned","onMapFeatureClicked","mapConfig","accessToken","Map","on","getStyle","forEach","addSource","type","generateId","addLayer","source","layout","visibility","paint","line-color","line-width","fill-color","fill-opacity","_this2$map$getCenter","getCenter","toFixed","getZoom","prevProps","_this3","getLayer","setLayoutProperty","lastClick","setFeatureState","newFeature","project","newFeatureId","setTimeout","top","bottom","candiNumMapping","1","2","3","4","5","6","7","8","9","10","card","pos","marginBottom","electors","cacode","yearIndex","findIndex","o","parseInt","election","Fragment","Card","CardContent","cname","ename","List","candidates","candi","ListItem","alignItems","number","ListItemAvatar","Avatar","src","imgProps","onError","ListItemText","cName","eName","vote","win","ListItemSecondaryAction","Star_default","LONG","LAT","ZOOM","STYLE_ID","MapPage","lngLat","dccaList","parseFloat","onYearBtnClicked","idx","toConsumableArray","dc2003","dc2007","dc2011","dc2015","dc2019","_this$state","_this$state$map","currentFeature","currentYear","MuiThemeProvider_default","CssBaseline","content","toolbar","components_MapboxMap","InfoCard","CACODE","AddressSearcher","searchBox","yearButton","d","button","mixins","GET_PEOPLE_PROFILE","profile_templateObject","ProfilePage","params","react_apollo_esm","loading","person","CardHeader","subheader","moment","estimated_yob","Table","TableHead","TableRow","TableCell","TableBody","elections","row","align","constituency","political_affiliation","votes","vote_percentage","useStyles","makeStyles","BorderLinearProgress","lighten","bar","borderRadius","LinearProgress","CustomizedProgressBars","OLMap","handleMapClick","changeDistrict","selectedFeature","getFeatures","getArray","getProperties","setView","featureSource","view","extent","getGeometry","getExtent","getView","fit","size","getSize","animate","duration","easing","t","Math","pow","sin","PI","VectorSource","GeoJSON","readFeatures","_this$props2","featuresLayer","VectorLayer","Style","fill","Fill","stroke","Stroke","refs","mapContainer","TileLayer","XYZ","url","View","projection","select","Select","addInteraction","_this$props3","styled","border","DistrictCard","GET_DISTRICTS","district_templateObject","DistrictPage","handleChangeDistrict","replace","_this$props$match$par","_this$props$match$par2","_this$props$match$par3","dc_constituencies","md","components_OLMap","Box","p","flexDirection","justifyContent","IconButton","onPrevElection","ArrowBack_default","gutterBottom","onNextElection","ArrowForward_default","Divider","main_areas","flexWrap","alignContent","mr","expected_population","sort","b","candidate_number","candidate","is_won","CheckCircle_default","NotFoundPage","href","ApolloClient","uri","App","layout_NavBar","react_router","exact","path","NotfoundPage","ReactDOM","render","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bd32f679.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 349;","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    fontFamily: \"'Noto Sans TC', sans-serif\"\r\n  },\r\n  palette: {\r\n    primary: {\r\n      light: '#ffffff',\r\n      main: '#000000',\r\n      dark: '#cccccc'\r\n    },\r\n    secondary: {\r\n      light: '#2c2c2c',\r\n      main: '#000000',\r\n      dark: '#000000'\r\n    },\r\n    background: {\r\n      default: '#ffffff'\r\n    },\r\n  },\r\n  text: {\r\n    primary: '#000000'\r\n  }\r\n});\r\n\r\nconsole.log(theme)\r\nexport default theme","import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Container from '@material-ui/core/Container'\r\nimport { relative } from 'path';\r\n\r\nconst styles = theme => ({\r\n  headerParent: {\r\n    boxShadow: 'none'\r\n  },\r\n  header: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: theme.palette.primary.main\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n})\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n          <Container maxWidth=\"lg\">\r\n            <AppBar position=\"relative\" className={classes.headerParent}>\r\n            <Toolbar disableGutters className={classes.header}>\r\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n              Vote for Hong Kong\r\n              </Typography>\r\n              {/* <Button component={NavLink} to=\"/\">Search</Button>\r\n              <Button component={NavLink} to=\"/map\">Map</Button> */}\r\n            </Toolbar>\r\n          </AppBar>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NavBar)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport deburr from 'lodash/deburr'\r\nimport Autosuggest from 'react-autosuggest'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Popper from '@material-ui/core/Popper'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { withApollo } from 'react-apollo'\r\nimport gql from \"graphql-tag\";\r\n\r\nconst GET_PEOPLE = gql`\r\n  query ($nameRegex: String) {\r\n    dc_people( where: {\r\n      _or: [\r\n        { name_zh: { _like: $nameRegex }},\r\n        { name_en: { _like: $nameRegex }},\r\n      ]\r\n    }, limit: 50) {\r\n      id\r\n      name_zh\r\n      name_en\r\n    }\r\n  }\r\n`\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => { }, ref, ...other } = inputProps\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node)\r\n          inputRef(node)\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  )\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {isHighlighted ?\r\n          (<span>\r\n            {suggestion.name_zh ? suggestion.name_zh : suggestion.name_en}\r\n          </span>) :\r\n          (<strong>\r\n            {suggestion.name_zh ? suggestion.name_zh : suggestion.name_en}\r\n          </strong>)\r\n        }\r\n      </div>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name_zh ? suggestion.name_zh : suggestion.name_en;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    height: 250,\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block',\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none',\r\n  }\r\n})\r\n\r\nclass PeopleSearcher extends React.Component {\r\n  state = {\r\n    single: '',\r\n    popper: '',\r\n    suggestions: []\r\n  }\r\n\r\n  getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase()\r\n    const inputLength = inputValue.length\r\n\r\n    return inputLength === 0 ? [] : this.state.suggestions.filter(suggestion => suggestion.name && suggestion.name.includes(value))\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { data } = await this.props.client.query({\r\n      query: GET_PEOPLE,\r\n      variables: {\r\n        nameRegex: '%'\r\n      }\r\n    })\r\n    this.setState({ suggestions: data.dc_people })\r\n  }\r\n\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    })\r\n  }\r\n\r\n  handleChange = name => (event, { newValue }) => {\r\n    this.setState({\r\n      [name]: newValue,\r\n    })\r\n  }\r\n\r\n  handleSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n    this.props.handlePeopleSelected(suggestion)\r\n  }\r\n\r\n  // Autosuggest will call this function every time you need to update suggestions.\r\n  // You already implemented this logic above, so just use it.\r\n  onSuggestionsFetchRequested = async ({ value, reason }) => {\r\n    if (true) {\r\n      const { data } = await this.props.client.query({\r\n        query: GET_PEOPLE,\r\n        variables: {\r\n          nameRegex: `%${value}%`\r\n        }\r\n      })\r\n      this.setState({ suggestions: data.dc_people })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.suggestions,\r\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      onSuggestionSelected: this.handleSuggestionSelected,\r\n      getSuggestionValue,\r\n      renderSuggestion,\r\n    }\r\n\r\n    return (\r\n      <div className={this.props.class}>\r\n        <Autosuggest\r\n          {...autosuggestProps}\r\n          inputProps={{\r\n            classes,\r\n            label: '揾人',\r\n            placeholder: 'Please type a candidate name',\r\n            value: this.state.popper,\r\n            onChange: this.handleChange('popper'),\r\n            inputRef: node => {\r\n              this.popperNode = node\r\n            },\r\n            InputLabelProps: {\r\n              shrink: true,\r\n            },\r\n          }}\r\n          theme={{\r\n            suggestionsList: classes.suggestionsList,\r\n            suggestion: classes.suggestion,\r\n          }}\r\n          renderSuggestionsContainer={options => (\r\n            <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\r\n              <Paper\r\n                square\r\n                {...options.containerProps}\r\n                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\r\n              >\r\n                {options.children}\r\n              </Paper>\r\n            </Popper>\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPeopleSearcher.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withApollo(withStyles(styles)(PeopleSearcher));","import React from 'react';\r\nimport PropTypes, { instanceOf } from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport * as AddressParser from 'hk-address-parser-lib';\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.label, query);\r\n  const parts = parse(suggestion.label, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map((part, index) =>\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 500 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          ),\r\n        )}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'block',\r\n    // height: 250,\r\n    flexGrow: 1,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n    padding: '10px'\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block'\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none'\r\n  },\r\n  divider: {\r\n    height: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass IntegrationAutosuggest extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : this.state.suggestions.filter(suggestion => {\r\n          const keep =\r\n            count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n          if (keep) {\r\n            count += 1;\r\n          }\r\n\r\n          return keep;\r\n        });\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    // console.log('fetched');\r\n    // this.setState({\r\n    //   suggestions: this.getSuggestions(value),\r\n    // });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleAddressSelected(address) {\r\n    const coordinate = address.coordinate();\r\n    this.props.onAutoSuggestClicked(coordinate)\r\n  }\r\n\r\n  async onAddressFieldChanged(event, { newValue }) {\r\n    const isMouseClick = event.nativeEvent instanceof MouseEvent;\r\n    if (isMouseClick) {\r\n      // This is fired when clicked on the pull down menu\r\n      this.setState({\r\n        value: newValue\r\n      })\r\n\r\n      let foundAddress = null;\r\n      try {\r\n        foundAddress = this.state.addresses.filter( address => address.fullAddress(AddressParser.Address.LANG_ZH) === newValue)[0];\r\n      } catch (error) {\r\n      }\r\n\r\n      if (foundAddress) {\r\n        this.handleAddressSelected(foundAddress);\r\n      }\r\n    } else {\r\n      // this is fired when typing in the search field\r\n      this.setState({\r\n        currentSearchingResult: newValue,\r\n        value: newValue\r\n      })\r\n      const records = await AddressParser.parse(newValue);\r\n\r\n      // Ignore the search if it is not the latest result\r\n      if (this.state.currentSearchingResult === newValue) {\r\n        this.setState({\r\n          suggestions: records.filter((_, index) => index < 10).map(record => ({ label: record.fullAddress(AddressParser.Address.LANG_ZH) })),\r\n          addresses: records,\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.suggestions,\r\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      getSuggestionValue,\r\n      renderSuggestion,\r\n    };\r\n\r\n    return (\r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.autoSuggestDiv}>\r\n          <Autosuggest\r\n            {...autosuggestProps}\r\n            inputProps={{\r\n              classes,\r\n              label: 'Label',\r\n              placeholder: 'With Popper',\r\n              value: this.state.value,\r\n              onChange: this.onAddressFieldChanged.bind(this),\r\n              inputRef: node => {\r\n                this.popperNode = node;\r\n              },\r\n              InputLabelProps: {\r\n                shrink: true,\r\n              },\r\n            }}\r\n            theme={{\r\n              suggestionsList: classes.suggestionsList,\r\n              suggestion: classes.suggestion,\r\n            }}\r\n            renderSuggestionsContainer={options => (\r\n              <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\r\n                <Paper\r\n                  square\r\n                  {...options.containerProps}\r\n                  style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\r\n                >\r\n                  {options.children}\r\n                </Paper>\r\n              </Popper>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIntegrationAutosuggest.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationAutosuggest);","import React, { Component } from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Input from '@material-ui/core/Input'\r\nimport PeopleSearcher from '../../components/PeopleSearcher'\r\nimport AddressSearcher from '../../components/AddressSearcher'\r\nimport area from '../../data/area'\r\nimport district from '../../data/district'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport * as AddressParser from 'hk-address-parser-lib'\r\n\r\nconst styles = theme => ({\r\n})\r\n\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDistrict: null,\r\n      autoCompleteList: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n  }\r\n\r\n  async onAddressFieldChanged(evt) {\r\n    const { value } = evt.target;\r\n    const records = await AddressParser.parse(value);\r\n    this.setState({\r\n      autoCompleteList: records,\r\n    })\r\n  }\r\n\r\n  handlePeopleSelected = result => {\r\n    this.props.history.push(`profile/${result.id}`)\r\n  }\r\n\r\n  renderDCCA = code => {\r\n    if (!code) return null\r\n    return <div>\r\n      {Object.keys(district['2019'][code]).map(dcca => {\r\n        return (\r\n          <Button component={NavLink} to={`/district/2019/${dcca}`} key={district['2019'][code][dcca].code} color=\"secondary\">{district['2019'][code][dcca].name}</Button>\r\n        )\r\n      })}\r\n    </div>\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { autoCompleteList } = this.state\r\n\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            {/* TODO: Change the following input to AddressSearcher component, similar to PeopleSearcher */}\r\n            <Input\r\n              defaultValue=\"Search Address\"\r\n              inputProps={{\r\n                'aria-label': 'Description',\r\n              }}\r\n              onChange={this.onAddressFieldChanged.bind(this)}\r\n            />\r\n            {autoCompleteList.map((address, index) => (<div key={index}><p>{address.fullAddress()}</p></div>))}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            {/* TODO: Build a people.json for the autosuggest and profile */}\r\n            {/* <PeopleSearcher\r\n              handlePeopleSelected={this.handlePeopleSelected}\r\n            /> */}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            {\r\n              area.map(a => <Button key={a.dccode} color=\"primary\" onClick={() => this.setState({ selectedDistrict: a.dccode })}>{a.dname_chi}</Button>)\r\n            }\r\n            {this.renderDCCA(this.state.selectedDistrict)}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n        \r\n\r\n      \r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchPage)\r\n","import * as turf from '@turf/turf'\r\n\r\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\r\n    const pt = turf.point([point.lng, point.lat])\r\n    const result = featuresArray.map(feature => {\r\n        let polygonProps = {}\r\n        for (let i= 0, n = feature.features.length; i < n; i++) {\r\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\r\n            if (turf.booleanPointInPolygon(pt, poly)) {\r\n                polygonProps = {...feature.features[i].properties}\r\n                break\r\n            }\r\n        }\r\n        return {\r\n            year: feature.name.split('_')[1],\r\n            ...polygonProps\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n\r\nexport const getBoundingBox = data => {\r\n    var bounds = {}, coords, point, latitude, longitude;\r\n  \r\n    // We want to use the “features” key of the FeatureCollection (see above)\r\n    // data = data.features;\r\n  \r\n    // Loop through each “feature”\r\n    // for (var i = 0; i < data.length; i++) {\r\n  \r\n      // Pull out the coordinates of this feature\r\n      coords = data.geometry.coordinates[0];\r\n  \r\n      // For each individual coordinate in this feature's coordinates…\r\n      for (var j = 0; j < coords.length; j++) {\r\n  \r\n        longitude = coords[j][0];\r\n        latitude = coords[j][1];\r\n  \r\n        // Update the bounds recursively by comparing the current\r\n        // xMin/xMax and yMin/yMax with the coordinate\r\n        // we're currently checking\r\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\r\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\r\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\r\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\r\n      }\r\n  \r\n    // }\r\n  \r\n    // Returns an object that contains the bounds of this GeoJSON\r\n    // data. The keys of this object describe a box formed by the\r\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\r\n    return bounds;\r\n  }","import React, { Component } from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport { getBoundingBox } from '../utils/features'\r\n\r\nclass MapboxMap extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hoveredStateId: null,\r\n            clickedStateId: null\r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n        // set map properties\r\n        const { token, center, zoom, minZoom, styleID, mapLayers, selectedDCCA, onMapClicked, onMapFeatureClicked, onMapPanned, color } = this.props\r\n\r\n        const mapConfig = {\r\n            container: 'map',\r\n            style: `mapbox://styles/${styleID}`,\r\n            center: center,\r\n            zoom: zoom,\r\n            minZoom: minZoom\r\n        }\r\n\r\n        mapboxgl.accessToken = token\r\n        this.map = new mapboxgl.Map(mapConfig)\r\n\r\n        this.map.on('load', () => {\r\n            // Get the map style and set it in the state tree\r\n            const style = this.map.getStyle()\r\n            //   this.props.setStyle(style)\r\n\r\n            mapLayers.forEach((layer, index) => {\r\n                this.map.addSource(layer.name, {\r\n                    type: 'geojson',\r\n                    data: layer,\r\n                    generateId: true\r\n                    // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-lines`,\r\n                    type: 'line',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        'line-color': color[index],\r\n                        'line-width': 2\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-hovers`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": \"#000\",\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n                            0.1,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-highlight`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": color[index],\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"highlight\"], false],\r\n                            0.3,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                // When the user moves their mouse over the state-fill layer, we'll update the\r\n                // feature state for the feature under the mouse.\r\n                // this.map.on(\"mousemove\", `${layer.name}-hovers`, function (e) {\r\n                    // if (e.features.length > 0) {\r\n                        // if (this.state.hoveredStateId !== null) {\r\n                        //     this.setFeatureState({ source: layer.name, id: this.state.hoveredStateId }, { hover: false })\r\n                        // }\r\n                        // let currentFeatureId = e.features[0].id\r\n                        // this.setFeatureState({ source: layer.name, id: currentFeatureId }, { hover: true })\r\n                        // this.setState({hoveredStateId: currentFeatureId})\r\n                    // }\r\n                // })\r\n\r\n                // When the mouse leaves the state-fill layer, update the feature state of the\r\n                // previously hovered feature.\r\n                // this.map.on(\"mouseleave\", `${layer.name}-hovers`, function () {\r\n                //     if (hoveredStateId) {\r\n                //         this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\r\n                //     }\r\n                //     hoveredStateId = null\r\n                // })\r\n\r\n                // this.map.on(\"click\", `${layer.name}-highlight`, function (e) {\r\n                // \r\n                    // if (clickedStateId) {\r\n                    //     this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: false })\r\n                    //     clickedStateId = null\r\n                    // }\r\n                    // clickedStateId = e.features[0].id\r\n                    // this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: true })\r\n                    // let bounds = getBoundingBox(e.features[0])\r\n                    // bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n                    // this.fitBounds(bounds, {\r\n                    //     padding: 50,\r\n                    //     maxZoom: 13.5\r\n                    // })\r\n                // })\r\n\r\n            })\r\n\r\n            this.map.on('click', e => {\r\n                this.getMapboxFeature(e.point)\r\n                onMapClicked(e)\r\n            })\r\n\r\n            this.map.on('move', () => {\r\n                const { lng, lat } = this.map.getCenter()\r\n                onMapPanned(lng.toFixed(4), lat.toFixed(4), this.map.getZoom().toFixed(2))\r\n            })\r\n\r\n\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    getMapboxFeature = (coordinate) => {\r\n        const current = this.props.mapLayers.find(layer => layer.checked)\r\n        const features = this.map.queryRenderedFeatures(\r\n            coordinate, { layers: [`${current.name}-highlight`] }\r\n          );\r\n          return features\r\n    }\r\n\r\n    zoomToBound = (feature) => {\r\n        let bounds = getBoundingBox(feature)\r\n        bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n\r\n        this.map.fitBounds(bounds, {\r\n            padding: 50,\r\n            maxZoom: 13.5\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.mapLayers !== prevProps.mapLayers) {\r\n\r\n            const status = this.props.mapLayers.map(layer => {\r\n                return {\r\n                    name: layer.name,\r\n                    visibility: layer.checked ? 'visible' : 'none'\r\n                }\r\n            })\r\n\r\n            status.forEach(layer => {\r\n                if (this.map.getLayer(`${layer.name}-lines`)) {\r\n                    this.map.setLayoutProperty(`${layer.name}-lines`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-hovers`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-highlight`, 'visibility', layer.visibility)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (this.props.lastClick !== prevProps.lastClick) {\r\n                if (this.state.clickedStateId) {\r\n                    this.map.setFeatureState({ source: 'DCCA_2015', id: this.state.clickedStateId }, { highlight: false })\r\n                }\r\n\r\n                if (this.props.lastClick) {\r\n                    const newFeature = this.getMapboxFeature(this.map.project(this.props.lastClick))[0]\r\n                    const newFeatureId = newFeature.id\r\n                    this.zoomToBound(newFeature)\r\n                    \r\n                    setTimeout(() => {\r\n                        this.map.setFeatureState({ source: 'DCCA_2015', id: newFeatureId }, { highlight: true }) \r\n                    }, 1000)\r\n                    \r\n\r\n                    this.setState({\r\n                        clickedStateId: newFeatureId\r\n                    })\r\n                }\r\n                \r\n                \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='map'\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n            ></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapboxMap","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = {\r\n    card: {    \r\n        width: '400px',\r\n        position: 'absolute',\r\n        top: '20%',\r\n        left: '100px'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n}\r\n\r\n\r\nconst candiNumMapping = {\r\n        1: '①',\r\n        2: '②',\r\n        3: '③',\r\n        4: '④',\r\n        5: '⑤',\r\n        6: '⑥',\r\n        7: '⑦',\r\n        8: '⑧',\r\n        9: '⑨',\r\n        10: '⑩'\r\n}\r\n\r\nconst SimpleCard = props => {\r\n    const { classes, electors, year, cacode } = props\r\n\r\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\r\n\r\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {result && <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" >\r\n                        {year}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        {result.cacode} {result.cname}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {result.ename}\r\n                    </Typography>\r\n                    <List>\r\n                    {\r\n                        result.candidates.map(candi => <ListItem alignItems=\"flex-start\" key={`${candi.number}`}>\r\n                            <ListItemAvatar>\r\n                                <Avatar \r\n                                src={`/static/images/avatar/${year}/${result.cacode}_${year === 2011 ? '0' : ''}${candi.number}.jpg`}\r\n                                imgProps={{ onError: (e) => { e.target.src = '/static/images/avatar/default.png'; } }} >\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={`${candi.number > 0 ? candiNumMapping[candi.number] : ''} ${candi.cName} ${candi.eName}`}\r\n                                secondary={candi.vote > 0 ? `${candi.vote}票` : '自動當選'}\r\n                            />\r\n                            {candi.win &&\r\n                            <ListItemSecondaryAction>\r\n                                <StarIcon color=\"secondary\" />\r\n                            </ListItemSecondaryAction>}\r\n                        </ListItem>)\r\n\r\n                    }\r\n                </List>\r\n                </CardContent>\r\n            </Card>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(SimpleCard)","import React, { Component } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport NavBar from '../../layout/NavBar'\r\nimport MapboxMap from '../../components/MapboxMap'\r\nimport InfoCard from '../../components/InfoCard'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport { getAllFeaturesFromPoint } from '../../utils/features'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddressSearcher from '../../components/AddressSearcher'\r\n\r\nimport dc2003 from '../../data/DCCA_2003'\r\nimport dc2007 from '../../data/DCCA_2007'\r\nimport dc2011 from '../../data/DCCA_2011'\r\nimport dc2015 from '../../data/DCCA_2015'\r\nimport dc2019 from '../../data/DCCA_2019'\r\nimport electors from '../../data/electors'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  yearButton: {\r\n    position: 'absolute',\r\n    width: 100,\r\n    top: '20%'\r\n  },\r\n  searchBox: {\r\n    position: 'absolute',\r\n    zIndex: 100,\r\n    top: '50%'\r\n  }\r\n})\r\n\r\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA'\r\nconst LONG = 114.2029\r\nconst LAT = 22.3844\r\nconst ZOOM = 11\r\nconst STYLE_ID = 'mapbox/streets-v9'\r\nconst MIN_ZOOM = 10\r\n\r\nconst color = [\r\n  '#6e40e6',\r\n  '#f49600',\r\n  '#ff5d55',\r\n  '#005ecd',\r\n  '#ad0000'\r\n]\r\n\r\nclass MapPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      dccaList: [dc2003, dc2007, dc2011, dc2015, dc2019],\r\n      open: false,\r\n      map: {\r\n        center: [LONG, LAT],\r\n        zoom: ZOOM,\r\n        styleID: STYLE_ID,\r\n        lastClick: null\r\n      },\r\n      selectedDCCA: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onYearBtnClicked('DCCA_2011')\r\n    this.onYearBtnClicked('DCCA_2015')\r\n  }\r\n\r\n  onMapPanned = (lng, lat, zoom) => {\r\n    this.setState({\r\n      map: {\r\n        center: [lng, lat],\r\n        zoom,\r\n      }\r\n    })\r\n  }\r\n\r\n  onMapClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lngLat.lng, e.lngLat.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint(e.lngLat, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onMapFeatureClicked = (e) => {\r\n    this.setState({\r\n      clickedStateId: e.features[0].id\r\n    })\r\n  }\r\n\r\n  onAutoSuggestClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lng, e.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint({lat: parseFloat(e.lat), lng: parseFloat(e.lng)}, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onYearBtnClicked = (name) => {\r\n    const idx = this.state.dccaList.findIndex(dcca => dcca.name === name)\r\n    let dccaList = [...this.state.dccaList]\r\n    dccaList.forEach(dcca => {dcca.checked = false})\r\n    dccaList[idx].checked = true\r\n    this.setState({ dccaList })\r\n  }\r\n\r\n  render() {\r\n    const { map: {center, zoom, lastClick}, selectedDCCA, dccaList } = this.state\r\n    const { classes, map } = this.props\r\n\r\n    const currentFeature = dccaList.length > 0 ? dccaList.find(dcca => dcca.checked) : null\r\n    const currentYear = currentFeature ? currentFeature.name.split('_')[1] : null\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {dccaList &&\r\n            <MapboxMap\r\n              mapLayers={dccaList}\r\n              token={TOKEN}\r\n              center={center}\r\n              zoom={zoom}\r\n              styleID={STYLE_ID}\r\n              minZoom={MIN_ZOOM}\r\n              color={color}\r\n              onMapClicked={this.onMapClicked}\r\n              onMapFeatureClicked={this.onMapFeatureClicked}\r\n              onMapPanned={this.onMapPanned}\r\n              clickedStateId={this.state.clickedStateId}\r\n              selectedDCCA={selectedDCCA}\r\n              lastClick={lastClick}\r\n            />}\r\n            <InfoCard \r\n            electors={electors}\r\n            year={currentYear}\r\n            cacode={currentYear && selectedDCCA && selectedDCCA.find(feature => feature.year === currentYear).CACODE}\r\n            />\r\n            \r\n            <AddressSearcher \r\n            className={classes.searchBox} \r\n            onAutoSuggestClicked={this.onAutoSuggestClicked}\r\n            />\r\n            <div className={classes.yearButton}>\r\n              <List>\r\n                {dccaList.map((dcca, index) => <ListItem key={`${dcca.name}`}>\r\n                  <Button\r\n                    onClick={() => this.onYearBtnClicked(dcca.name)}\r\n                    key={dcca.name} variant=\"contained\"\r\n                    style={{\r\n                      backgroundColor: dccaList.findIndex(d => d.name === dcca.name && d.checked === true) > -1 ? color[index] : '#e0e0e0'\r\n                    }}\r\n                    className={classes.button}>\r\n                    {dcca.name.split('_')[1]}\r\n                  </Button>\r\n                </ListItem>)}\r\n              </List>\r\n            </div>\r\n        </main>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(MapPage)","import React, { Component } from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport moment from 'moment'\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\n\r\nconst GET_PEOPLE_PROFILE = gql`\r\nquery ($id: uuid!) {\r\n  dc_people( \r\n    where: { \r\n      id: { _eq: $id}\r\n    }\r\n    order_by: {elections_aggregate: {\r\n      max: { year: asc }\r\n    }}\r\n  ) {\r\n    name_en\r\n    name_zh\r\n    estimated_yob\r\n    gender\r\n    elections {\r\n      cacode\r\n      year\r\n      votes\r\n      vote_percentage\r\n      constituency {\r\n        name_zh\r\n        expected_population\r\n        deviation_percentage\r\n      }\r\n      political_affiliation {\r\n        name_zh\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    const { match: { params: { id } } } = this.props\r\n    return (\r\n      <Query query={GET_PEOPLE_PROFILE} variables={{ id }}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return null;\r\n          if (error) return `Error! ${error}`;\r\n          const person = data.dc_people[0];\r\n          return (\r\n            <Paper>\r\n              <Card>\r\n                <CardHeader\r\n                  // avatar={\r\n                  //   // TODO: Add candi_number to candidate.json\r\n                  //   <Avatar\r\n                  //     src={`/static/images/avatar/2015/${showCase[showCase.length - 1].cacode}_0${showCase[showCase.length - 1].candi_number}.jpg`}\r\n                  //   >\r\n                  //   </Avatar>\r\n                  // }\r\n                  title={person.name_zh ? person.name_zh : person.name_en}\r\n                  subheader={`${moment().year() - person.estimated_yob}歲`}\r\n                />\r\n                <CardContent>\r\n                </CardContent>\r\n              </Card>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Year</TableCell>\r\n                    <TableCell>Code</TableCell>\r\n                    <TableCell>Distict</TableCell>\r\n                    <TableCell>Political Affiliation</TableCell>\r\n                    <TableCell>Votes</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {person.elections.map(row => (\r\n                    <TableRow key={row.year + row.cacode}>\r\n                      <TableCell align=\"right\">{row.year}</TableCell>\r\n                      <TableCell align=\"right\">{row.cacode}</TableCell>\r\n                      {row.constituency ?\r\n                        <TableCell align=\"right\">{row.constituency.name}</TableCell> :\r\n                        <TableCell align=\"right\">?</TableCell>\r\n                      }\r\n                      {row.political_affiliation ?\r\n                        <TableCell align=\"right\">{row.political_affiliation.name_zh}</TableCell> :\r\n                        <TableCell align=\"right\">N/A</TableCell>\r\n                      }\r\n\r\n                      <TableCell align=\"right\">{`${row.votes ? row.votes : '-'} (${row.vote_percentage ? row.vote_percentage : '-'}%)`}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          );\r\n        }}\r\n      </Query>\r\n      // TODO: UI design\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfilePage\r\n","\r\nimport React from 'react'\r\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BorderLinearProgress = withStyles({\r\n    root: {\r\n        height: 10,\r\n        backgroundColor: lighten('#ff6c5c', 0.5),\r\n    },\r\n    bar: {\r\n        borderRadius: 20,\r\n        backgroundColor: '#ff6c5c',\r\n    },\r\n})(LinearProgress)\r\n\r\nexport default function CustomizedProgressBars(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <BorderLinearProgress\r\n                className={classes.margin}\r\n                variant=\"determinate\"\r\n                color=\"secondary\"\r\n                value={props.value}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport Map from 'ol/Map'\r\nimport View from 'ol/View'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport VectorLayer from 'ol/layer/Vector'\r\nimport VectorSource from 'ol/source/Vector'\r\nimport XYZ from 'ol/source/XYZ'\r\nimport GeoJSON from 'ol/format/GeoJSON'\r\nimport { Style, Stroke, Fill } from 'ol/style'\r\nimport Select from 'ol/interaction/Select'\r\n\r\nimport dc2015 from '../data/DCCA_2015'\r\n\r\n\r\nclass OLMap extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n\r\n        this.featureSource = new VectorSource({\r\n            features: (new GeoJSON()).readFeatures(dc2015)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { year, code } = this.props\r\n\r\n        const styleFunction = feature => {\r\n            if (feature.getProperties().CACODE === code) {\r\n                return new Style({\r\n                    fill: new Fill({\r\n                        color: 'rgba(74, 144, 226, 0.5)'\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: '#3e59ef',\r\n                        width: 2\r\n                    })\r\n                })\r\n            }\r\n            return new Style({\r\n                fill: new Fill({\r\n                    color: 'rgba(74, 144, 226, 0.05)'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#3e59ef',\r\n                    width: 2\r\n                })\r\n            })\r\n        }\r\n\r\n        // getFeaturesByYearCode(year, code)\r\n\r\n        const featuresLayer = new VectorLayer({\r\n            source: this.featureSource,\r\n            style: styleFunction\r\n        })\r\n\r\n        // create map object with feature layer\r\n        const map = new Map({\r\n            target: this.refs.mapContainer,\r\n            layers: [\r\n                //default OSM layer\r\n                new TileLayer({\r\n                    source: new XYZ({\r\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}'\r\n                    })\r\n                }),\r\n                featuresLayer\r\n            ],\r\n            view: new View({\r\n                projection: 'EPSG:4326',\r\n                center: [114.2029, 22.3844],\r\n                zoom: 13,\r\n            })\r\n        })\r\n\r\n        this.setState({\r\n            map,\r\n            view: map.getView(),\r\n            featuresLayer: featuresLayer\r\n        }, () => this.setView(this.featureSource))\r\n\r\n        const select = new Select()\r\n\r\n        if (select !== null) {\r\n            map.addInteraction(select);\r\n            select.on('select', this.handleMapClick)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { year, code } = this.props\r\n        if (year !== prevProps.year) {\r\n        }\r\n\r\n        if (code !== prevProps.code) {\r\n            this.setView(this.featureSource)\r\n        }\r\n    }\r\n\r\n    handleMapClick = e => {\r\n        const { year, changeDistrict } = this.props\r\n        const selectedFeature = e.target.getFeatures().getArray()\r\n\r\n        if (selectedFeature[0]) {\r\n            changeDistrict(year, selectedFeature[0].getProperties().CACODE)\r\n        }\r\n    }\r\n\r\n    setView = featureSource => {\r\n        const { map, view } = this.state\r\n        const { code } = this.props\r\n\r\n        // Fit to feature \r\n        const features = featureSource.getFeatures()\r\n        for (let i = 0; i < features.length; i++) {\r\n            if (features[i].getProperties().CACODE === code) {\r\n                const extent = features[i].getGeometry().getExtent()\r\n                map.getView().fit(extent, {\r\n                    size: map.getSize(),\r\n                    padding: [10, 10, 10, 10]\r\n                })\r\n\r\n                view.animate({\r\n                    // center: the coordinate of the centre of the selected Feature,\r\n                    duration: 2000,\r\n                    easing: t => {\r\n                        return Math.pow(2, -10 * t) * Math.sin((t - 0.075) * (2 * Math.PI) / 0.3) + 1;\r\n                    }\r\n                })\r\n                this.setState({ map })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref=\"mapContainer\"> </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default OLMap","import React, { Component } from 'react'\r\nimport { styled } from '@material-ui/styles';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CustomizedProgressBars from '../../components/BorderLinearProgress'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport OLMap from '../../components/OLMap'\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nconst Map = styled(Paper)({\r\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n  border: 0,\r\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  color: 'white',\r\n  height: 300,\r\n  padding: '0 30px',\r\n})\r\n\r\nconst DistrictCard = styled(Paper)({\r\n  background: '#f6f6f6',\r\n  color: '#00000',\r\n  height: 300\r\n})\r\n\r\nconst GET_DISTRICTS = gql`\r\nquery ($year: Int!, $code:String!) {\r\n  dc_constituencies(where: {year: {_eq: $year}, code: {_eq: $code}}) {\r\n    name_zh\r\n    name_en\r\n    code\r\n    deviation_percentage\r\n    expected_population\r\n    main_areas\r\n    candidates {\r\n      candidate_number\r\n      person {\r\n        name_zh\r\n        name_en\r\n      }\r\n      vote_percentage\r\n      votes\r\n      is_won\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nclass DistrictPage extends Component {\r\n\r\n  handleChangeDistrict = (year, code) => {\r\n    if (!year || !code) return\r\n    this.props.history.replace(`/district/${year}/${code}`)\r\n  }\r\n\r\n  onPrevElection() {\r\n    const { match: { params: { year, code } } } = this.props\r\n    this.props.history.replace(`/district/${parseInt(year, 10) - 4}/${code}`)\r\n  }\r\n\r\n  onNextElection() {\r\n    const { match: { params: { year, code } } } = this.props\r\n    this.props.history.replace(`/district/${parseInt(year, 10) + 4}/${code}`)\r\n  }\r\n\r\n  render() {\r\n    const { match: { params: { year, code } } } = this.props\r\n    return (\r\n      <Query query={GET_DISTRICTS} variables={{ year, code }}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return null;\r\n          if (error) return `Error! ${error}`;\r\n          const district = data.dc_constituencies[0];\r\n\r\n          return (\r\n            <React.Fragment>\r\n              <Container maxWidth='lg'>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} md={8}>\r\n                    <OLMap\r\n                      year={year}\r\n                      code={code}\r\n                      changeDistrict={this.handleChangeDistrict}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={4}>\r\n                    <DistrictCard>\r\n                      <Box\r\n                        p={1}\r\n                        border={0}\r\n                        color='primary.minor'>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          alignItems='center'\r\n                          justifyContent='space-between'>\r\n                          <IconButton aria-label='arrow_back' onClick={this.onPrevElection.bind(this)}>\r\n                            <ArrowBackIcon />\r\n                          </IconButton>\r\n                          <Typography variant='button' gutterBottom>\r\n                            {year}\r\n                          </Typography>\r\n                          <IconButton aria-label='arrow_forward' onClick={this.onNextElection.bind(this)}>\r\n                            <ArrowForwardIcon />\r\n                          </IconButton>\r\n                        </Box>\r\n\r\n                        <Typography variant='h4' color='inherit' style={{ display: 'inline-block' }}>\r\n                          {district.name_zh}\r\n                        </Typography>\r\n                        <Typography variant='h4' color='inherit' style={{ display: 'inline-block' }}>\r\n                          {code}\r\n                        </Typography>\r\n                        <Divider />\r\n                        <List>\r\n                          <ListItemText primary={'區議員'} />\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List>\r\n                          <ListItemText primary={'政黨'} />\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                      </Box>\r\n                    </DistrictCard>\r\n                  </Grid>\r\n                </Grid>\r\n                {district.main_areas.length > 0 && <Grid item xs={12}>\r\n                  <Typography variant='h6' gutterBottom>主要屋邨 / 地區</Typography>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    flexWrap=\"wrap\"\r\n                    alignContent=\"flex-start\"\r\n                  >\r\n                    {\r\n                      district.main_areas.map((area, index) =>\r\n                        <Box mr={1} key={index}>\r\n                          {`${Object.keys(area)[0]}. ${area[Object.keys(area)[0]]}`}\r\n                        </Box>)\r\n                    }\r\n                  </Box>\r\n                </Grid>}\r\n              </Container>\r\n              <Grid item xs={12}>\r\n                <Container maxWidth='lg'>\r\n                  <Typography variant='h5' gutterBottom>估計人口</Typography>\r\n                  {district.expected_population}\r\n\r\n                  <Typography variant='h5' gutterBottom>議員候選人</Typography>\r\n                  <Grid item xs={12}>\r\n                    {\r\n                      district.candidates.sort((a, b) => a.candidate_number - b.candidate_number).map(candidate =>\r\n                        <div\r\n                          style={{ width: '100%' }}\r\n                          key={candidate.candidate_number}>\r\n                          <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row\"\r\n                            justifyContent='space-between'>\r\n                            <Box p={1}>\r\n                              <Avatar\r\n                                src={`/static/images/avatar/${year}/${code}_${year === 2011 ? '0' : ''}${candidate.candidate_number}.jpg`}\r\n                                imgProps={{ onError: (e) => { e.target.src = '/static/images/avatar/default.png'; } }} >\r\n                              </Avatar>\r\n                            </Box>\r\n                            <Box p={1}>\r\n                              <Typography gutterBottom variant='h6'>\r\n                                {`${candidate.candidate_number}. ${candidate.person.name_zh ? candidate.person.name_zh: candidate.person.name_en}`}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box p={1}>\r\n                              <Typography color='textSecondary' variant='body2'>\r\n                                陣營\r\n                      </Typography>\r\n                              <Typography gutterBottom variant='body1'>\r\n                                {candidate.political_affiliation ? candidate.political_affiliation.name_zh : ''}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box p={1}>\r\n                              <Typography gutterBottom variant='body1'>\r\n                                {`${candidate.votes} (${candidate.vote_percentage}%)`}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box p={1}>\r\n                              <Typography color='textSecondary' variant='body2'>\r\n                                得票率\r\n                      </Typography>\r\n                              <CustomizedProgressBars\r\n                                value={parseFloat(candidate.vote_percentage)} />\r\n                            </Box>\r\n                            <Box p={1}>\r\n                              {candidate.is_won && <CheckCircleIcon />}\r\n                            </Box>\r\n                          </Box>\r\n                        </div>)\r\n                    }\r\n                  </Grid>\r\n                </Container>\r\n              </Grid>\r\n            </React.Fragment>)\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DistrictPage\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n  },\r\n})\r\n\r\nclass NotFoundPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n     \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      TODO - <a href='https://notfound.collaction.hk/'>404</a>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NotFoundPage)\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport createMuiTheme from './ui/theme'\r\nimport NavBar from './layout/NavBar'\r\nimport SearchPage from './pages/search'\r\nimport MapPage from './pages/map'\r\nimport ProfilePage from './pages/profile'\r\nimport DistrictPage from './pages/district'\r\nimport NotfoundPage from './pages/notfound'\r\nimport ApolloClient from 'apollo-boost'\r\nimport { ApolloProvider } from 'react-apollo'\r\n\r\nimport './App.css'\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://gql.opencultures.life/graphql\"\r\n});\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  // Load app bar information from the theme\r\n  // https://stackoverflow.com/questions/48508449/content-beneath-fixed-appbar\r\n  toolbar: theme.mixins.toolbar\r\n})\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n            <NavBar />\r\n            <main>\r\n              {/* <div className={classes.toolbar} /> */}\r\n              {/* Content will be shifted downwards by the div above. If the div is removed, the content will disappear under the app bar. */}\r\n              <Switch>\r\n                <Route exact path=\"/\" component={SearchPage} />\r\n                <Route exact path=\"/map\" component={MapPage} />\r\n                <Route path=\"/profile/:id\" component={ProfilePage} />\r\n                <Route path=\"/district/:year/:code\" component={DistrictPage} />\r\n                <Route component={NotfoundPage} />\r\n              </Switch>\r\n            </main>\r\n        </MuiThemeProvider>\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}