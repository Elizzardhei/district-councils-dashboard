{"version":3,"sources":["components/SideBar.js","components/BoundariesMap.js","utils/features.js","components/MapboxMap.js","ui/theme/index.js","components/DCCAElectionResult.js","App.js","index.js"],"names":["withStyles","theme","root","display","appBar","width","concat","marginLeft","drawer","flexShrink","drawerPaper","content","flexGrow","padding","spacing","unit","toolbar","mixins","props","style","dcca","dc2019","undefined","dccaList","find","d","name","includes","react_default","a","createElement","Drawer_default","className","variant","anchor","classes","paper","features","map","feature","ListItem_default","key","properties","CACODE","href","ListItemText_default","primary","CNAME","React","Component","getAllFeaturesFromPoint","point","featuresArray","pt","turf","lng","lat","polygonProps","i","n","length","poly","geometry","coordinates","Object","objectSpread","year","split","MapboxMap","_this$props","this","token","center","zoom","minZoom","styleID","mapLayers","onMapClicked","onMapPanned","mapConfig","container","mapboxgl","accessToken","Map","on","getStyle","addSource","type","data","generateId","addLayer","id","source","paint","line-color","line-width","fill-color","fill-opacity","hoveredStateId","clickedStateId","e","setFeatureState","hover","highlight","bounds","coords","latitude","longitude","j","xMin","xMax","yMin","yMax","getBoundingBox","LngLatBounds","LngLat","fitBounds","maxZoom","_map$getCenter","getCenter","toFixed","getZoom","position","top","bottom","height","createMuiTheme","palette","main","secondary","themeName","typography","useNextVariants","DCCAElectionResult","electors","cacode","yearIndex","findIndex","o","parseInt","result","election","Fragment","cname","ename","List_default","candidates","r","number","cName","eName","vote","LONG","LAT","ZOOM","STYLE_ID","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","open","lastClick","selectedDCCA","bind","assertThisInitialized","dc2003","dc2007","dc2011","dc2015","setState","lngLat","_this$state","_this$state$map","MuiThemeProvider_default","CssBaseline_default","AppBar_default","Toolbar_default","Typography_default","color","noWrap","Divider_default","console","log","Stepper_default","orientation","index","Step_default","active","StepLabel_default","StepContent_default","ENAME","actionsContainer","components_DCCAElectionResult","components_MapboxMap","showPopUp","zIndex","withTheme","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bf1e74ef.chunk.js","sourcesContent":["import React from 'react'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst drawerWidth = 320;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n});\r\n\r\nconst SideBar = (props) => {\r\n  const { style, drawerPaper, dcca } = props\r\n\r\n  \r\n  const dc2019 = dcca !== undefined &&  dcca.dccaList !== undefined ? dcca.dccaList.find(d => d.name.includes('2019')) : null\r\n  \r\n  return (\r\n    <Drawer\r\n      className={style}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: drawerPaper,\r\n      }}\r\n    >\r\n    {dc2019 && dc2019.features.map(feature => \r\n    <ListItem key={feature.properties.CACODE} href=\"#\">\r\n    <ListItemText primary={`${feature.properties.CACODE} - ${feature.properties.CNAME}`} />\r\n  </ListItem>\r\n    )}\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SideBar)","import React from 'react'\r\nimport { Map, View } from 'ol'\r\nimport { Group as LayerGroup, Tile as TileLayer, Vector as VectorLayer } from 'ol/layer'\r\nimport XYZ from 'ol/source/XYZ'\r\nimport GeoJSON from 'ol/format/GeoJSON'\r\nimport { Stroke, Fill, Style } from 'ol/style'\r\nimport { Vector as VectorSource } from 'ol/source'\r\nimport { click } from 'ol/events/condition'\r\nimport Select from 'ol/interaction/Select'\r\nimport dc2003 from '../data/DCCA_2003'\r\nimport dc2007 from '../data/DCCA_2007'\r\nimport dc2011 from '../data/DCCA_2011'\r\nimport dc2015 from '../data/DCCA_2015'\r\nimport dc2019 from '../data/DCCA_2019'\r\n\r\nclass BoundariesMap extends React.Component {\r\n\r\n  state = {\r\n    map: null,\r\n    selectedFeatures: [],\r\n    lastClick: null\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const { mapLayers } = this.props\r\n    console.log(mapLayers)\r\n    const red = [\r\n      new Style({\r\n        stroke: new Stroke({\r\n          color: 'red',\r\n          width: 1\r\n        }),\r\n        fill: new Fill({\r\n          color: 'rgba(255,255,255,0.1)'\r\n        })\r\n      })\r\n    ];\r\n\r\n    const blue = [\r\n      new Style({\r\n        stroke: new Stroke({\r\n          color: 'blue',\r\n          width: 1\r\n        }),\r\n        fill: new Fill({\r\n          color: 'rgba(255,255,255,0.1)'\r\n        })\r\n      })\r\n    ];\r\n\r\n    // const dc2015Layer = new VectorLayer({\r\n    //   source: new VectorSource({\r\n    //     features: (new GeoJSON()).readFeatures(dc2015)\r\n    //   }),\r\n    //   style: blue\r\n    // })\r\n\r\n    const dc2019Layer = new VectorLayer({\r\n      source: new VectorSource({\r\n        features: (new GeoJSON()).readFeatures(dc2019)\r\n      }),\r\n      style: red\r\n    })\r\n\r\n    let map = new Map({\r\n      target: this.refs.mapContainer,\r\n      layers: [\r\n        new TileLayer({\r\n          source: new XYZ({\r\n            url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n          })\r\n        }), new LayerGroup({\r\n          layers: [\r\n            // dc2011Layer,\r\n            // dc2015Layer,\r\n            dc2019Layer\r\n          ]\r\n        })\r\n      ],\r\n      view: new View({\r\n        center: [114.1401483, 22.379149],\r\n        projection: 'EPSG:4326',\r\n        zoom: 11,\r\n      })\r\n    })\r\n\r\n    // select interaction working on \"click\"\r\n    let interaction = new Select({\r\n      condition: click,\r\n      multi: true\r\n    });\r\n\r\n\r\n    if (interaction !== null) {\r\n      map.addInteraction(interaction)\r\n      interaction.on('select', this.onFeatureSelected)\r\n    }\r\n\r\n    map.on('singleclick', (event) => {\r\n      this.setState({\r\n        lastClick: event.coordinate\r\n      })\r\n      console.log(this.state)\r\n    })\r\n\r\n    this.setState({\r\n      map,\r\n      interaction\r\n    })\r\n  }\r\n\r\n\r\n  onFeatureSelected = event => {\r\n    if (event.target.getFeatures().getLength() > 0) {\r\n      let features = event.target.getFeatures()\r\n      console.log(features)\r\n      if (event.target.getFeatures().getLength() > 3) features.clear()\r\n      this.setState({\r\n        selectedFeatures: features.getArray()\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <div ref=\"mapContainer\" style={classes}></div>\r\n      {this.state.selectedFeatures.map((feature, index) => \r\n        <li key={index}>\r\n        {feature.getProperties().CACODE}\r\n        {feature.getProperties().CANAME}\r\n        </li>\r\n      )}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default BoundariesMap","import * as turf from '@turf/turf'\r\n\r\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\r\n    const pt = turf.point([point.lng, point.lat])\r\n    const result = featuresArray.map(feature => {\r\n        let polygonProps = {}\r\n        for (let i= 0, n = feature.features.length; i < n; i++) {\r\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\r\n            if (turf.booleanPointInPolygon(pt, poly)) {\r\n                polygonProps = {...feature.features[i].properties}\r\n                break\r\n            }\r\n        }\r\n        return {\r\n            year: feature.name.split('_')[1],\r\n            ...polygonProps\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n\r\nexport const getBoundingBox = data => {\r\n    var bounds = {}, coords, point, latitude, longitude;\r\n  \r\n    // We want to use the “features” key of the FeatureCollection (see above)\r\n    // data = data.features;\r\n  \r\n    // Loop through each “feature”\r\n    // for (var i = 0; i < data.length; i++) {\r\n  \r\n      // Pull out the coordinates of this feature\r\n      coords = data.geometry.coordinates[0];\r\n  \r\n      // For each individual coordinate in this feature's coordinates…\r\n      for (var j = 0; j < coords.length; j++) {\r\n  \r\n        longitude = coords[j][0];\r\n        latitude = coords[j][1];\r\n  \r\n        // Update the bounds recursively by comparing the current\r\n        // xMin/xMax and yMin/yMax with the coordinate\r\n        // we're currently checking\r\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\r\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\r\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\r\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\r\n      }\r\n  \r\n    // }\r\n  \r\n    // Returns an object that contains the bounds of this GeoJSON\r\n    // data. The keys of this object describe a box formed by the\r\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\r\n    return bounds;\r\n  }","import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl'\r\nimport { getBoundingBox } from '../utils/features'\r\n\r\nclass MapboxMap extends Component {\r\n    componentDidMount() {\r\n        // set map properties\r\n        const { token, center, zoom, minZoom, styleID, mapLayers, onMapClicked, onMapPanned } = this.props;\r\n\r\n        const mapConfig = {\r\n            container: 'map',\r\n            style: `mapbox://styles/${styleID}`,\r\n            center: center,\r\n            zoom: zoom,\r\n            minZoom: minZoom\r\n        };\r\n\r\n        mapboxgl.accessToken = token;\r\n        let map = new mapboxgl.Map(mapConfig);\r\n\r\n        map.on('load', () => {\r\n            // Get the map style and set it in the state tree\r\n            const style = map.getStyle();\r\n            //   this.props.setStyle(style);\r\n\r\n            map.addSource('2019', {\r\n                type: 'geojson',\r\n                data: mapLayers[4],\r\n                generateId: true\r\n                // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\r\n            });\r\n\r\n            map.addLayer({\r\n                id: '2019-lines',\r\n                type: 'line',\r\n                source: '2019',\r\n                paint: {\r\n                    'line-color': 'rgba(255, 0, 0, 1)',\r\n                    'line-width': 2\r\n                }\r\n            });\r\n\r\n            map.addLayer({\r\n                id: '2019-hovers',\r\n                type: 'fill',\r\n                source: '2019',\r\n                paint: {\r\n                    \"fill-color\": \"#627BC1\",\r\n                    \"fill-opacity\": [\"case\",\r\n                        [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n                        0.3,\r\n                        0\r\n                    ]\r\n                }\r\n            });\r\n\r\n            map.addLayer({\r\n                id: '2019-highlight',\r\n                type: 'fill',\r\n                source: '2019',\r\n                paint: {\r\n                    \"fill-color\": \"#ff0000\",\r\n                    \"fill-opacity\": [\"case\",\r\n                        [\"boolean\", [\"feature-state\", \"highlight\"], false],\r\n                        0.3,\r\n                        0\r\n                    ]\r\n                }\r\n            });\r\n\r\n            let hoveredStateId = null;\r\n            let clickedStateId = null;\r\n            // When the user moves their mouse over the state-fill layer, we'll update the\r\n            // feature state for the feature under the mouse.\r\n            map.on(\"mousemove\", \"2019-hovers\", function (e) {\r\n                if (e.features.length > 0) {\r\n                    if (hoveredStateId) {\r\n                        map.setFeatureState({ source: '2019', id: hoveredStateId }, { hover: false });\r\n                    }\r\n                    hoveredStateId = e.features[0].id;\r\n                    map.setFeatureState({ source: '2019', id: hoveredStateId }, { hover: true });\r\n                }\r\n            });\r\n\r\n            // When the mouse leaves the state-fill layer, update the feature state of the\r\n            // previously hovered feature.\r\n            map.on(\"mouseleave\", \"2019-hovers\", function () {\r\n                if (hoveredStateId) {\r\n                    map.setFeatureState({ source: '2019', id: hoveredStateId }, { hover: false });\r\n                }\r\n                hoveredStateId = null;\r\n            });\r\n\r\n            map.on(\"click\", \"2019-highlight\", function (e) {\r\n                if (clickedStateId) {\r\n                    map.setFeatureState({ source: '2019', id: clickedStateId }, { highlight: false });\r\n                    clickedStateId = null;\r\n                }\r\n                clickedStateId = e.features[0].id;\r\n                map.setFeatureState({ source: '2019', id: clickedStateId }, { highlight: true });\r\n\r\n                \r\n                let bounds = getBoundingBox(e.features[0])\r\n\r\n                bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax));\r\n\r\n                map.fitBounds(bounds, {\r\n                    padding: 50,\r\n                    maxZoom: 13.5\r\n                });\r\n\r\n            });\r\n\r\n\r\n            map.on('click', e => {\r\n                onMapClicked(e)\r\n            });\r\n\r\n            map.on('move', () => {\r\n                const { lng, lat } = map.getCenter();\r\n                onMapPanned(lng.toFixed(4), lat.toFixed(4), map.getZoom().toFixed(2))\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='map'\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapboxMap","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#FF8F00' },\r\n  secondary: { main: '#00E676' }\r\n};\r\nconst themeName = 'Pizazz Spring Green Falcon';\r\n\r\nconst typography =  {\r\n  useNextVariants: true,\r\n}\r\n\r\nexport default createMuiTheme({ palette, themeName, typography });\r\n","\r\nimport React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nconst DCCAElectionResult = (props) => {\r\n    const { electors, year, cacode } = props\r\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\r\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\r\n    return (\r\n        <React.Fragment>\r\n            {`${result.cacode}`} <br />\r\n            {`${result.cname} ${result.ename}`} <br />\r\n            {result &&\r\n                <List>\r\n                    {\r\n                        result.candidates.map(r => <ListItem key={`${r.number}`}>\r\n                            <ListItemText\r\n                                primary={`${r.number > 0 ? r.cName : ''} ${r.eName}`}\r\n                                secondary={r.vote > 0 ? `${r.vote}票` : '自動當選'}\r\n                            />\r\n                        </ListItem>)\r\n\r\n                    }\r\n                </List>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DCCAElectionResult","import React, { Component } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SideBar from './components/SideBar';\r\nimport BoundariesMap from './components/BoundariesMap'\r\nimport MapboxMap from './components/MapboxMap'\r\nimport createMuiTheme from './ui/theme';\r\nimport DCCAElectionResult from './components/DCCAElectionResult'\r\nimport { getAllFeaturesFromPoint } from './utils/features'\r\n\r\nimport './App.css'\r\n\r\nimport dc2003 from './data/DCCA_2003'\r\nimport dc2007 from './data/DCCA_2007'\r\nimport dc2011 from './data/DCCA_2011'\r\nimport dc2015 from './data/DCCA_2015'\r\nimport dc2019 from './data/DCCA_2019'\r\nimport electors from './data/electors'\r\n\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n});\r\n\r\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\r\nconst LONG = 114.2029;\r\nconst LAT = 22.3844;\r\nconst ZOOM = 11;\r\nconst STYLE_ID = 'mapbox/streets-v9';\r\nconst MIN_ZOOM = 10;\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      map: {\r\n        center: [LONG, LAT],\r\n        zoom: ZOOM,\r\n        styleID: STYLE_ID,\r\n        lastClick: null\r\n      },\r\n      selectedDCCA: null\r\n    }\r\n\r\n    this.onMapPanned = this.onMapPanned.bind(this)\r\n    this.onMapClicked = this.onMapClicked.bind(this)\r\n\r\n    this.dccaList = [dc2003, dc2007, dc2011, dc2015, dc2019]\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.props.actions.loadDCCAdata([dc2003, dc2007, dc2011, dc2015, dc2019])\r\n  }\r\n\r\n  onMapPanned(lng, lat, zoom) {\r\n    this.setState({\r\n      map: {\r\n        center: [lng, lat],\r\n        zoom,\r\n      }\r\n    })\r\n  }\r\n\r\n  onMapClicked(e) {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lngLat.lng, e.lngLat.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint(e.lngLat, this.dccaList)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { map: {center, zoom, lastClick}, selectedDCCA } = this.state\r\n    const { classes, map } = this.props\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              District Council Dashboard\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.toolbar} />\r\n\r\n          <Divider />\r\n          <div>{center && zoom && `Longitude: ${center[0]} Latitude: ${center[1]} Zoom: ${zoom}`}</div><br />\r\n          <div>{lastClick ? `lastClick: ${lastClick[0]} ${lastClick[1]}` : ''}</div>\r\n          {console.log(this.state)}\r\n          <Stepper orientation=\"vertical\">\r\n            {selectedDCCA && selectedDCCA.map((feature, index) => (\r\n              <Step key={feature.year} active={true}>\r\n                <StepLabel>{feature.year}</StepLabel>\r\n                <StepContent>\r\n                  <Typography>{`${feature.CNAME} ${feature.ENAME}`}</Typography>\r\n                  <div className={classes.actionsContainer}>\r\n                    <DCCAElectionResult\r\n                      electors={electors}\r\n                      year={feature.year}\r\n                      cacode={feature.CACODE} />\r\n                  </div>\r\n                </StepContent>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {this.dccaList &&\r\n            <MapboxMap\r\n              mapLayers={this.dccaList}\r\n              token={TOKEN}\r\n              center={center}\r\n              zoom={zoom}\r\n              showPopUp={true}\r\n              styleID={STYLE_ID}\r\n              minZoom={MIN_ZOOM}\r\n              onMapClicked={this.onMapClicked}\r\n              onMapPanned={this.onMapPanned}\r\n            />}\r\n        </main>\r\n      </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n      <App />,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}