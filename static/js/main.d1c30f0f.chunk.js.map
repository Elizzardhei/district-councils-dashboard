{"version":3,"sources":["layout/NavBar.js","ui/theme/index.js","utils/features.js","components/MapboxMap.js","components/InfoCard.js","pages/map/index.js","App.js","index.js"],"names":["NavBar","classes","this","props","react_default","a","createElement","AppBar_default","position","className","appBar","Toolbar_default","Typography_default","variant","color","noWrap","react_router_dom","to","Button_default","Component","withStyles","theme","zIndex","drawer","withTheme","createMuiTheme","palette","primary","main","secondary","themeName","typography","useNextVariants","fontFamily","getAllFeaturesFromPoint","point","featuresArray","pt","turf","lng","lat","map","feature","polygonProps","i","n","features","length","poly","geometry","coordinates","Object","objectSpread","properties","year","name","split","MapboxMap","_this","_this$props","token","center","zoom","minZoom","styleID","mapLayers","onMapClicked","onMapPanned","mapConfig","container","style","concat","mapboxgl","accessToken","Map","on","getStyle","hoveredStateId","clickedStateId","forEach","layer","index","addSource","type","data","generateId","addLayer","id","source","layout","visibility","checked","paint","line-color","line-width","fill-color","fill-opacity","e","setFeatureState","hover","highlight","bounds","coords","latitude","longitude","j","xMin","xMax","yMin","yMax","getBoundingBox","LngLatBounds","LngLat","fitBounds","padding","maxZoom","_this$map$getCenter","getCenter","toFixed","getZoom","prevProps","_this2","getLayer","setLayoutProperty","top","bottom","width","height","candiNumMapping","1","2","3","4","5","6","7","8","9","10","card","left","pos","marginBottom","electors","cacode","yearIndex","findIndex","o","parseInt","result","election","find","Fragment","Card_default","CardContent_default","cname","ename","List_default","candidates","candi","ListItem_default","alignItems","key","number","ListItemAvatar_default","Avatar_default","Person_default","ListItemText_default","cName","eName","vote","win","ListItemSecondaryAction_default","Star_default","LONG","LAT","ZOOM","STYLE_ID","MapPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","lastClick","lngLat","selectedDCCA","state","dccaList","onYearBtnClicked","idx","dcca","toConsumableArray","dc2003","dc2007","dc2011","dc2015","dc2019","open","_this$state","_this$state$map","currentFeature","currentYear","MuiThemeProvider_default","CssBaseline_default","content","toolbar","components_MapboxMap","showPopUp","InfoCard","CACODE","yearButton","onClick","backgroundColor","d","button","flexGrow","mixins","App","root","layout_NavBar","react_router","exact","path","component","mapPage","display","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d1c30f0f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    }\r\n})\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              香港議會大典\r\n              </Typography>\r\n              <Link to=\"/map\"><Button color=\"inherit\">地圖（2003-2019）</Button></Link>\r\n              <Link to=\"/table\"><Button color=\"inherit\">原始資料</Button></Link>\r\n            </Toolbar>\r\n          </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NavBar)","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#FF8F00' },\r\n  secondary: { main: '#00E676' }\r\n};\r\nconst themeName = 'Pizazz Spring Green Falcon';\r\n\r\nconst typography =  {\r\n  useNextVariants: true,\r\n  fontFamily: \"'Noto Sans TC', sans-serif\"\r\n}\r\n\r\nexport default createMuiTheme({ palette, themeName, typography });\r\n","import * as turf from '@turf/turf'\r\n\r\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\r\n    const pt = turf.point([point.lng, point.lat])\r\n    const result = featuresArray.map(feature => {\r\n        let polygonProps = {}\r\n        for (let i= 0, n = feature.features.length; i < n; i++) {\r\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\r\n            if (turf.booleanPointInPolygon(pt, poly)) {\r\n                polygonProps = {...feature.features[i].properties}\r\n                break\r\n            }\r\n        }\r\n        return {\r\n            year: feature.name.split('_')[1],\r\n            ...polygonProps\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n\r\nexport const getBoundingBox = data => {\r\n    var bounds = {}, coords, point, latitude, longitude;\r\n  \r\n    // We want to use the “features” key of the FeatureCollection (see above)\r\n    // data = data.features;\r\n  \r\n    // Loop through each “feature”\r\n    // for (var i = 0; i < data.length; i++) {\r\n  \r\n      // Pull out the coordinates of this feature\r\n      coords = data.geometry.coordinates[0];\r\n  \r\n      // For each individual coordinate in this feature's coordinates…\r\n      for (var j = 0; j < coords.length; j++) {\r\n  \r\n        longitude = coords[j][0];\r\n        latitude = coords[j][1];\r\n  \r\n        // Update the bounds recursively by comparing the current\r\n        // xMin/xMax and yMin/yMax with the coordinate\r\n        // we're currently checking\r\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\r\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\r\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\r\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\r\n      }\r\n  \r\n    // }\r\n  \r\n    // Returns an object that contains the bounds of this GeoJSON\r\n    // data. The keys of this object describe a box formed by the\r\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\r\n    return bounds;\r\n  }","import React, { Component } from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport { getBoundingBox } from '../utils/features'\r\n\r\nclass MapboxMap extends Component {\r\n    componentDidMount() {\r\n        // set map properties\r\n        const { token, center, zoom, minZoom, styleID, mapLayers, onMapClicked, onMapPanned, color } = this.props\r\n\r\n        const mapConfig = {\r\n            container: 'map',\r\n            style: `mapbox://styles/${styleID}`,\r\n            center: center,\r\n            zoom: zoom,\r\n            minZoom: minZoom\r\n        }\r\n\r\n        mapboxgl.accessToken = token\r\n        this.map = new mapboxgl.Map(mapConfig)\r\n\r\n        this.map.on('load', () => {\r\n            // Get the map style and set it in the state tree\r\n            const style = this.map.getStyle()\r\n            //   this.props.setStyle(style)\r\n\r\n            \r\n            let hoveredStateId = null\r\n            let clickedStateId = null\r\n\r\n            mapLayers.forEach((layer, index) => {\r\n                this.map.addSource(layer.name, {\r\n                    type: 'geojson',\r\n                    data: layer,\r\n                    generateId: true\r\n                    // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-lines`,\r\n                    type: 'line',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        'line-color': color[index],\r\n                        'line-width': 2\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-hovers`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": \"#000\",\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n                            0.1,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-highlight`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": color[index],\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"highlight\"], false],\r\n                            0.3,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                // When the user moves their mouse over the state-fill layer, we'll update the\r\n                // feature state for the feature under the mouse.\r\n                this.map.on(\"mousemove\", `${layer.name}-hovers`, function (e) {\r\n                    if (e.features.length > 0) {\r\n                        if (hoveredStateId) {\r\n                            this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\r\n                        }\r\n                        hoveredStateId = e.features[0].id\r\n                        this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: true })\r\n                    }\r\n                })\r\n\r\n                // When the mouse leaves the state-fill layer, update the feature state of the\r\n                // previously hovered feature.\r\n                this.map.on(\"mouseleave\", `${layer.name}-hovers`, function () {\r\n                    if (hoveredStateId) {\r\n                        this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\r\n                    }\r\n                    hoveredStateId = null\r\n                })\r\n\r\n                this.map.on(\"click\", `${layer.name}-highlight`, function (e) {\r\n\r\n                    if (clickedStateId) {\r\n                        this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: false })\r\n                        clickedStateId = null\r\n                    }\r\n                    clickedStateId = e.features[0].id\r\n                    this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: true })\r\n    \r\n                    \r\n                    let bounds = getBoundingBox(e.features[0])\r\n    \r\n                    bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n    \r\n                    this.fitBounds(bounds, {\r\n                        padding: 50,\r\n                        maxZoom: 13.5\r\n                    })\r\n    \r\n                })\r\n\r\n            })\r\n\r\n            this.map.on('click', e => {\r\n                onMapClicked(e)\r\n            })\r\n\r\n            this.map.on('move', () => {\r\n                const { lng, lat } = this.map.getCenter()\r\n                onMapPanned(lng.toFixed(4), lat.toFixed(4), this.map.getZoom().toFixed(2))\r\n            })\r\n\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.mapLayers !== prevProps.mapLayers) {\r\n\r\n            const status = this.props.mapLayers.map(layer => {\r\n                return {\r\n                    name: layer.name,\r\n                    visibility: layer.checked ? 'visible' : 'none'\r\n                }\r\n            })\r\n\r\n            status.forEach(layer => {\r\n                if (this.map.getLayer(`${layer.name}-lines`)) {\r\n                    this.map.setLayoutProperty(`${layer.name}-lines`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-hovers`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-highlight`, 'visibility', layer.visibility)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='map'\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n            ></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapboxMap","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = {\r\n    card: {    \r\n        width: '400px',\r\n        position: 'absolute',\r\n        top: '15%',\r\n        left: '100px'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n}\r\n\r\n\r\nconst candiNumMapping = {\r\n        1: '①',\r\n        2: '②',\r\n        3: '③',\r\n        4: '④',\r\n        5: '⑤',\r\n        6: '⑥',\r\n        7: '⑦',\r\n        8: '⑧',\r\n        9: '⑨',\r\n        10: '⑩'\r\n}\r\n\r\nconst SimpleCard = props => {\r\n    const { classes, electors, year, cacode } = props\r\n\r\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\r\n\r\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {result && <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" >\r\n                        {year}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        {result.cacode} {result.cname}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {result.ename}\r\n                    </Typography>\r\n                    <List>\r\n                    {\r\n                        result.candidates.map(candi => <ListItem alignItems=\"flex-start\" key={`${candi.number}`}>\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                    <PersonIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={`${candi.number > 0 ? candiNumMapping[candi.number] : ''} ${candi.cName} ${candi.eName}`}\r\n                                secondary={candi.vote > 0 ? `${candi.vote}票` : '自動當選'}\r\n                            />\r\n                            {candi.win &&\r\n                            <ListItemSecondaryAction>\r\n                                <StarIcon color=\"secondary\" />\r\n                            </ListItemSecondaryAction>}\r\n                        </ListItem>)\r\n\r\n                    }\r\n                </List>\r\n                </CardContent>\r\n            </Card>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(SimpleCard)","import React, { Component } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport NavBar from '../../layout/NavBar'\r\nimport MapboxMap from '../../components/MapboxMap'\r\nimport InfoCard from '../../components/InfoCard'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport { getAllFeaturesFromPoint } from '../../utils/features'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport dc2003 from '../../data/DCCA_2003'\r\nimport dc2007 from '../../data/DCCA_2007'\r\nimport dc2011 from '../../data/DCCA_2011'\r\nimport dc2015 from '../../data/DCCA_2015'\r\nimport dc2019 from '../../data/DCCA_2019'\r\nimport electors from '../../data/electors'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  yearButton: {\r\n    position: 'absolute',\r\n    width: 100,\r\n    top: '15%'\r\n  }\r\n})\r\n\r\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA'\r\nconst LONG = 114.2029\r\nconst LAT = 22.3844\r\nconst ZOOM = 11\r\nconst STYLE_ID = 'mapbox/streets-v9'\r\nconst MIN_ZOOM = 10\r\n\r\nconst color = [\r\n  '#6e40e6',\r\n  '#f49600',\r\n  '#ff5d55',\r\n  '#005ecd',\r\n  '#ad0000'\r\n]\r\n\r\nclass MapPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      dccaList: [dc2003, dc2007, dc2011, dc2015, dc2019],\r\n      open: false,\r\n      map: {\r\n        center: [LONG, LAT],\r\n        zoom: ZOOM,\r\n        styleID: STYLE_ID,\r\n        lastClick: null\r\n      },\r\n      selectedDCCA: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onYearBtnClicked('DCCA_2011')\r\n    this.onYearBtnClicked('DCCA_2015')\r\n  }\r\n\r\n  onMapPanned = (lng, lat, zoom) => {\r\n    this.setState({\r\n      map: {\r\n        center: [lng, lat],\r\n        zoom,\r\n      }\r\n    })\r\n  }\r\n\r\n  onMapClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lngLat.lng, e.lngLat.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint(e.lngLat, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onYearBtnClicked = (name) => {\r\n    const idx = this.state.dccaList.findIndex(dcca => dcca.name === name)\r\n    let dccaList = [...this.state.dccaList]\r\n    dccaList.forEach(dcca => {dcca.checked = false})\r\n    dccaList[idx].checked = true\r\n    this.setState({ dccaList })\r\n  }\r\n\r\n  render() {\r\n    const { map: {center, zoom, lastClick}, selectedDCCA, dccaList } = this.state\r\n    const { classes, map } = this.props\r\n\r\n    const currentFeature = dccaList.length > 0 ? dccaList.find(dcca => dcca.checked) : null\r\n    const currentYear = currentFeature ? currentFeature.name.split('_')[1] : null\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {dccaList &&\r\n            <MapboxMap\r\n              mapLayers={dccaList}\r\n              token={TOKEN}\r\n              center={center}\r\n              zoom={zoom}\r\n              showPopUp={true}\r\n              styleID={STYLE_ID}\r\n              minZoom={MIN_ZOOM}\r\n              color={color}\r\n              onMapClicked={this.onMapClicked}\r\n              onMapPanned={this.onMapPanned}\r\n            />}\r\n            <InfoCard \r\n            electors={electors}\r\n            year={currentYear}\r\n            cacode={currentYear && selectedDCCA && selectedDCCA.find(feature => feature.year === currentYear).CACODE}\r\n            />\r\n            <div className={classes.yearButton}>\r\n              <List>\r\n                {dccaList.map((dcca, index) => <ListItem key={`${dcca.name}`}>\r\n                  <Button\r\n                    onClick={() => this.onYearBtnClicked(dcca.name)}\r\n                    key={dcca.name} variant=\"contained\"\r\n                    style={{\r\n                      backgroundColor: dccaList.findIndex(d => d.name === dcca.name && d.checked === true) > -1 ? color[index] : '#e0e0e0'\r\n                    }}\r\n                    className={classes.button}>\r\n                    {dcca.name.split('_')[1]}\r\n                  </Button>\r\n                </ListItem>)}\r\n              </List>\r\n            </div>\r\n        </main>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(MapPage)","import React, { Component } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport NavBar from './layout/NavBar'\r\nimport createMuiTheme from './ui/theme'\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport mapPage from './pages/map'\r\n\r\nimport './App.css'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  }\r\n})\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <Router>\r\n        <MuiThemeProvider theme={theme}>\r\n          <div className={classes.root}>\r\n            <CssBaseline />\r\n            <NavBar />\r\n            <Route exact path=\"/map\" component={mapPage} />\r\n          </div>\r\n        </MuiThemeProvider>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n      <App />,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}