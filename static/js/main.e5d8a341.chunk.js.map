{"version":3,"sources":["../node_modules/encoding/lib sync","layout/NavBar.js","ui/theme/index.js","utils/features.js","pages/search/index.js","components/MapboxMap.js","components/InfoCard.js","components/AutoSearch.js","pages/map/index.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","NavBar","classes","this","props","react_default","a","createElement","AppBar_default","position","className","appBar","Toolbar_default","Typography_default","variant","color","noWrap","react_router_dom","to","Button_default","Component","withStyles","theme","zIndex","drawer","withTheme","createMuiTheme","palette","primary","main","secondary","themeName","typography","useNextVariants","fontFamily","getAllFeaturesFromPoint","point","featuresArray","pt","turf","lng","lat","map","feature","polygonProps","i","n","features","length","poly","geometry","coordinates","Object","objectSpread","properties","year","name","split","getBoundingBox","data","coords","latitude","longitude","bounds","j","xMin","xMax","yMin","yMax","SearchPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","autoCompleteList","autoCompleteNameList","evt","value","target","AddressParser","records","setState","candidates","filter","candidate","Candidate_name","includes","console","log","MuiThemeProvider_default","CssBaseline_default","content","container","Input_default","defaultValue","search1","inputProps","aria-label","onChange","onAddressFieldChanged","bind","placeholder","search2","onNameFieldChanged","address","index","key","fullAddress","ID","Year","Constituency_code","flexGrow","toolbar","mixins","top","width","left","MapboxMap","getMapboxFeature","coordinate","current","mapLayers","find","layer","checked","queryRenderedFeatures","layers","concat","zoomToBound","mapboxgl","LngLatBounds","LngLat","fitBounds","padding","maxZoom","hoveredStateId","clickedStateId","_this2","_this$props","token","center","zoom","minZoom","styleID","onMapClicked","selectedDCCA","onMapPanned","onMapFeatureClicked","mapConfig","style","accessToken","Map","on","getStyle","forEach","addSource","type","generateId","addLayer","source","layout","visibility","paint","line-color","line-width","fill-color","fill-opacity","_this2$map$getCenter","getCenter","toFixed","getZoom","prevProps","_this3","getLayer","setLayoutProperty","lastClick","setFeatureState","highlight","newFeatureId","project","bottom","height","candiNumMapping","1","2","3","4","5","6","7","8","9","10","card","pos","marginBottom","electors","cacode","yearIndex","findIndex","o","parseInt","result","election","Fragment","Card_default","CardContent_default","cname","ename","List_default","candi","ListItem_default","alignItems","number","ListItemAvatar_default","Avatar_default","src","imgProps","onError","ListItemText_default","cName","eName","vote","win","ListItemSecondaryAction_default","Star_default","renderInputComponent","_inputProps$inputRef","inputRef","ref","other","objectWithoutProperties","TextField_default","assign","fullWidth","InputProps","node","input","renderSuggestion","suggestion","_ref","query","isHighlighted","matches","match","label","parts","parse","MenuItem_default","selected","component","part","String","fontWeight","text","getSuggestionValue","IntegrationAutosuggest","suggestions","handleSuggestionsFetchRequested","_ref2","handleSuggestionsClearRequested","inputValue","deburr","trim","toLowerCase","inputLength","count","keep","slice","onAutoSuggestClicked","event","newValue","nativeEvent","MouseEvent","foundAddress","addresses","LANG_ZH","error","handleAddressSelected","currentSearchingResult","_","record","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","root","autoSuggestDiv","dist_default","popperNode","InputLabelProps","shrink","suggestionsList","renderSuggestionsContainer","options","Popper_default","anchorEl","open","Boolean","children","Paper_default","square","containerProps","clientWidth","React","display","backgroundColor","suggestionsContainerOpen","marginTop","spacing","unit","right","margin","listStyleType","divider","LONG","LAT","ZOOM","STYLE_ID","MapPage","lngLat","dccaList","parseFloat","onYearBtnClicked","idx","dcca","toConsumableArray","dc2003","dc2007","dc2011","dc2015","dc2019","_this$state","_this$state$map","currentFeature","currentYear","components_MapboxMap","InfoCard","CACODE","AutoSearch","searchBox","yearButton","onClick","d","button","App","layout_NavBar","react_router","exact","path","searchPage","mapPage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e5d8a341.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 274;","import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    }\r\n})\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              District Council Dashboard\r\n              </Typography>\r\n              <Link to=\"/\"><Button color=\"inherit\">Search</Button></Link>\r\n              <Link to=\"/map\"><Button color=\"inherit\">Map</Button></Link>\r\n            </Toolbar>\r\n          </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NavBar)","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#FF8F00' },\r\n  secondary: { main: '#00E676' }\r\n};\r\nconst themeName = 'Pizazz Spring Green Falcon';\r\n\r\nconst typography =  {\r\n  useNextVariants: true,\r\n  fontFamily: \"'Noto Sans TC', sans-serif\"\r\n}\r\n\r\nexport default createMuiTheme({ palette, themeName, typography });\r\n","import * as turf from '@turf/turf'\r\n\r\nexport const getAllFeaturesFromPoint = (point, featuresArray) => {\r\n    const pt = turf.point([point.lng, point.lat])\r\n    const result = featuresArray.map(feature => {\r\n        let polygonProps = {}\r\n        for (let i= 0, n = feature.features.length; i < n; i++) {\r\n            const poly = turf.multiPolygon(feature.features[i].geometry.coordinates)\r\n            if (turf.booleanPointInPolygon(pt, poly)) {\r\n                polygonProps = {...feature.features[i].properties}\r\n                break\r\n            }\r\n        }\r\n        return {\r\n            year: feature.name.split('_')[1],\r\n            ...polygonProps\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n\r\nexport const getBoundingBox = data => {\r\n    var bounds = {}, coords, point, latitude, longitude;\r\n  \r\n    // We want to use the “features” key of the FeatureCollection (see above)\r\n    // data = data.features;\r\n  \r\n    // Loop through each “feature”\r\n    // for (var i = 0; i < data.length; i++) {\r\n  \r\n      // Pull out the coordinates of this feature\r\n      coords = data.geometry.coordinates[0];\r\n  \r\n      // For each individual coordinate in this feature's coordinates…\r\n      for (var j = 0; j < coords.length; j++) {\r\n  \r\n        longitude = coords[j][0];\r\n        latitude = coords[j][1];\r\n  \r\n        // Update the bounds recursively by comparing the current\r\n        // xMin/xMax and yMin/yMax with the coordinate\r\n        // we're currently checking\r\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\r\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\r\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\r\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\r\n      }\r\n  \r\n    // }\r\n  \r\n    // Returns an object that contains the bounds of this GeoJSON\r\n    // data. The keys of this object describe a box formed by the\r\n    // northwest (xMin, yMin) and southeast (xMax, yMax) coordinates.\r\n    return bounds;\r\n  }","import React, { Component } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport { getAllFeaturesFromPoint } from '../../utils/features'\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\n\r\n\r\nimport dc2003 from '../../data/DCCA_2003'\r\nimport dc2007 from '../../data/DCCA_2007'\r\nimport dc2011 from '../../data/DCCA_2011'\r\nimport dc2015 from '../../data/DCCA_2015'\r\nimport dc2019 from '../../data/DCCA_2019'\r\nimport electors from '../../data/electors'\r\nimport candidates from '../../data/initium-full-dc-candidates'\r\n\r\nimport * as AddressParser from 'hk-address-parser-lib';\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  search1: {\r\n    position: 'absolute',\r\n    top: '15%',\r\n    width: '50%'\r\n  },\r\n  search2: {\r\n    position: 'absolute',\r\n    top: '15%',\r\n    left: '55%',\r\n    width: '45%'\r\n  }\r\n})\r\n\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      autoCompleteList: [],\r\n      autoCompleteNameList: [],\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n  }\r\n\r\n  async onAddressFieldChanged(evt) {\r\n    const { value } = evt.target;\r\n    const records = await AddressParser.parse(value);\r\n    this.setState({\r\n      autoCompleteList: records,\r\n    })\r\n  }\r\n\r\n  async onNameFieldChanged(evt) {\r\n    const { value } = evt.target;\r\n    const records = candidates.filter(candidate => candidate.Candidate_name.includes(value))\r\n    console.log( records );\r\n    this.setState({\r\n      autoCompleteNameList: records\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { autoCompleteList } = this.state;\r\n    const { autoCompleteNameList } = this.state;\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <main className={classes.content}>\r\n        <div className={classes.container}>\r\n      <Input\r\n        defaultValue=\"Search Address\"\r\n        className={classes.search1}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n        onChange={this.onAddressFieldChanged.bind(this)}\r\n      />\r\n\r\n      <Input\r\n        placeholder=\"Search People\"\r\n        className={classes.search2}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n        onChange={this.onNameFieldChanged.bind(this)}\r\n      />\r\n      { autoCompleteList.map( (address, index) => (<div key={index}><p>{address.fullAddress()}</p></div>))}\r\n      { autoCompleteNameList.map( (candidate, index) => (<div key={index}><p>{candidate.ID} {candidate.Year} {candidate.Constituency_code}</p></div>))}\r\n    </div>\r\n\r\n        </main>\r\n\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchPage)\r\n","import React, { Component } from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport { getBoundingBox } from '../utils/features'\r\n\r\nclass MapboxMap extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hoveredStateId: null,\r\n            clickedStateId: null\r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n        // set map properties\r\n        const { token, center, zoom, minZoom, styleID, mapLayers, selectedDCCA, onMapClicked, onMapFeatureClicked, onMapPanned, color } = this.props\r\n\r\n        const mapConfig = {\r\n            container: 'map',\r\n            style: `mapbox://styles/${styleID}`,\r\n            center: center,\r\n            zoom: zoom,\r\n            minZoom: minZoom\r\n        }\r\n\r\n        mapboxgl.accessToken = token\r\n        this.map = new mapboxgl.Map(mapConfig)\r\n\r\n        this.map.on('load', () => {\r\n            // Get the map style and set it in the state tree\r\n            const style = this.map.getStyle()\r\n            //   this.props.setStyle(style)\r\n\r\n            mapLayers.forEach((layer, index) => {\r\n                this.map.addSource(layer.name, {\r\n                    type: 'geojson',\r\n                    data: layer,\r\n                    generateId: true\r\n                    // When enabled, the feature.id property will be auto assigned based on its index in the features array, over-writing any previous values.\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-lines`,\r\n                    type: 'line',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        'line-color': color[index],\r\n                        'line-width': 2\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-hovers`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": \"#000\",\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n                            0.1,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                this.map.addLayer({\r\n                    id: `${layer.name}-highlight`,\r\n                    type: 'fill',\r\n                    source: layer.name,\r\n                    layout: {\r\n                        'visibility': layer.checked ? 'visible': 'none'\r\n                    },\r\n                    paint: {\r\n                        \"fill-color\": color[index],\r\n                        \"fill-opacity\": [\"case\",\r\n                            [\"boolean\", [\"feature-state\", \"highlight\"], false],\r\n                            0.3,\r\n                            0\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                // When the user moves their mouse over the state-fill layer, we'll update the\r\n                // feature state for the feature under the mouse.\r\n                // this.map.on(\"mousemove\", `${layer.name}-hovers`, function (e) {\r\n                    // if (e.features.length > 0) {\r\n                        // if (this.state.hoveredStateId !== null) {\r\n                        //     this.setFeatureState({ source: layer.name, id: this.state.hoveredStateId }, { hover: false })\r\n                        // }\r\n                        // let currentFeatureId = e.features[0].id\r\n                        // this.setFeatureState({ source: layer.name, id: currentFeatureId }, { hover: true })\r\n                        // this.setState({hoveredStateId: currentFeatureId})\r\n                    // }\r\n                // })\r\n\r\n                // When the mouse leaves the state-fill layer, update the feature state of the\r\n                // previously hovered feature.\r\n                // this.map.on(\"mouseleave\", `${layer.name}-hovers`, function () {\r\n                //     if (hoveredStateId) {\r\n                //         this.setFeatureState({ source: layer.name, id: hoveredStateId }, { hover: false })\r\n                //     }\r\n                //     hoveredStateId = null\r\n                // })\r\n\r\n                // this.map.on(\"click\", `${layer.name}-highlight`, function (e) {\r\n                // \r\n                    // if (clickedStateId) {\r\n                    //     this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: false })\r\n                    //     clickedStateId = null\r\n                    // }\r\n                    // clickedStateId = e.features[0].id\r\n                    // this.setFeatureState({ source: layer.name, id: clickedStateId }, { highlight: true })\r\n                    // let bounds = getBoundingBox(e.features[0])\r\n                    // bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n                    // this.fitBounds(bounds, {\r\n                    //     padding: 50,\r\n                    //     maxZoom: 13.5\r\n                    // })\r\n                // })\r\n\r\n            })\r\n\r\n            this.map.on('click', e => {\r\n                this.getMapboxFeature(e.point)\r\n                onMapClicked(e)\r\n            })\r\n\r\n            this.map.on('move', () => {\r\n                const { lng, lat } = this.map.getCenter()\r\n                onMapPanned(lng.toFixed(4), lat.toFixed(4), this.map.getZoom().toFixed(2))\r\n            })\r\n\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    getMapboxFeature = (coordinate) => {\r\n        const current = this.props.mapLayers.find(layer => layer.checked)\r\n        const features = this.map.queryRenderedFeatures(\r\n            coordinate, { layers: [`${current.name}-highlight`] }\r\n          );\r\n          return features\r\n    }\r\n\r\n    zoomToBound = (feature) => {\r\n        let bounds = getBoundingBox(feature)\r\n        bounds = new mapboxgl.LngLatBounds(new mapboxgl.LngLat(bounds.xMin, bounds.yMin), new mapboxgl.LngLat(bounds.xMax, bounds.yMax))\r\n\r\n        this.map.fitBounds(bounds, {\r\n            padding: 50,\r\n            maxZoom: 13.5\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.mapLayers !== prevProps.mapLayers) {\r\n\r\n            const status = this.props.mapLayers.map(layer => {\r\n                return {\r\n                    name: layer.name,\r\n                    visibility: layer.checked ? 'visible' : 'none'\r\n                }\r\n            })\r\n\r\n            status.forEach(layer => {\r\n                if (this.map.getLayer(`${layer.name}-lines`)) {\r\n                    this.map.setLayoutProperty(`${layer.name}-lines`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-hovers`, 'visibility', layer.visibility)\r\n                    this.map.setLayoutProperty(`${layer.name}-highlight`, 'visibility', layer.visibility)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (this.props.lastClick !== prevProps.lastClick) {\r\n                if (this.state.clickedStateId) {\r\n                    this.map.setFeatureState({ source: 'DCCA_2015', id: this.state.clickedStateId }, { highlight: false })\r\n                }\r\n\r\n                if (this.props.lastClick) {\r\n                    const newFeature = this.getMapboxFeature(this.map.project(this.props.lastClick))[0]\r\n                    const newFeatureId = newFeature.id\r\n                    // this.zoomToBound(newFeature)\r\n                    this.map.setFeatureState({ source: 'DCCA_2015', id: newFeatureId }, { highlight: true })\r\n\r\n                    this.setState({\r\n                        clickedStateId: newFeatureId\r\n                    })\r\n                }\r\n                \r\n                \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='map'\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n            ></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapboxMap","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = {\r\n    card: {    \r\n        width: '400px',\r\n        position: 'absolute',\r\n        top: '20%',\r\n        left: '100px'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n}\r\n\r\n\r\nconst candiNumMapping = {\r\n        1: '①',\r\n        2: '②',\r\n        3: '③',\r\n        4: '④',\r\n        5: '⑤',\r\n        6: '⑥',\r\n        7: '⑦',\r\n        8: '⑧',\r\n        9: '⑨',\r\n        10: '⑩'\r\n}\r\n\r\nconst SimpleCard = props => {\r\n    const { classes, electors, year, cacode } = props\r\n\r\n    const yearIndex = electors.findIndex(o => o.year === parseInt(year))\r\n\r\n    const result = yearIndex > -1 ? electors[yearIndex].election.find(e => e.cacode === cacode) : false\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {result && <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" >\r\n                        {year}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        {result.cacode} {result.cname}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {result.ename}\r\n                    </Typography>\r\n                    <List>\r\n                    {\r\n                        result.candidates.map(candi => <ListItem alignItems=\"flex-start\" key={`${candi.number}`}>\r\n                            <ListItemAvatar>\r\n                                <Avatar \r\n                                src={`/static/images/avatar/${year}/${result.cacode}_${year === 2011 ? '0' : ''}${candi.number}.jpg`}\r\n                                imgProps={{ onError: (e) => { e.target.src = '/static/images/avatar/default.png'; } }} >\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={`${candi.number > 0 ? candiNumMapping[candi.number] : ''} ${candi.cName} ${candi.eName}`}\r\n                                secondary={candi.vote > 0 ? `${candi.vote}票` : '自動當選'}\r\n                            />\r\n                            {candi.win &&\r\n                            <ListItemSecondaryAction>\r\n                                <StarIcon color=\"secondary\" />\r\n                            </ListItemSecondaryAction>}\r\n                        </ListItem>)\r\n\r\n                    }\r\n                </List>\r\n                </CardContent>\r\n            </Card>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(SimpleCard)","import React from 'react';\r\nimport PropTypes, { instanceOf } from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport * as AddressParser from 'hk-address-parser-lib';\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.label, query);\r\n  const parts = parse(suggestion.label, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map((part, index) =>\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 500 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          ),\r\n        )}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'block',\r\n    // height: 250,\r\n    flexGrow: 1,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n    padding: '10px'\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block'\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none'\r\n  },\r\n  divider: {\r\n    height: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass IntegrationAutosuggest extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : this.state.suggestions.filter(suggestion => {\r\n          const keep =\r\n            count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n          if (keep) {\r\n            count += 1;\r\n          }\r\n\r\n          return keep;\r\n        });\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    // console.log('fetched');\r\n    // this.setState({\r\n    //   suggestions: this.getSuggestions(value),\r\n    // });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleAddressSelected(address) {\r\n    const coordinate = address.coordinate();\r\n    this.props.onAutoSuggestClicked(coordinate)\r\n  }\r\n\r\n  async onAddressFieldChanged(event, { newValue }) {\r\n    const isMouseClick = event.nativeEvent instanceof MouseEvent;\r\n    if (isMouseClick) {\r\n      // This is fired when clicked on the pull down menu\r\n      this.setState({\r\n        value: newValue\r\n      })\r\n\r\n      let foundAddress = null;\r\n      try {\r\n        foundAddress = this.state.addresses.filter( address => address.fullAddress(AddressParser.Address.LANG_ZH) === newValue)[0];\r\n      } catch (error) {\r\n      }\r\n\r\n      if (foundAddress) {\r\n        this.handleAddressSelected(foundAddress);\r\n      }\r\n    } else {\r\n      // this is fired when typing in the search field\r\n      this.setState({\r\n        currentSearchingResult: newValue,\r\n        value: newValue\r\n      })\r\n      const records = await AddressParser.parse(newValue);\r\n\r\n      // Ignore the search if it is not the latest result\r\n      if (this.state.currentSearchingResult === newValue) {\r\n        this.setState({\r\n          suggestions: records.filter((_, index) => index < 10).map(record => ({ label: record.fullAddress(AddressParser.Address.LANG_ZH) })),\r\n          addresses: records,\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.suggestions,\r\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      getSuggestionValue,\r\n      renderSuggestion,\r\n    };\r\n\r\n    return (\r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.autoSuggestDiv}>\r\n          <Autosuggest\r\n            {...autosuggestProps}\r\n            inputProps={{\r\n              classes,\r\n              label: 'Label',\r\n              placeholder: 'With Popper',\r\n              value: this.state.value,\r\n              onChange: this.onAddressFieldChanged.bind(this),\r\n              inputRef: node => {\r\n                this.popperNode = node;\r\n              },\r\n              InputLabelProps: {\r\n                shrink: true,\r\n              },\r\n            }}\r\n            theme={{\r\n              suggestionsList: classes.suggestionsList,\r\n              suggestion: classes.suggestion,\r\n            }}\r\n            renderSuggestionsContainer={options => (\r\n              <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\r\n                <Paper\r\n                  square\r\n                  {...options.containerProps}\r\n                  style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\r\n                >\r\n                  {options.children}\r\n                </Paper>\r\n              </Popper>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIntegrationAutosuggest.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationAutosuggest);","import React, { Component } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport NavBar from '../../layout/NavBar'\r\nimport MapboxMap from '../../components/MapboxMap'\r\nimport InfoCard from '../../components/InfoCard'\r\nimport createMuiTheme from '../../ui/theme'\r\nimport { getAllFeaturesFromPoint } from '../../utils/features'\r\nimport Button from '@material-ui/core/Button'\r\nimport AutoSearch from '../../components/AutoSearch'\r\n\r\nimport dc2003 from '../../data/DCCA_2003'\r\nimport dc2007 from '../../data/DCCA_2007'\r\nimport dc2011 from '../../data/DCCA_2011'\r\nimport dc2015 from '../../data/DCCA_2015'\r\nimport dc2019 from '../../data/DCCA_2019'\r\nimport electors from '../../data/electors'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  yearButton: {\r\n    position: 'absolute',\r\n    width: 100,\r\n    top: '20%'\r\n  },\r\n  searchBox: {\r\n    position: 'absolute',\r\n    zIndex: 100,\r\n    top: '50%'\r\n  }\r\n})\r\n\r\nconst TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA'\r\nconst LONG = 114.2029\r\nconst LAT = 22.3844\r\nconst ZOOM = 11\r\nconst STYLE_ID = 'mapbox/streets-v9'\r\nconst MIN_ZOOM = 10\r\n\r\nconst color = [\r\n  '#6e40e6',\r\n  '#f49600',\r\n  '#ff5d55',\r\n  '#005ecd',\r\n  '#ad0000'\r\n]\r\n\r\nclass MapPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      dccaList: [dc2003, dc2007, dc2011, dc2015, dc2019],\r\n      open: false,\r\n      map: {\r\n        center: [LONG, LAT],\r\n        zoom: ZOOM,\r\n        styleID: STYLE_ID,\r\n        lastClick: null\r\n      },\r\n      selectedDCCA: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onYearBtnClicked('DCCA_2011')\r\n    this.onYearBtnClicked('DCCA_2015')\r\n  }\r\n\r\n  onMapPanned = (lng, lat, zoom) => {\r\n    this.setState({\r\n      map: {\r\n        center: [lng, lat],\r\n        zoom,\r\n      }\r\n    })\r\n  }\r\n\r\n  onMapClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lngLat.lng, e.lngLat.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint(e.lngLat, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onMapFeatureClicked = (e) => {\r\n    this.setState({\r\n      clickedStateId: e.features[0].id\r\n    })\r\n  }\r\n\r\n  onAutoSuggestClicked = (e) => {\r\n    this.setState({\r\n      map: {\r\n        lastClick : [e.lng, e.lat]\r\n      },\r\n      selectedDCCA: getAllFeaturesFromPoint({lat: parseFloat(e.lat), lng: parseFloat(e.lng)}, this.state.dccaList)\r\n    })\r\n  }\r\n\r\n  onYearBtnClicked = (name) => {\r\n    const idx = this.state.dccaList.findIndex(dcca => dcca.name === name)\r\n    let dccaList = [...this.state.dccaList]\r\n    dccaList.forEach(dcca => {dcca.checked = false})\r\n    dccaList[idx].checked = true\r\n    this.setState({ dccaList })\r\n  }\r\n\r\n  render() {\r\n    const { map: {center, zoom, lastClick}, selectedDCCA, dccaList } = this.state\r\n    const { classes, map } = this.props\r\n\r\n    const currentFeature = dccaList.length > 0 ? dccaList.find(dcca => dcca.checked) : null\r\n    const currentYear = currentFeature ? currentFeature.name.split('_')[1] : null\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {dccaList &&\r\n            <MapboxMap\r\n              mapLayers={dccaList}\r\n              token={TOKEN}\r\n              center={center}\r\n              zoom={zoom}\r\n              styleID={STYLE_ID}\r\n              minZoom={MIN_ZOOM}\r\n              color={color}\r\n              onMapClicked={this.onMapClicked}\r\n              onMapFeatureClicked={this.onMapFeatureClicked}\r\n              onMapPanned={this.onMapPanned}\r\n              clickedStateId={this.state.clickedStateId}\r\n              selectedDCCA={selectedDCCA}\r\n              lastClick={lastClick}\r\n            />}\r\n            <InfoCard \r\n            electors={electors}\r\n            year={currentYear}\r\n            cacode={currentYear && selectedDCCA && selectedDCCA.find(feature => feature.year === currentYear).CACODE}\r\n            />\r\n            \r\n            <AutoSearch \r\n            className={classes.searchBox} \r\n            onAutoSuggestClicked={this.onAutoSuggestClicked}\r\n            />\r\n            <div className={classes.yearButton}>\r\n              <List>\r\n                {dccaList.map((dcca, index) => <ListItem key={`${dcca.name}`}>\r\n                  <Button\r\n                    onClick={() => this.onYearBtnClicked(dcca.name)}\r\n                    key={dcca.name} variant=\"contained\"\r\n                    style={{\r\n                      backgroundColor: dccaList.findIndex(d => d.name === dcca.name && d.checked === true) > -1 ? color[index] : '#e0e0e0'\r\n                    }}\r\n                    className={classes.button}>\r\n                    {dcca.name.split('_')[1]}\r\n                  </Button>\r\n                </ListItem>)}\r\n              </List>\r\n            </div>\r\n        </main>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(MapPage)","import React, { Component } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport NavBar from './layout/NavBar'\r\nimport createMuiTheme from './ui/theme'\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport searchPage from './pages/search'\r\nimport mapPage from './pages/map'\r\n\r\nimport './App.css'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nconst theme = createMuiTheme\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  }\r\n})\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <Router>\r\n        <MuiThemeProvider theme={theme}>\r\n          <div className={classes.root}>\r\n            <CssBaseline />\r\n            <NavBar />\r\n            <Route exact path=\"/\" component={searchPage} />\r\n            <Route exact path=\"/map\" component={mapPage} />\r\n          </div>\r\n        </MuiThemeProvider>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n      <App />,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}